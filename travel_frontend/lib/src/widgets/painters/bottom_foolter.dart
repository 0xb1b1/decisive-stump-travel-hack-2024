import 'package:flutter/cupertino.dart';

class BottomPainter extends CustomPainter {
  @override
  void paint(Canvas canvas, Size size) {
    var path0 = Path()..fillType = PathFillType.nonZero;
    path0.moveTo(0, 0);
    path0.lineTo(1440, 0);
    path0.lineTo(1440, 391);
    path0.lineTo(0, 391);
    path0.close();
    Paint paint0 = Paint();
    paint0.color = const Color(0xFF000000);
    canvas.drawPath(path0, paint0);

    var path1 = Path()..fillType = PathFillType.nonZero;
    path1.moveTo(0, 40);
    path1.cubicTo(0, 17.9086, 17.9086, 0, 40, 0);
    path1.lineTo(1400, 0);
    path1.cubicTo(1422.09, 0, 1440, 17.9086, 1440, 40);
    path1.lineTo(1440, 391);
    path1.lineTo(0, 391);
    path1.lineTo(0, 40);
    path1.close();
    Paint paint1 = Paint();
    paint1.color = const Color(0xFF000000);
    canvas.drawPath(path1, paint1);

    var path2 = Path()..fillType = PathFillType.nonZero;
    path2.moveTo(108, 0);
    path2.lineTo(109, 0);
    path2.lineTo(109, 56);
    path2.lineTo(108, 56);
    path2.close();
    Paint paint2 = Paint();
    paint2.color = const Color(0x03FFFFFF);
    canvas.drawPath(path2, paint2);

    var path3 = Path()..fillType = PathFillType.nonZero;
    path3.moveTo(116.32, 60.8);
    path3.cubicTo(118.38, 60.8, 120.1, 61.52, 121.46, 62.94);
    path3.cubicTo(122.84, 64.36, 123.52, 66.16, 123.52, 68.34);
    path3.cubicTo(123.52, 70.68, 122.84, 72.56, 121.48, 74.02);
    path3.cubicTo(120.12, 75.48, 118.4, 76.2, 116.32, 76.2);
    path3.cubicTo(114.22, 76.2, 112.48, 75.48, 111.12, 74.04);
    path3.cubicTo(109.78, 72.58, 109.1, 70.68, 109.1, 68.34);
    path3.cubicTo(109.1, 66.14, 109.78, 64.34, 111.14, 62.92);
    path3.cubicTo(112.5, 61.5, 114.22, 60.8, 116.32, 60.8);
    path3.close();
    path3.moveTo(116.32, 63.4);
    path3.cubicTo(113.66, 63.4, 112.1, 65.36, 112.1, 68.5);
    path3.cubicTo(112.1, 71.72, 113.62, 73.6, 116.32, 73.6);
    path3.cubicTo(118.96, 73.6, 120.52, 71.72, 120.52, 68.5);
    path3.cubicTo(120.52, 65.36, 118.94, 63.4, 116.32, 63.4);
    path3.close();
    path3.moveTo(133.13, 71.8);
    path3.lineTo(133.13, 76);
    path3.lineTo(130.53, 76);
    path3.lineTo(130.53, 66);
    path3.lineTo(133.13, 66);
    path3.lineTo(133.13, 70);
    path3.lineTo(136.83, 70);
    path3.lineTo(136.83, 66);
    path3.lineTo(139.43, 66);
    path3.lineTo(139.43, 76);
    path3.lineTo(136.83, 76);
    path3.lineTo(136.83, 71.8);
    path3.lineTo(133.13, 71.8);
    path3.close();
    path3.moveTo(144.314, 69.78);
    path3.lineTo(141.934, 68.9);
    path3.cubicTo(142.394, 66.84, 144.254, 65.8, 146.654, 65.8);
    path3.cubicTo(149.674, 65.8, 150.874, 66.68, 150.874, 68.9);
    path3.lineTo(150.874, 73.8);
    path3.lineTo(152.574, 73.8);
    path3.lineTo(152.574, 76);
    path3.lineTo(147.994, 76);
    path3.lineTo(148.274, 74.42);
    path3.lineTo(148.274, 73.96);
    path3.lineTo(147.034, 75.48);
    path3.cubicTo(146.314, 75.96, 145.534, 76.2, 144.714, 76.2);
    path3.cubicTo(142.954, 76.2, 141.834, 75.2, 141.834, 73.54);
    path3.cubicTo(141.834, 72.4, 142.194, 71.7, 143.054, 71.3);
    path3.cubicTo(143.494, 71.08, 143.934, 70.92, 144.374, 70.82);
    path3.cubicTo(144.834, 70.7, 145.434, 70.54, 146.214, 70.36);
    path3.cubicTo(146.994, 70.16, 147.674, 69.96, 148.274, 69.74);
    path3.lineTo(148.274, 69.32);
    path3.cubicTo(148.274, 68.26, 147.774, 67.76, 146.554, 67.76);
    path3.cubicTo(145.854, 67.76, 145.354, 67.9, 145.054, 68.2);
    path3.cubicTo(144.774, 68.48, 144.534, 69, 144.314, 69.78);
    path3.close();
    path3.moveTo(144.674, 73.08);
    path3.cubicTo(144.674, 73.82, 145.174, 74.32, 145.974, 74.32);
    path3.cubicTo(146.394, 74.32, 146.854, 74.14, 147.314, 73.8);
    path3.cubicTo(147.774, 73.44, 148.094, 72.94, 148.274, 72.3);
    path3.lineTo(148.274, 70.52);
    path3.cubicTo(146.854, 70.96, 145.894, 71.36, 145.394, 71.7);
    path3.cubicTo(144.914, 72.04, 144.674, 72.5, 144.674, 73.08);
    path3.close();
    path3.moveTo(154.173, 70.98);
    path3.cubicTo(154.173, 69.48, 154.673, 68.26, 155.693, 67.28);
    path3.cubicTo(156.713, 66.3, 157.973, 65.8, 159.453, 65.8);
    path3.cubicTo(160.513, 65.8, 161.473, 66.12, 162.313, 66.74);
    path3.cubicTo(163.173, 67.36, 163.713, 68.18, 163.953, 69.2);
    path3.lineTo(161.573, 70.08);
    path3.cubicTo(161.253, 68.34, 160.493, 67.48, 159.293, 67.48);
    path3.cubicTo(157.933, 67.48, 157.073, 68.74, 157.073, 70.98);
    path3.cubicTo(157.073, 73.28, 158.033, 74.48, 159.313, 74.48);
    path3.cubicTo(160.513, 74.48, 161.173, 73.6, 161.573, 71.68);
    path3.lineTo(163.953, 72.56);
    path3.cubicTo(163.753, 73.64, 163.233, 74.52, 162.373, 75.2);
    path3.cubicTo(161.513, 75.86, 160.553, 76.2, 159.453, 76.2);
    path3.cubicTo(157.973, 76.2, 156.713, 75.72, 155.693, 74.74);
    path3.cubicTo(154.673, 73.76, 154.173, 72.5, 154.173, 70.98);
    path3.close();
    Paint paint3 = Paint();
    paint3.color = const Color(0xFFFFFFFF);
    canvas.drawPath(path3, paint3);

    var path4 = Path()..fillType = PathFillType.nonZero;
    path4.moveTo(108, 80);
    path4.lineTo(109, 80);
    path4.lineTo(109, 96);
    path4.lineTo(108, 96);
    path4.close();
    Paint paint4 = Paint();
    paint4.color = const Color(0x03FFFFFF);
    canvas.drawPath(path4, paint4);

    var path5 = Path()..fillType = PathFillType.nonZero;
    path5.moveTo(118.672, 113);
    path5.lineTo(116.64, 113);
    path5.lineTo(116.64, 103.096);
    path5.lineTo(111.392, 103.096);
    path5.lineTo(111.392, 113);
    path5.lineTo(109.36, 113);
    path5.lineTo(109.36, 101.4);
    path5.lineTo(118.672, 101.4);
    path5.lineTo(118.672, 113);
    path5.close();
    path5.moveTo(126.431, 109.608);
    path5.lineTo(126.431, 108.952);
    path5.cubicTo(123.711, 109.208, 122.607, 109.608, 122.607, 110.584);
    path5.cubicTo(122.607, 111.336, 123.231, 111.784, 124.191, 111.784);
    path5.cubicTo(125.599, 111.784, 126.431, 111.08, 126.431, 109.608);
    path5.close();
    path5.moveTo(123.775, 113.208);
    path5.cubicTo(121.903, 113.208, 120.591, 112.2, 120.591, 110.632);
    path5.cubicTo(120.591, 108.472, 123.247, 107.96, 126.383, 107.624);
    path5.lineTo(126.383, 107.464);
    path5.cubicTo(126.383, 105.992, 125.551, 105.544, 124.591, 105.544);
    path5.cubicTo(123.631, 105.544, 122.911, 106.056, 122.863, 107.096);
    path5.lineTo(120.991, 107.096);
    path5.cubicTo(121.119, 105.352, 122.575, 104.136, 124.655, 104.136);
    path5.cubicTo(126.719, 104.136, 128.335, 105.08, 128.287, 107.832);
    path5.cubicTo(128.287, 108.248, 128.255, 109.272, 128.255, 110.056);
    path5.cubicTo(128.255, 111.144, 128.335, 112.28, 128.511, 113);
    path5.lineTo(126.767, 113);
    path5.cubicTo(126.703, 112.632, 126.655, 112.424, 126.607, 111.832);
    path5.cubicTo(126.047, 112.776, 125.055, 113.208, 123.775, 113.208);
    path5.close();
    path5.moveTo(132.037, 108.696);
    path5.cubicTo(132.037, 110.68, 133.013, 111.656, 134.261, 111.656);
    path5.cubicTo(135.605, 111.656, 136.389, 110.536, 136.389, 108.696);
    path5.cubicTo(136.389, 106.888, 135.605, 105.752, 134.261, 105.752);
    path5.cubicTo(133.013, 105.752, 132.037, 106.712, 132.037, 108.696);
    path5.close();
    path5.moveTo(130.213, 104.392);
    path5.lineTo(132.117, 104.392);
    path5.lineTo(132.117, 105.544);
    path5.cubicTo(132.629, 104.696, 133.525, 104.2, 134.677, 104.2);
    path5.cubicTo(136.789, 104.2, 138.373, 105.944, 138.373, 108.696);
    path5.cubicTo(138.373, 111.464, 136.789, 113.208, 134.677, 113.208);
    path5.cubicTo(133.525, 113.208, 132.629, 112.712, 132.117, 111.864);
    path5.lineTo(132.117, 115.8);
    path5.lineTo(130.213, 115.8);
    path5.lineTo(130.213, 104.392);
    path5.close();
    path5.moveTo(146.594, 105.896);
    path5.lineTo(143.666, 105.896);
    path5.lineTo(143.666, 113);
    path5.lineTo(141.762, 113);
    path5.lineTo(141.762, 105.896);
    path5.lineTo(138.818, 105.896);
    path5.lineTo(138.818, 104.392);
    path5.lineTo(146.594, 104.392);
    path5.lineTo(146.594, 105.896);
    path5.close();
    path5.moveTo(155.628, 113);
    path5.lineTo(153.724, 113);
    path5.lineTo(153.724, 109.336);
    path5.lineTo(149.884, 109.336);
    path5.lineTo(149.884, 113);
    path5.lineTo(147.98, 113);
    path5.lineTo(147.98, 104.392);
    path5.lineTo(149.884, 104.392);
    path5.lineTo(149.884, 107.832);
    path5.lineTo(153.724, 107.832);
    path5.lineTo(153.724, 104.392);
    path5.lineTo(155.628, 104.392);
    path5.lineTo(155.628, 113);
    path5.close();
    path5.moveTo(165.629, 109.24);
    path5.lineTo(159.213, 109.24);
    path5.cubicTo(159.341, 110.84, 160.461, 111.624, 161.549, 111.624);
    path5.cubicTo(162.557, 111.624, 163.325, 111.24, 163.661, 110.424);
    path5.lineTo(165.533, 110.424);
    path5.cubicTo(165.149, 111.8, 163.837, 113.208, 161.629, 113.208);
    path5.cubicTo(158.861, 113.208, 157.277, 111.112, 157.277, 108.632);
    path5.cubicTo(157.277, 106.04, 159.053, 104.2, 161.501, 104.2);
    path5.cubicTo(164.141, 104.2, 165.805, 106.36, 165.629, 109.24);
    path5.close();
    path5.moveTo(161.501, 105.688);
    path5.cubicTo(160.605, 105.688, 159.389, 106.232, 159.213, 107.848);
    path5.lineTo(163.693, 107.848);
    path5.cubicTo(163.645, 106.504, 162.621, 105.688, 161.501, 105.688);
    path5.close();
    path5.moveTo(169.037, 108.696);
    path5.cubicTo(169.037, 110.68, 170.013, 111.656, 171.261, 111.656);
    path5.cubicTo(172.605, 111.656, 173.389, 110.536, 173.389, 108.696);
    path5.cubicTo(173.389, 106.888, 172.605, 105.752, 171.261, 105.752);
    path5.cubicTo(170.013, 105.752, 169.037, 106.712, 169.037, 108.696);
    path5.close();
    path5.moveTo(167.213, 104.392);
    path5.lineTo(169.117, 104.392);
    path5.lineTo(169.117, 105.544);
    path5.cubicTo(169.629, 104.696, 170.525, 104.2, 171.677, 104.2);
    path5.cubicTo(173.789, 104.2, 175.373, 105.944, 175.373, 108.696);
    path5.cubicTo(175.373, 111.464, 173.789, 113.208, 171.677, 113.208);
    path5.cubicTo(170.525, 113.208, 169.629, 112.712, 169.117, 111.864);
    path5.lineTo(169.117, 115.8);
    path5.lineTo(167.213, 115.8);
    path5.lineTo(167.213, 104.392);
    path5.close();
    path5.moveTo(180.291, 113);
    path5.lineTo(177.011, 113);
    path5.lineTo(177.011, 104.392);
    path5.lineTo(178.915, 104.392);
    path5.lineTo(178.915, 107.288);
    path5.lineTo(180.243, 107.288);
    path5.cubicTo(182.611, 107.288, 183.619, 108.184, 183.619, 110.088);
    path5.cubicTo(183.619, 112.264, 182.403, 113, 180.291, 113);
    path5.close();
    path5.moveTo(178.915, 108.792);
    path5.lineTo(178.915, 111.496);
    path5.lineTo(180.019, 111.496);
    path5.cubicTo(181.171, 111.496, 181.715, 111.16, 181.715, 110.072);
    path5.cubicTo(181.715, 109.096, 181.155, 108.792, 180.003, 108.792);
    path5.lineTo(178.915, 108.792);
    path5.close();
    path5.moveTo(186.755, 113);
    path5.lineTo(184.851, 113);
    path5.lineTo(184.851, 104.392);
    path5.lineTo(186.755, 104.392);
    path5.lineTo(186.755, 113);
    path5.close();
    Paint paint5 = Paint();
    paint5.color = const Color(0xFF000000);
    canvas.drawPath(path5, paint5);

    var path6 = Path()..fillType = PathFillType.nonZero;
    path6.moveTo(108, 118);
    path6.lineTo(109, 118);
    path6.lineTo(109, 126);
    path6.lineTo(108, 126);
    path6.close();
    Paint paint6 = Paint();
    paint6.color = const Color(0x03FFFFFF);
    canvas.drawPath(path6, paint6);

    var path7 = Path()..fillType = PathFillType.nonZero;
    path7.moveTo(110.816, 137.192);
    path7.cubicTo(110.816, 140.024, 112.336, 141.544, 114.256, 141.544);
    path7.cubicTo(116.176, 141.544, 117.696, 140.024, 117.696, 137.192);
    path7.cubicTo(117.696, 134.376, 116.176, 132.856, 114.256, 132.856);
    path7.cubicTo(112.336, 132.856, 110.816, 134.376, 110.816, 137.192);
    path7.close();
    path7.moveTo(119.792, 137.192);
    path7.cubicTo(119.792, 140.76, 117.664, 143.208, 114.256, 143.208);
    path7.cubicTo(110.848, 143.208, 108.72, 140.76, 108.72, 137.192);
    path7.cubicTo(108.72, 133.608, 110.848, 131.192, 114.256, 131.192);
    path7.cubicTo(117.664, 131.192, 119.792, 133.608, 119.792, 137.192);
    path7.close();
    path7.moveTo(125.732, 134.904);
    path7.cubicTo(127.732, 134.904, 129.476, 136.28, 129.476, 138.984);
    path7.cubicTo(129.476, 141.752, 127.54, 143.208, 125.38, 143.208);
    path7.cubicTo(123.108, 143.208, 121.22, 141.592, 121.22, 138.28);
    path7.lineTo(121.22, 137.512);
    path7.cubicTo(121.268, 134.392, 122.724, 132.136, 125.78, 131.672);
    path7.lineTo(128.788, 131.208);
    path7.lineTo(128.788, 132.872);
    path7.lineTo(125.876, 133.352);
    path7.cubicTo(124.324, 133.608, 123.076, 134.36, 122.772, 136.488);
    path7.cubicTo(123.396, 135.4, 124.516, 134.904, 125.732, 134.904);
    path7.close();
    path7.moveTo(125.38, 141.672);
    path7.cubicTo(126.644, 141.672, 127.508, 140.728, 127.508, 138.984);
    path7.cubicTo(127.508, 137.272, 126.548, 136.408, 125.396, 136.408);
    path7.cubicTo(124.196, 136.408, 123.14, 137.256, 123.14, 138.984);
    path7.cubicTo(123.14, 140.664, 124.084, 141.672, 125.38, 141.672);
    path7.close();
    path7.moveTo(132.802, 138.696);
    path7.cubicTo(132.802, 140.68, 133.778, 141.656, 135.026, 141.656);
    path7.cubicTo(136.37, 141.656, 137.154, 140.536, 137.154, 138.696);
    path7.cubicTo(137.154, 136.888, 136.37, 135.752, 135.026, 135.752);
    path7.cubicTo(133.778, 135.752, 132.802, 136.712, 132.802, 138.696);
    path7.close();
    path7.moveTo(130.978, 134.392);
    path7.lineTo(132.882, 134.392);
    path7.lineTo(132.882, 135.544);
    path7.cubicTo(133.394, 134.696, 134.29, 134.2, 135.442, 134.2);
    path7.cubicTo(137.554, 134.2, 139.138, 135.944, 139.138, 138.696);
    path7.cubicTo(139.138, 141.464, 137.554, 143.208, 135.442, 143.208);
    path7.cubicTo(134.29, 143.208, 133.394, 142.712, 132.882, 141.864);
    path7.lineTo(132.882, 145.8);
    path7.lineTo(130.978, 145.8);
    path7.lineTo(130.978, 134.392);
    path7.close();
    path7.moveTo(145.947, 139.608);
    path7.lineTo(145.947, 138.952);
    path7.cubicTo(143.227, 139.208, 142.123, 139.608, 142.123, 140.584);
    path7.cubicTo(142.123, 141.336, 142.747, 141.784, 143.707, 141.784);
    path7.cubicTo(145.115, 141.784, 145.947, 141.08, 145.947, 139.608);
    path7.close();
    path7.moveTo(143.291, 143.208);
    path7.cubicTo(141.419, 143.208, 140.107, 142.2, 140.107, 140.632);
    path7.cubicTo(140.107, 138.472, 142.763, 137.96, 145.899, 137.624);
    path7.lineTo(145.899, 137.464);
    path7.cubicTo(145.899, 135.992, 145.067, 135.544, 144.107, 135.544);
    path7.cubicTo(143.147, 135.544, 142.427, 136.056, 142.379, 137.096);
    path7.lineTo(140.507, 137.096);
    path7.cubicTo(140.635, 135.352, 142.091, 134.136, 144.171, 134.136);
    path7.cubicTo(146.235, 134.136, 147.851, 135.08, 147.803, 137.832);
    path7.cubicTo(147.803, 138.248, 147.771, 139.272, 147.771, 140.056);
    path7.cubicTo(147.771, 141.144, 147.851, 142.28, 148.027, 143);
    path7.lineTo(146.283, 143);
    path7.cubicTo(146.219, 142.632, 146.171, 142.424, 146.123, 141.832);
    path7.cubicTo(145.563, 142.776, 144.571, 143.208, 143.291, 143.208);
    path7.close();
    path7.moveTo(156.547, 135.896);
    path7.lineTo(153.619, 135.896);
    path7.lineTo(153.619, 143);
    path7.lineTo(151.715, 143);
    path7.lineTo(151.715, 135.896);
    path7.lineTo(148.771, 135.896);
    path7.lineTo(148.771, 134.392);
    path7.lineTo(156.547, 134.392);
    path7.lineTo(156.547, 135.896);
    path7.close();
    path7.moveTo(165.581, 143);
    path7.lineTo(163.677, 143);
    path7.lineTo(163.677, 139.336);
    path7.lineTo(159.837, 139.336);
    path7.lineTo(159.837, 143);
    path7.lineTo(157.933, 143);
    path7.lineTo(157.933, 134.392);
    path7.lineTo(159.837, 134.392);
    path7.lineTo(159.837, 137.832);
    path7.lineTo(163.677, 137.832);
    path7.lineTo(163.677, 134.392);
    path7.lineTo(165.581, 134.392);
    path7.lineTo(165.581, 143);
    path7.close();
    path7.moveTo(173.134, 139.608);
    path7.lineTo(173.134, 138.952);
    path7.cubicTo(170.414, 139.208, 169.31, 139.608, 169.31, 140.584);
    path7.cubicTo(169.31, 141.336, 169.934, 141.784, 170.894, 141.784);
    path7.cubicTo(172.302, 141.784, 173.134, 141.08, 173.134, 139.608);
    path7.close();
    path7.moveTo(170.478, 143.208);
    path7.cubicTo(168.606, 143.208, 167.294, 142.2, 167.294, 140.632);
    path7.cubicTo(167.294, 138.472, 169.95, 137.96, 173.086, 137.624);
    path7.lineTo(173.086, 137.464);
    path7.cubicTo(173.086, 135.992, 172.254, 135.544, 171.294, 135.544);
    path7.cubicTo(170.334, 135.544, 169.614, 136.056, 169.566, 137.096);
    path7.lineTo(167.694, 137.096);
    path7.cubicTo(167.822, 135.352, 169.278, 134.136, 171.358, 134.136);
    path7.cubicTo(173.422, 134.136, 175.038, 135.08, 174.99, 137.832);
    path7.cubicTo(174.99, 138.248, 174.958, 139.272, 174.958, 140.056);
    path7.cubicTo(174.958, 141.144, 175.038, 142.28, 175.214, 143);
    path7.lineTo(173.47, 143);
    path7.cubicTo(173.406, 142.632, 173.358, 142.424, 173.31, 141.832);
    path7.cubicTo(172.75, 142.776, 171.758, 143.208, 170.478, 143.208);
    path7.close();
    path7.moveTo(183.732, 134.392);
    path7.lineTo(183.732, 143);
    path7.lineTo(181.828, 143);
    path7.lineTo(181.828, 140.024);
    path7.lineTo(180.116, 140.024);
    path7.lineTo(178.356, 143);
    path7.lineTo(176.196, 143);
    path7.lineTo(178.356, 139.528);
    path7.cubicTo(177.444, 139.16, 176.772, 138.36, 176.772, 137.128);
    path7.cubicTo(176.772, 135.384, 177.908, 134.392, 180.068, 134.392);
    path7.lineTo(183.732, 134.392);
    path7.close();
    path7.moveTo(181.828, 135.896);
    path7.lineTo(180.34, 135.896);
    path7.cubicTo(179.332, 135.896, 178.708, 136.376, 178.708, 137.272);
    path7.cubicTo(178.708, 138.184, 179.3, 138.52, 180.26, 138.52);
    path7.lineTo(181.828, 138.52);
    path7.lineTo(181.828, 135.896);
    path7.close();
    path7.moveTo(193.282, 134.2);
    path7.cubicTo(195.17, 134.2, 196.802, 135.432, 197.138, 137.336);
    path7.lineTo(195.282, 137.336);
    path7.cubicTo(195.106, 136.424, 194.322, 135.784, 193.282, 135.784);
    path7.cubicTo(192.082, 135.784, 191.026, 136.664, 191.026, 138.696);
    path7.cubicTo(191.026, 140.744, 192.114, 141.624, 193.234, 141.624);
    path7.cubicTo(194.178, 141.624, 195.09, 141.208, 195.346, 140.056);
    path7.lineTo(197.202, 140.056);
    path7.cubicTo(196.818, 142.072, 195.042, 143.208, 193.202, 143.208);
    path7.cubicTo(190.706, 143.208, 189.058, 141.272, 189.058, 138.712);
    path7.cubicTo(189.058, 136.152, 190.706, 134.2, 193.282, 134.2);
    path7.close();
    path7.moveTo(198.761, 134.392);
    path7.lineTo(202.809, 134.392);
    path7.cubicTo(204.601, 134.392, 206.041, 134.84, 206.041, 136.616);
    path7.cubicTo(206.041, 137.496, 205.657, 138.104, 204.905, 138.44);
    path7.cubicTo(205.753, 138.696, 206.393, 139.288, 206.393, 140.424);
    path7.cubicTo(206.393, 142.264, 204.953, 143, 203.017, 143);
    path7.lineTo(198.761, 143);
    path7.lineTo(198.761, 134.392);
    path7.close();
    path7.moveTo(200.665, 137.912);
    path7.lineTo(202.665, 137.912);
    path7.cubicTo(203.609, 137.912, 204.153, 137.64, 204.153, 136.872);
    path7.cubicTo(204.153, 136.12, 203.593, 135.88, 202.649, 135.88);
    path7.lineTo(200.665, 135.88);
    path7.lineTo(200.665, 137.912);
    path7.close();
    path7.moveTo(200.665, 139.288);
    path7.lineTo(200.665, 141.512);
    path7.lineTo(202.793, 141.512);
    path7.cubicTo(203.929, 141.512, 204.489, 141.128, 204.489, 140.36);
    path7.cubicTo(204.489, 139.544, 203.929, 139.288, 202.777, 139.288);
    path7.lineTo(200.665, 139.288);
    path7.close();
    path7.moveTo(214.857, 134.392);
    path7.lineTo(214.857, 143);
    path7.lineTo(212.953, 143);
    path7.lineTo(212.953, 140.024);
    path7.lineTo(211.241, 140.024);
    path7.lineTo(209.481, 143);
    path7.lineTo(207.321, 143);
    path7.lineTo(209.481, 139.528);
    path7.cubicTo(208.569, 139.16, 207.897, 138.36, 207.897, 137.128);
    path7.cubicTo(207.897, 135.384, 209.033, 134.392, 211.193, 134.392);
    path7.lineTo(214.857, 134.392);
    path7.close();
    path7.moveTo(212.953, 135.896);
    path7.lineTo(211.465, 135.896);
    path7.cubicTo(210.457, 135.896, 209.833, 136.376, 209.833, 137.272);
    path7.cubicTo(209.833, 138.184, 210.425, 138.52, 211.385, 138.52);
    path7.lineTo(212.953, 138.52);
    path7.lineTo(212.953, 135.896);
    path7.close();
    path7.moveTo(222.48, 138.456);
    path7.cubicTo(223.424, 138.728, 224, 139.32, 224, 140.472);
    path7.cubicTo(224, 142.376, 222.336, 143.208, 220.176, 143.208);
    path7.cubicTo(218.288, 143.208, 216.608, 142.392, 216.304, 140.2);
    path7.lineTo(218.128, 140.2);
    path7.cubicTo(218.304, 141.176, 219.024, 141.8, 220.24, 141.8);
    path7.cubicTo(221.456, 141.8, 222.096, 141.32, 222.096, 140.568);
    path7.cubicTo(222.096, 139.672, 221.488, 139.336, 220.4, 139.336);
    path7.lineTo(218.992, 139.336);
    path7.lineTo(218.992, 137.848);
    path7.lineTo(220.304, 137.848);
    path7.cubicTo(221.248, 137.848, 221.84, 137.528, 221.84, 136.776);
    path7.cubicTo(221.84, 135.992, 221.376, 135.592, 220.304, 135.592);
    path7.cubicTo(219.232, 135.592, 218.368, 136.104, 218.224, 137.176);
    path7.lineTo(216.4, 137.176);
    path7.cubicTo(216.704, 135.144, 218.432, 134.168, 220.336, 134.168);
    path7.cubicTo(222.208, 134.168, 223.728, 134.92, 223.728, 136.648);
    path7.cubicTo(223.728, 137.496, 223.312, 138.088, 222.48, 138.456);
    path7.close();
    path7.moveTo(227.54, 137.288);
    path7.lineTo(229.316, 137.288);
    path7.cubicTo(231.684, 137.288, 232.676, 138.184, 232.676, 140.088);
    path7.cubicTo(232.676, 142.264, 231.492, 143, 229.348, 143);
    path7.lineTo(225.636, 143);
    path7.lineTo(225.636, 134.392);
    path7.lineTo(227.54, 134.392);
    path7.lineTo(227.54, 137.288);
    path7.close();
    path7.moveTo(227.54, 141.496);
    path7.lineTo(229.092, 141.496);
    path7.cubicTo(230.228, 141.496, 230.788, 141.112, 230.788, 140.072);
    path7.cubicTo(230.788, 139.112, 230.228, 138.792, 229.076, 138.792);
    path7.lineTo(227.54, 138.792);
    path7.lineTo(227.54, 141.496);
    path7.close();
    Paint paint7 = Paint();
    paint7.color = const Color(0xFF000000);
    canvas.drawPath(path7, paint7);

    var path8 = Path()..fillType = PathFillType.nonZero;
    path8.moveTo(108, 148);
    path8.lineTo(109, 148);
    path8.lineTo(109, 156);
    path8.lineTo(108, 156);
    path8.close();
    Paint paint8 = Paint();
    paint8.color = const Color(0x03FFFFFF);
    canvas.drawPath(path8, paint8);

    var path9 = Path()..fillType = PathFillType.nonZero;
    path9.moveTo(109.168, 173);
    path9.lineTo(109.168, 161.4);
    path9.lineTo(117.264, 161.4);
    path9.lineTo(117.264, 163.096);
    path9.lineTo(111.2, 163.096);
    path9.lineTo(111.2, 166.2);
    path9.lineTo(116.912, 166.2);
    path9.lineTo(116.912, 167.88);
    path9.lineTo(111.2, 167.88);
    path9.lineTo(111.2, 173);
    path9.lineTo(109.168, 173);
    path9.close();
    path9.moveTo(116.484, 173);
    path9.lineTo(120.804, 161.4);
    path9.lineTo(122.948, 161.4);
    path9.lineTo(127.3, 173);
    path9.lineTo(125.076, 173);
    path9.lineTo(124.164, 170.424);
    path9.lineTo(119.46, 170.424);
    path9.lineTo(118.564, 173);
    path9.lineTo(116.484, 173);
    path9.close();
    path9.moveTo(121.796, 163.752);
    path9.lineTo(120.052, 168.728);
    path9.lineTo(123.556, 168.728);
    path9.lineTo(121.796, 163.752);
    path9.close();
    path9.moveTo(138.432, 167.192);
    path9.cubicTo(138.432, 169.128, 137.824, 170.712, 136.688, 171.784);
    path9.lineTo(138.064, 173.416);
    path9.lineTo(136.816, 174.456);
    path9.lineTo(135.344, 172.712);
    path9.cubicTo(134.624, 173.048, 133.808, 173.208, 132.896, 173.208);
    path9.cubicTo(129.488, 173.208, 127.36, 170.76, 127.36, 167.192);
    path9.cubicTo(127.36, 163.608, 129.488, 161.192, 132.896, 161.192);
    path9.cubicTo(136.304, 161.192, 138.432, 163.608, 138.432, 167.192);
    path9.close();
    path9.moveTo(129.456, 167.192);
    path9.cubicTo(129.456, 170.024, 130.976, 171.544, 132.896, 171.544);
    path9.cubicTo(133.36, 171.544, 133.792, 171.464, 134.16, 171.288);
    path9.lineTo(133.216, 170.152);
    path9.lineTo(134.448, 169.112);
    path9.lineTo(135.44, 170.296);
    path9.cubicTo(136, 169.544, 136.336, 168.536, 136.336, 167.192);
    path9.cubicTo(136.336, 164.376, 134.816, 162.856, 132.896, 162.856);
    path9.cubicTo(130.976, 162.856, 129.456, 164.376, 129.456, 167.192);
    path9.close();
    Paint paint9 = Paint();
    paint9.color = const Color(0xFF000000);
    canvas.drawPath(path9, paint9);

    var path10 = Path()..fillType = PathFillType.nonZero;
    path10.moveTo(438.933, 76);
    path10.lineTo(436.133, 76);
    path10.lineTo(436.133, 63.3);
    path10.lineTo(429.533, 63.3);
    path10.lineTo(429.533, 76);
    path10.lineTo(426.733, 76);
    path10.lineTo(426.733, 61);
    path10.lineTo(438.933, 61);
    path10.lineTo(438.933, 76);
    path10.close();
    path10.moveTo(447.633, 76.2);
    path10.cubicTo(445.773, 76.2, 444.633, 75.18, 444.233, 73.14);
    path10.lineTo(444.233, 81);
    path10.lineTo(441.633, 81);
    path10.lineTo(441.633, 66);
    path10.lineTo(444.233, 66);
    path10.lineTo(444.233, 68.9);
    path10.cubicTo(444.633, 66.84, 445.773, 65.8, 447.633, 65.8);
    path10.cubicTo(448.753, 65.8, 449.713, 66.26, 450.513, 67.16);
    path10.cubicTo(451.313, 68.06, 451.713, 69.36, 451.713, 71.06);
    path10.cubicTo(451.713, 72.72, 451.313, 73.98, 450.513, 74.88);
    path10.cubicTo(449.713, 75.76, 448.753, 76.2, 447.633, 76.2);
    path10.close();
    path10.moveTo(448.833, 71.06);
    path10.cubicTo(448.833, 68.88, 447.873, 67.62, 446.493, 67.62);
    path10.cubicTo(445.133, 67.62, 444.313, 68.84, 444.313, 71.06);
    path10.cubicTo(444.313, 73.2, 445.153, 74.42, 446.493, 74.42);
    path10.cubicTo(447.853, 74.42, 448.833, 73.16, 448.833, 71.06);
    path10.close();
    path10.moveTo(458.756, 65.8);
    path10.cubicTo(460.216, 65.8, 461.436, 66.3, 462.416, 67.28);
    path10.cubicTo(463.396, 68.26, 463.896, 69.5, 463.896, 71);
    path10.cubicTo(463.896, 72.5, 463.396, 73.76, 462.416, 74.74);
    path10.cubicTo(461.436, 75.72, 460.216, 76.2, 458.756, 76.2);
    path10.cubicTo(457.316, 76.2, 456.096, 75.72, 455.096, 74.74);
    path10.cubicTo(454.116, 73.76, 453.616, 72.5, 453.616, 71);
    path10.cubicTo(453.616, 69.5, 454.116, 68.26, 455.096, 67.28);
    path10.cubicTo(456.096, 66.3, 457.316, 65.8, 458.756, 65.8);
    path10.close();
    path10.moveTo(458.776, 67.48);
    path10.cubicTo(457.276, 67.48, 456.516, 68.66, 456.516, 71);
    path10.cubicTo(456.516, 73.22, 457.356, 74.48, 458.776, 74.48);
    path10.cubicTo(460.196, 74.48, 460.996, 73.22, 460.996, 71);
    path10.cubicTo(460.996, 68.66, 460.256, 67.48, 458.776, 67.48);
    path10.close();
    path10.moveTo(472.927, 72.08);
    path10.lineTo(475.567, 72.08);
    path10.cubicTo(475.527, 73.08, 475.087, 74.02, 474.227, 74.9);
    path10.cubicTo(473.367, 75.76, 472.227, 76.2, 470.807, 76.2);
    path10.cubicTo(469.167, 76.2, 467.907, 75.72, 467.007, 74.76);
    path10.cubicTo(466.127, 73.8, 465.687, 72.58, 465.687, 71.08);
    path10.cubicTo(465.687, 69.5, 466.167, 68.22, 467.107, 67.26);
    path10.cubicTo(468.047, 66.28, 469.247, 65.8, 470.707, 65.8);
    path10.cubicTo(473.827, 65.8, 475.487, 67.76, 475.567, 71.02);
    path10.lineTo(468.587, 71.02);
    path10.lineTo(468.587, 71.12);
    path10.cubicTo(468.587, 73.18, 469.367, 74.36, 470.827, 74.36);
    path10.cubicTo(472.047, 74.36, 472.747, 73.6, 472.927, 72.08);
    path10.close();
    path10.moveTo(470.727, 67.64);
    path10.cubicTo(469.567, 67.64, 468.887, 68.42, 468.667, 69.96);
    path10.lineTo(472.727, 69.96);
    path10.cubicTo(472.727, 68.7, 472.007, 67.64, 470.727, 67.64);
    path10.close();
    path10.moveTo(487.686, 76);
    path10.lineTo(484.486, 76);
    path10.lineTo(480.366, 71.38);
    path10.lineTo(480.366, 76);
    path10.lineTo(477.766, 76);
    path10.lineTo(477.766, 66);
    path10.lineTo(480.366, 66);
    path10.lineTo(480.366, 70.3);
    path10.lineTo(484.186, 66);
    path10.lineTo(487.286, 66);
    path10.lineTo(482.966, 70.56);
    path10.lineTo(487.686, 76);
    path10.close();
    path10.moveTo(494.487, 67.8);
    path10.lineTo(494.487, 76);
    path10.lineTo(491.887, 76);
    path10.lineTo(491.887, 67.8);
    path10.lineTo(488.487, 67.8);
    path10.lineTo(488.487, 66);
    path10.lineTo(497.887, 66);
    path10.lineTo(497.887, 67.8);
    path10.lineTo(494.487, 67.8);
    path10.close();
    path10.moveTo(512.083, 66);
    path10.lineTo(512.083, 76);
    path10.lineTo(509.483, 76);
    path10.lineTo(509.483, 66);
    path10.lineTo(512.083, 66);
    path10.close();
    path10.moveTo(508.003, 72.58);
    path10.cubicTo(508.003, 74.86, 506.643, 76, 503.903, 76);
    path10.lineTo(499.583, 76);
    path10.lineTo(499.583, 66);
    path10.lineTo(502.183, 66);
    path10.lineTo(502.183, 69.44);
    path10.lineTo(504.263, 69.44);
    path10.cubicTo(505.323, 69.44, 506.223, 69.7, 506.923, 70.24);
    path10.cubicTo(507.643, 70.78, 508.003, 71.56, 508.003, 72.58);
    path10.close();
    path10.moveTo(505.383, 72.6);
    path10.cubicTo(505.383, 71.7, 504.783, 71.24, 503.583, 71.24);
    path10.lineTo(502.183, 71.24);
    path10.lineTo(502.183, 74.2);
    path10.lineTo(503.563, 74.2);
    path10.cubicTo(504.843, 74.2, 505.383, 73.7, 505.383, 72.6);
    path10.close();
    path10.moveTo(433.333, 93.26);
    path10.lineTo(429.233, 100);
    path10.lineTo(426.633, 100);
    path10.lineTo(426.633, 90);
    path10.lineTo(429.233, 90);
    path10.lineTo(429.233, 96.74);
    path10.lineTo(433.333, 90);
    path10.lineTo(435.933, 90);
    path10.lineTo(435.933, 100);
    path10.lineTo(433.333, 100);
    path10.lineTo(433.333, 93.26);
    path10.close();
    path10.moveTo(445.537, 100);
    path10.lineTo(443.137, 100);
    path10.lineTo(443.137, 90);
    path10.lineTo(446.857, 90);
    path10.lineTo(449.657, 96.4);
    path10.lineTo(452.457, 90);
    path10.lineTo(455.997, 90);
    path10.lineTo(455.997, 100);
    path10.lineTo(453.497, 100);
    path10.lineTo(453.497, 92.68);
    path10.lineTo(450.157, 100);
    path10.lineTo(448.857, 100);
    path10.lineTo(445.537, 92.54);
    path10.lineTo(445.537, 100);
    path10.close();
    path10.moveTo(465.446, 96.08);
    path10.lineTo(468.086, 96.08);
    path10.cubicTo(468.046, 97.08, 467.606, 98.02, 466.746, 98.9);
    path10.cubicTo(465.886, 99.76, 464.746, 100.2, 463.326, 100.2);
    path10.cubicTo(461.686, 100.2, 460.426, 99.72, 459.526, 98.76);
    path10.cubicTo(458.646, 97.8, 458.206, 96.58, 458.206, 95.08);
    path10.cubicTo(458.206, 93.5, 458.686, 92.22, 459.626, 91.26);
    path10.cubicTo(460.566, 90.28, 461.766, 89.8, 463.226, 89.8);
    path10.cubicTo(466.346, 89.8, 468.006, 91.76, 468.086, 95.02);
    path10.lineTo(461.106, 95.02);
    path10.lineTo(461.106, 95.12);
    path10.cubicTo(461.106, 97.18, 461.886, 98.36, 463.346, 98.36);
    path10.cubicTo(464.566, 98.36, 465.266, 97.6, 465.446, 96.08);
    path10.close();
    path10.moveTo(463.246, 91.64);
    path10.cubicTo(462.086, 91.64, 461.406, 92.42, 461.186, 93.96);
    path10.lineTo(465.246, 93.96);
    path10.cubicTo(465.246, 92.7, 464.526, 91.64, 463.246, 91.64);
    path10.close();
    path10.moveTo(476.286, 100.2);
    path10.cubicTo(474.426, 100.2, 473.286, 99.18, 472.886, 97.14);
    path10.lineTo(472.886, 105);
    path10.lineTo(470.286, 105);
    path10.lineTo(470.286, 90);
    path10.lineTo(472.886, 90);
    path10.lineTo(472.886, 92.9);
    path10.cubicTo(473.286, 90.84, 474.426, 89.8, 476.286, 89.8);
    path10.cubicTo(477.406, 89.8, 478.366, 90.26, 479.166, 91.16);
    path10.cubicTo(479.966, 92.06, 480.366, 93.36, 480.366, 95.06);
    path10.cubicTo(480.366, 96.72, 479.966, 97.98, 479.166, 98.88);
    path10.cubicTo(478.366, 99.76, 477.406, 100.2, 476.286, 100.2);
    path10.close();
    path10.moveTo(477.486, 95.06);
    path10.cubicTo(477.486, 92.88, 476.526, 91.62, 475.146, 91.62);
    path10.cubicTo(473.786, 91.62, 472.966, 92.84, 472.966, 95.06);
    path10.cubicTo(472.966, 97.2, 473.806, 98.42, 475.146, 98.42);
    path10.cubicTo(476.506, 98.42, 477.486, 97.16, 477.486, 95.06);
    path10.close();
    path10.moveTo(487.409, 89.8);
    path10.cubicTo(488.869, 89.8, 490.089, 90.3, 491.069, 91.28);
    path10.cubicTo(492.049, 92.26, 492.549, 93.5, 492.549, 95);
    path10.cubicTo(492.549, 96.5, 492.049, 97.76, 491.069, 98.74);
    path10.cubicTo(490.089, 99.72, 488.869, 100.2, 487.409, 100.2);
    path10.cubicTo(485.969, 100.2, 484.749, 99.72, 483.749, 98.74);
    path10.cubicTo(482.769, 97.76, 482.269, 96.5, 482.269, 95);
    path10.cubicTo(482.269, 93.5, 482.769, 92.26, 483.749, 91.28);
    path10.cubicTo(484.749, 90.3, 485.969, 89.8, 487.409, 89.8);
    path10.close();
    path10.moveTo(487.429, 91.48);
    path10.cubicTo(485.929, 91.48, 485.169, 92.66, 485.169, 95);
    path10.cubicTo(485.169, 97.22, 486.009, 98.48, 487.429, 98.48);
    path10.cubicTo(488.849, 98.48, 489.649, 97.22, 489.649, 95);
    path10.cubicTo(489.649, 92.66, 488.909, 91.48, 487.429, 91.48);
    path10.close();
    path10.moveTo(497.339, 91.8);
    path10.lineTo(497.339, 100);
    path10.lineTo(494.739, 100);
    path10.lineTo(494.739, 90);
    path10.lineTo(503.539, 90);
    path10.lineTo(503.539, 100);
    path10.lineTo(500.939, 100);
    path10.lineTo(500.939, 91.8);
    path10.lineTo(497.339, 91.8);
    path10.close();
    path10.moveTo(512.145, 100.2);
    path10.cubicTo(510.285, 100.2, 509.145, 99.18, 508.745, 97.14);
    path10.lineTo(508.745, 105);
    path10.lineTo(506.145, 105);
    path10.lineTo(506.145, 90);
    path10.lineTo(508.745, 90);
    path10.lineTo(508.745, 92.9);
    path10.cubicTo(509.145, 90.84, 510.285, 89.8, 512.145, 89.8);
    path10.cubicTo(513.265, 89.8, 514.225, 90.26, 515.025, 91.16);
    path10.cubicTo(515.825, 92.06, 516.225, 93.36, 516.225, 95.06);
    path10.cubicTo(516.225, 96.72, 515.825, 97.98, 515.025, 98.88);
    path10.cubicTo(514.225, 99.76, 513.265, 100.2, 512.145, 100.2);
    path10.close();
    path10.moveTo(513.345, 95.06);
    path10.cubicTo(513.345, 92.88, 512.385, 91.62, 511.005, 91.62);
    path10.cubicTo(509.645, 91.62, 508.825, 92.84, 508.825, 95.06);
    path10.cubicTo(508.825, 97.2, 509.665, 98.42, 511.005, 98.42);
    path10.cubicTo(512.365, 98.42, 513.345, 97.16, 513.345, 95.06);
    path10.close();
    path10.moveTo(525.228, 93.26);
    path10.lineTo(521.128, 100);
    path10.lineTo(518.528, 100);
    path10.lineTo(518.528, 90);
    path10.lineTo(521.128, 90);
    path10.lineTo(521.128, 96.74);
    path10.lineTo(525.228, 90);
    path10.lineTo(527.828, 90);
    path10.lineTo(527.828, 100);
    path10.lineTo(525.228, 100);
    path10.lineTo(525.228, 93.26);
    path10.close();
    path10.moveTo(532.783, 100);
    path10.lineTo(529.723, 100);
    path10.lineTo(529.723, 99.68);
    path10.cubicTo(529.943, 99.54, 530.203, 98.92, 530.543, 97.86);
    path10.lineTo(530.663, 97.48);
    path10.cubicTo(530.983, 96.46, 531.663, 95.8, 532.723, 95.52);
    path10.cubicTo(530.963, 95.3, 530.083, 94.48, 530.083, 93.02);
    path10.cubicTo(530.083, 91.02, 531.383, 90, 534.443, 90);
    path10.lineTo(538.763, 90);
    path10.lineTo(538.763, 100);
    path10.lineTo(536.163, 100);
    path10.lineTo(536.163, 96.18);
    path10.lineTo(535.143, 96.18);
    path10.cubicTo(534.043, 96.18, 533.603, 96.5, 533.423, 97.22);
    path10.lineTo(533.283, 97.72);
    path10.cubicTo(533.063, 98.46, 532.903, 99.22, 532.783, 100);
    path10.close();
    path10.moveTo(534.243, 94.58);
    path10.lineTo(536.163, 94.58);
    path10.lineTo(536.163, 91.6);
    path10.lineTo(534.383, 91.6);
    path10.cubicTo(533.183, 91.6, 532.703, 92.02, 532.703, 93.04);
    path10.cubicTo(532.703, 94.06, 533.223, 94.58, 534.243, 94.58);
    path10.close();
    path10.moveTo(546.46, 91.8);
    path10.lineTo(546.46, 100);
    path10.lineTo(543.86, 100);
    path10.lineTo(543.86, 91.8);
    path10.lineTo(540.46, 91.8);
    path10.lineTo(540.46, 90);
    path10.lineTo(549.86, 90);
    path10.lineTo(549.86, 91.8);
    path10.lineTo(546.46, 91.8);
    path10.close();
    path10.moveTo(558.255, 93.26);
    path10.lineTo(554.155, 100);
    path10.lineTo(551.555, 100);
    path10.lineTo(551.555, 90);
    path10.lineTo(554.155, 90);
    path10.lineTo(554.155, 96.74);
    path10.lineTo(558.255, 90);
    path10.lineTo(560.855, 90);
    path10.lineTo(560.855, 100);
    path10.lineTo(558.255, 100);
    path10.lineTo(558.255, 93.26);
    path10.close();
    path10.moveTo(565.81, 100);
    path10.lineTo(562.75, 100);
    path10.lineTo(562.75, 99.68);
    path10.cubicTo(562.97, 99.54, 563.23, 98.92, 563.57, 97.86);
    path10.lineTo(563.69, 97.48);
    path10.cubicTo(564.01, 96.46, 564.69, 95.8, 565.75, 95.52);
    path10.cubicTo(563.99, 95.3, 563.11, 94.48, 563.11, 93.02);
    path10.cubicTo(563.11, 91.02, 564.41, 90, 567.47, 90);
    path10.lineTo(571.79, 90);
    path10.lineTo(571.79, 100);
    path10.lineTo(569.19, 100);
    path10.lineTo(569.19, 96.18);
    path10.lineTo(568.17, 96.18);
    path10.cubicTo(567.07, 96.18, 566.63, 96.5, 566.45, 97.22);
    path10.lineTo(566.31, 97.72);
    path10.cubicTo(566.09, 98.46, 565.93, 99.22, 565.81, 100);
    path10.close();
    path10.moveTo(567.27, 94.58);
    path10.lineTo(569.19, 94.58);
    path10.lineTo(569.19, 91.6);
    path10.lineTo(567.41, 91.6);
    path10.cubicTo(566.21, 91.6, 565.73, 92.02, 565.73, 93.04);
    path10.cubicTo(565.73, 94.06, 566.25, 94.58, 567.27, 94.58);
    path10.close();
    Paint paint10 = Paint();
    paint10.color = const Color(0xFFFFFFFF);
    canvas.drawPath(path10, paint10);

    var path11 = Path()..fillType = PathFillType.nonZero;
    path11.moveTo(0, 0);
    path11.lineTo(277.333, 0);
    path11.lineTo(277.333, 16);
    path11.lineTo(0, 16);
    path11.close();
    path11 = path11.transform(
        Matrix4(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 425.333, 104, 0, 1)
            .storage);
    Paint paint11 = Paint();
    paint11.color = const Color(0xFF000000);
    canvas.drawPath(path11, paint11);

    var path12 = Path()..fillType = PathFillType.nonZero;
    path12.moveTo(425.333, 104);
    path12.lineTo(426.333, 104);
    path12.lineTo(426.333, 120);
    path12.lineTo(425.333, 120);
    path12.close();
    Paint paint12 = Paint();
    paint12.color = const Color(0x03FFFFFF);
    canvas.drawPath(path12, paint12);

    var path13 = Path()..fillType = PathFillType.nonZero;
    path13.moveTo(429.353, 136.5);
    path13.lineTo(428.113, 140);
    path13.lineTo(425.333, 140);
    path13.lineTo(430.893, 125);
    path13.lineTo(433.933, 125);
    path13.lineTo(439.693, 140);
    path13.lineTo(436.653, 140);
    path13.lineTo(435.333, 136.5);
    path13.lineTo(429.353, 136.5);
    path13.close();
    path13.moveTo(432.273, 128.34);
    path13.lineTo(430.213, 134.1);
    path13.lineTo(434.433, 134.1);
    path13.lineTo(432.273, 128.34);
    path13.close();
    path13.moveTo(443.472, 135.8);
    path13.lineTo(443.472, 140);
    path13.lineTo(440.872, 140);
    path13.lineTo(440.872, 130);
    path13.lineTo(443.472, 130);
    path13.lineTo(443.472, 134);
    path13.lineTo(447.172, 134);
    path13.lineTo(447.172, 130);
    path13.lineTo(449.772, 130);
    path13.lineTo(449.772, 140);
    path13.lineTo(447.172, 140);
    path13.lineTo(447.172, 135.8);
    path13.lineTo(443.472, 135.8);
    path13.close();
    path13.moveTo(454.656, 133.78);
    path13.lineTo(452.276, 132.9);
    path13.cubicTo(452.736, 130.84, 454.596, 129.8, 456.996, 129.8);
    path13.cubicTo(460.016, 129.8, 461.216, 130.68, 461.216, 132.9);
    path13.lineTo(461.216, 137.8);
    path13.lineTo(462.916, 137.8);
    path13.lineTo(462.916, 140);
    path13.lineTo(458.336, 140);
    path13.lineTo(458.616, 138.42);
    path13.lineTo(458.616, 137.96);
    path13.lineTo(457.376, 139.48);
    path13.cubicTo(456.656, 139.96, 455.876, 140.2, 455.056, 140.2);
    path13.cubicTo(453.296, 140.2, 452.176, 139.2, 452.176, 137.54);
    path13.cubicTo(452.176, 136.4, 452.536, 135.7, 453.396, 135.3);
    path13.cubicTo(453.836, 135.08, 454.276, 134.92, 454.716, 134.82);
    path13.cubicTo(455.176, 134.7, 455.776, 134.54, 456.556, 134.36);
    path13.cubicTo(457.336, 134.16, 458.016, 133.96, 458.616, 133.74);
    path13.lineTo(458.616, 133.32);
    path13.cubicTo(458.616, 132.26, 458.116, 131.76, 456.896, 131.76);
    path13.cubicTo(456.196, 131.76, 455.696, 131.9, 455.396, 132.2);
    path13.cubicTo(455.116, 132.48, 454.876, 133, 454.656, 133.78);
    path13.close();
    path13.moveTo(455.016, 137.08);
    path13.cubicTo(455.016, 137.82, 455.516, 138.32, 456.316, 138.32);
    path13.cubicTo(456.736, 138.32, 457.196, 138.14, 457.656, 137.8);
    path13.cubicTo(458.116, 137.44, 458.436, 136.94, 458.616, 136.3);
    path13.lineTo(458.616, 134.52);
    path13.cubicTo(457.196, 134.96, 456.236, 135.36, 455.736, 135.7);
    path13.cubicTo(455.256, 136.04, 455.016, 136.5, 455.016, 137.08);
    path13.close();
    path13.moveTo(465.835, 135.92);
    path13.lineTo(466.155, 130);
    path13.lineTo(473.755, 130);
    path13.lineTo(473.755, 140);
    path13.lineTo(471.155, 140);
    path13.lineTo(471.155, 131.8);
    path13.lineTo(468.335, 131.8);
    path13.lineTo(468.135, 135.94);
    path13.cubicTo(468.055, 137.52, 467.755, 138.58, 467.235, 139.16);
    path13.cubicTo(466.735, 139.72, 465.775, 140, 464.395, 140);
    path13.lineTo(464.215, 140);
    path13.lineTo(464.215, 137.6);
    path13.lineTo(464.395, 137.6);
    path13.cubicTo(464.935, 137.6, 465.315, 137.5, 465.495, 137.28);
    path13.cubicTo(465.675, 137.06, 465.795, 136.62, 465.835, 135.92);
    path13.close();
    path13.moveTo(483.06, 133.26);
    path13.lineTo(478.96, 140);
    path13.lineTo(476.36, 140);
    path13.lineTo(476.36, 130);
    path13.lineTo(478.96, 130);
    path13.lineTo(478.96, 136.74);
    path13.lineTo(483.06, 130);
    path13.lineTo(485.66, 130);
    path13.lineTo(485.66, 140);
    path13.lineTo(483.06, 140);
    path13.lineTo(483.06, 133.26);
    path13.close();
    path13.moveTo(493.355, 131.8);
    path13.lineTo(493.355, 140);
    path13.lineTo(490.755, 140);
    path13.lineTo(490.755, 131.8);
    path13.lineTo(487.355, 131.8);
    path13.lineTo(487.355, 130);
    path13.lineTo(496.755, 130);
    path13.lineTo(496.755, 131.8);
    path13.lineTo(493.355, 131.8);
    path13.close();
    path13.moveTo(505.15, 133.26);
    path13.lineTo(501.05, 140);
    path13.lineTo(498.45, 140);
    path13.lineTo(498.45, 130);
    path13.lineTo(501.05, 130);
    path13.lineTo(501.05, 136.74);
    path13.lineTo(505.15, 130);
    path13.lineTo(507.75, 130);
    path13.lineTo(507.75, 140);
    path13.lineTo(505.15, 140);
    path13.lineTo(505.15, 133.26);
    path13.close();
    path13.moveTo(520.264, 140);
    path13.lineTo(517.064, 140);
    path13.lineTo(512.944, 135.38);
    path13.lineTo(512.944, 140);
    path13.lineTo(510.344, 140);
    path13.lineTo(510.344, 130);
    path13.lineTo(512.944, 130);
    path13.lineTo(512.944, 134.3);
    path13.lineTo(516.764, 130);
    path13.lineTo(519.864, 130);
    path13.lineTo(515.544, 134.56);
    path13.lineTo(520.264, 140);
    path13.close();
    path13.moveTo(524.246, 133.78);
    path13.lineTo(521.866, 132.9);
    path13.cubicTo(522.326, 130.84, 524.186, 129.8, 526.586, 129.8);
    path13.cubicTo(529.606, 129.8, 530.806, 130.68, 530.806, 132.9);
    path13.lineTo(530.806, 137.8);
    path13.lineTo(532.506, 137.8);
    path13.lineTo(532.506, 140);
    path13.lineTo(527.926, 140);
    path13.lineTo(528.206, 138.42);
    path13.lineTo(528.206, 137.96);
    path13.lineTo(526.966, 139.48);
    path13.cubicTo(526.246, 139.96, 525.466, 140.2, 524.646, 140.2);
    path13.cubicTo(522.886, 140.2, 521.766, 139.2, 521.766, 137.54);
    path13.cubicTo(521.766, 136.4, 522.126, 135.7, 522.986, 135.3);
    path13.cubicTo(523.426, 135.08, 523.866, 134.92, 524.306, 134.82);
    path13.cubicTo(524.766, 134.7, 525.366, 134.54, 526.146, 134.36);
    path13.cubicTo(526.926, 134.16, 527.606, 133.96, 528.206, 133.74);
    path13.lineTo(528.206, 133.32);
    path13.cubicTo(528.206, 132.26, 527.706, 131.76, 526.486, 131.76);
    path13.cubicTo(525.786, 131.76, 525.286, 131.9, 524.986, 132.2);
    path13.cubicTo(524.706, 132.48, 524.466, 133, 524.246, 133.78);
    path13.close();
    path13.moveTo(524.606, 137.08);
    path13.cubicTo(524.606, 137.82, 525.106, 138.32, 525.906, 138.32);
    path13.cubicTo(526.326, 138.32, 526.786, 138.14, 527.246, 137.8);
    path13.cubicTo(527.706, 137.44, 528.026, 136.94, 528.206, 136.3);
    path13.lineTo(528.206, 134.52);
    path13.cubicTo(526.786, 134.96, 525.826, 135.36, 525.326, 135.7);
    path13.cubicTo(524.846, 136.04, 524.606, 136.5, 524.606, 137.08);
    path13.close();
    path13.moveTo(433.333, 157.26);
    path13.lineTo(429.233, 164);
    path13.lineTo(426.633, 164);
    path13.lineTo(426.633, 154);
    path13.lineTo(429.233, 154);
    path13.lineTo(429.233, 160.74);
    path13.lineTo(433.333, 154);
    path13.lineTo(435.933, 154);
    path13.lineTo(435.933, 164);
    path13.lineTo(433.333, 164);
    path13.lineTo(433.333, 157.26);
    path13.close();
    path13.moveTo(448.237, 155.8);
    path13.lineTo(448.237, 164);
    path13.lineTo(445.637, 164);
    path13.lineTo(445.637, 155.8);
    path13.lineTo(442.237, 155.8);
    path13.lineTo(442.237, 154);
    path13.lineTo(451.637, 154);
    path13.lineTo(451.637, 155.8);
    path13.lineTo(448.237, 155.8);
    path13.close();
    path13.moveTo(459.333, 164.2);
    path13.cubicTo(457.473, 164.2, 456.333, 163.18, 455.933, 161.14);
    path13.lineTo(455.933, 169);
    path13.lineTo(453.333, 169);
    path13.lineTo(453.333, 154);
    path13.lineTo(455.933, 154);
    path13.lineTo(455.933, 156.9);
    path13.cubicTo(456.333, 154.84, 457.473, 153.8, 459.333, 153.8);
    path13.cubicTo(460.453, 153.8, 461.413, 154.26, 462.213, 155.16);
    path13.cubicTo(463.013, 156.06, 463.413, 157.36, 463.413, 159.06);
    path13.cubicTo(463.413, 160.72, 463.013, 161.98, 462.213, 162.88);
    path13.cubicTo(461.413, 163.76, 460.453, 164.2, 459.333, 164.2);
    path13.close();
    path13.moveTo(460.533, 159.06);
    path13.cubicTo(460.533, 156.88, 459.573, 155.62, 458.193, 155.62);
    path13.cubicTo(456.833, 155.62, 456.013, 156.84, 456.013, 159.06);
    path13.cubicTo(456.013, 161.2, 456.853, 162.42, 458.193, 162.42);
    path13.cubicTo(459.553, 162.42, 460.533, 161.16, 460.533, 159.06);
    path13.close();
    path13.moveTo(472.556, 160.08);
    path13.lineTo(475.196, 160.08);
    path13.cubicTo(475.156, 161.08, 474.716, 162.02, 473.856, 162.9);
    path13.cubicTo(472.996, 163.76, 471.856, 164.2, 470.436, 164.2);
    path13.cubicTo(468.796, 164.2, 467.536, 163.72, 466.636, 162.76);
    path13.cubicTo(465.756, 161.8, 465.316, 160.58, 465.316, 159.08);
    path13.cubicTo(465.316, 157.5, 465.796, 156.22, 466.736, 155.26);
    path13.cubicTo(467.676, 154.28, 468.876, 153.8, 470.336, 153.8);
    path13.cubicTo(473.456, 153.8, 475.116, 155.76, 475.196, 159.02);
    path13.lineTo(468.216, 159.02);
    path13.lineTo(468.216, 159.12);
    path13.cubicTo(468.216, 161.18, 468.996, 162.36, 470.456, 162.36);
    path13.cubicTo(471.676, 162.36, 472.376, 161.6, 472.556, 160.08);
    path13.close();
    path13.moveTo(470.356, 155.64);
    path13.cubicTo(469.196, 155.64, 468.516, 156.42, 468.296, 157.96);
    path13.lineTo(472.356, 157.96);
    path13.cubicTo(472.356, 156.7, 471.636, 155.64, 470.356, 155.64);
    path13.close();
    path13.moveTo(479.995, 159.8);
    path13.lineTo(479.995, 164);
    path13.lineTo(477.395, 164);
    path13.lineTo(477.395, 154);
    path13.lineTo(479.995, 154);
    path13.lineTo(479.995, 158);
    path13.lineTo(483.695, 158);
    path13.lineTo(483.695, 154);
    path13.lineTo(486.295, 154);
    path13.lineTo(486.295, 164);
    path13.lineTo(483.695, 164);
    path13.lineTo(483.695, 159.8);
    path13.lineTo(479.995, 159.8);
    path13.close();
    path13.moveTo(491.919, 155.8);
    path13.lineTo(491.759, 159);
    path13.cubicTo(491.699, 160.68, 491.559, 161.74, 491.339, 162.2);
    path13.lineTo(494.899, 162.2);
    path13.lineTo(494.899, 155.8);
    path13.lineTo(491.919, 155.8);
    path13.close();
    path13.moveTo(489.539, 158.94);
    path13.lineTo(489.799, 154);
    path13.lineTo(497.499, 154);
    path13.lineTo(497.499, 162.2);
    path13.lineTo(499.199, 162.2);
    path13.lineTo(499.199, 167);
    path13.lineTo(496.999, 167);
    path13.lineTo(496.999, 164);
    path13.lineTo(489.999, 164);
    path13.lineTo(489.999, 167);
    path13.lineTo(487.799, 167);
    path13.lineTo(487.799, 162.2);
    path13.lineTo(488.999, 162.2);
    path13.cubicTo(489.279, 161.66, 489.459, 160.56, 489.539, 158.94);
    path13.close();
    path13.moveTo(513.391, 154);
    path13.lineTo(513.391, 164);
    path13.lineTo(510.791, 164);
    path13.lineTo(510.791, 154);
    path13.lineTo(513.391, 154);
    path13.close();
    path13.moveTo(509.311, 160.58);
    path13.cubicTo(509.311, 162.86, 507.951, 164, 505.211, 164);
    path13.lineTo(500.891, 164);
    path13.lineTo(500.891, 154);
    path13.lineTo(503.491, 154);
    path13.lineTo(503.491, 157.44);
    path13.lineTo(505.571, 157.44);
    path13.cubicTo(506.631, 157.44, 507.531, 157.7, 508.231, 158.24);
    path13.cubicTo(508.951, 158.78, 509.311, 159.56, 509.311, 160.58);
    path13.close();
    path13.moveTo(506.691, 160.6);
    path13.cubicTo(506.691, 159.7, 506.091, 159.24, 504.891, 159.24);
    path13.lineTo(503.491, 159.24);
    path13.lineTo(503.491, 162.2);
    path13.lineTo(504.871, 162.2);
    path13.cubicTo(506.151, 162.2, 506.691, 161.7, 506.691, 160.6);
    path13.close();
    Paint paint13 = Paint();
    paint13.color = const Color(0xFFFFFFFF);
    canvas.drawPath(path13, paint13);

    var path14 = Path()..fillType = PathFillType.nonZero;
    path14.moveTo(749.851, 73);
    path14.lineTo(749.851, 67.848);
    path14.lineTo(748.731, 67.848);
    path14.lineTo(745.243, 73);
    path14.lineTo(742.907, 73);
    path14.lineTo(746.987, 66.888);
    path14.lineTo(743.099, 61.4);
    path14.lineTo(745.387, 61.4);
    path14.lineTo(748.635, 66.152);
    path14.lineTo(749.851, 66.152);
    path14.lineTo(749.851, 61.4);
    path14.lineTo(751.867, 61.4);
    path14.lineTo(751.867, 66.152);
    path14.lineTo(753.051, 66.152);
    path14.lineTo(756.299, 61.4);
    path14.lineTo(758.571, 61.4);
    path14.lineTo(754.731, 66.904);
    path14.lineTo(758.811, 73);
    path14.lineTo(756.491, 73);
    path14.lineTo(753.019, 67.848);
    path14.lineTo(751.867, 67.848);
    path14.lineTo(751.867, 73);
    path14.lineTo(749.851, 73);
    path14.close();
    path14.moveTo(760.253, 75.8);
    path14.lineTo(759.389, 75.8);
    path14.lineTo(759.389, 74.344);
    path14.lineTo(760.109, 74.344);
    path14.cubicTo(760.941, 74.344, 761.293, 74.28, 761.677, 73.16);
    path14.lineTo(761.773, 72.952);
    path14.lineTo(758.653, 64.392);
    path14.lineTo(760.733, 64.392);
    path14.lineTo(762.685, 70.568);
    path14.lineTo(764.637, 64.392);
    path14.lineTo(766.589, 64.392);
    path14.lineTo(763.565, 72.984);
    path14.cubicTo(762.749, 75.208, 762.189, 75.8, 760.253, 75.8);
    path14.close();
    path14.moveTo(769.563, 68.696);
    path14.cubicTo(769.563, 70.68, 770.539, 71.656, 771.787, 71.656);
    path14.cubicTo(773.131, 71.656, 773.915, 70.536, 773.915, 68.696);
    path14.cubicTo(773.915, 66.888, 773.131, 65.752, 771.787, 65.752);
    path14.cubicTo(770.539, 65.752, 769.563, 66.712, 769.563, 68.696);
    path14.close();
    path14.moveTo(767.739, 64.392);
    path14.lineTo(769.643, 64.392);
    path14.lineTo(769.643, 65.544);
    path14.cubicTo(770.155, 64.696, 771.051, 64.2, 772.203, 64.2);
    path14.cubicTo(774.315, 64.2, 775.899, 65.944, 775.899, 68.696);
    path14.cubicTo(775.899, 71.464, 774.315, 73.208, 772.203, 73.208);
    path14.cubicTo(771.051, 73.208, 770.155, 72.712, 769.643, 71.864);
    path14.lineTo(769.643, 75.8);
    path14.lineTo(767.739, 75.8);
    path14.lineTo(767.739, 64.392);
    path14.close();
    path14.moveTo(785.185, 73);
    path14.lineTo(783.281, 73);
    path14.lineTo(783.281, 69.336);
    path14.lineTo(779.441, 69.336);
    path14.lineTo(779.441, 73);
    path14.lineTo(777.537, 73);
    path14.lineTo(777.537, 64.392);
    path14.lineTo(779.441, 64.392);
    path14.lineTo(779.441, 67.832);
    path14.lineTo(783.281, 67.832);
    path14.lineTo(783.281, 64.392);
    path14.lineTo(785.185, 64.392);
    path14.lineTo(785.185, 73);
    path14.close();
    path14.moveTo(792.738, 69.608);
    path14.lineTo(792.738, 68.952);
    path14.cubicTo(790.018, 69.208, 788.914, 69.608, 788.914, 70.584);
    path14.cubicTo(788.914, 71.336, 789.538, 71.784, 790.498, 71.784);
    path14.cubicTo(791.906, 71.784, 792.738, 71.08, 792.738, 69.608);
    path14.close();
    path14.moveTo(790.082, 73.208);
    path14.cubicTo(788.21, 73.208, 786.898, 72.2, 786.898, 70.632);
    path14.cubicTo(786.898, 68.472, 789.554, 67.96, 792.69, 67.624);
    path14.lineTo(792.69, 67.464);
    path14.cubicTo(792.69, 65.992, 791.858, 65.544, 790.898, 65.544);
    path14.cubicTo(789.938, 65.544, 789.218, 66.056, 789.17, 67.096);
    path14.lineTo(787.298, 67.096);
    path14.cubicTo(787.426, 65.352, 788.882, 64.136, 790.962, 64.136);
    path14.cubicTo(793.026, 64.136, 794.642, 65.08, 794.594, 67.832);
    path14.cubicTo(794.594, 68.248, 794.562, 69.272, 794.562, 70.056);
    path14.cubicTo(794.562, 71.144, 794.642, 72.28, 794.818, 73);
    path14.lineTo(793.074, 73);
    path14.cubicTo(793.01, 72.632, 792.962, 72.424, 792.914, 71.832);
    path14.cubicTo(792.354, 72.776, 791.362, 73.208, 790.082, 73.208);
    path14.close();
    path14.moveTo(803.864, 73);
    path14.lineTo(801.96, 73);
    path14.lineTo(801.96, 65.896);
    path14.lineTo(799.432, 65.896);
    path14.lineTo(799.304, 67.752);
    path14.cubicTo(799.064, 71.352, 798.104, 73, 796.12, 73);
    path14.lineTo(795.768, 73);
    path14.lineTo(795.768, 71.496);
    path14.lineTo(795.96, 71.496);
    path14.cubicTo(796.664, 71.496, 797.32, 70.744, 797.496, 67.48);
    path14.lineTo(797.656, 64.392);
    path14.lineTo(803.864, 64.392);
    path14.lineTo(803.864, 73);
    path14.close();
    Paint paint14 = Paint();
    paint14.color = const Color(0xFF000000);
    canvas.drawPath(path14, paint14);

    var path15 = Path()..fillType = PathFillType.nonZero;
    path15.moveTo(0, 0);
    path15.lineTo(277.333, 0);
    path15.lineTo(277.333, 16);
    path15.lineTo(0, 16);
    path15.close();
    path15 = path15.transform(
        Matrix4(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 742.667, 78, 0, 1).storage);
    Paint paint15 = Paint();
    paint15.color = const Color(0xFF000000);
    canvas.drawPath(path15, paint15);

    var path16 = Path()..fillType = PathFillType.nonZero;
    path16.moveTo(742.667, 78);
    path16.lineTo(743.667, 78);
    path16.lineTo(743.667, 94);
    path16.lineTo(742.667, 94);
    path16.close();
    Paint paint16 = Paint();
    paint16.color = const Color(0x03FFFFFF);
    canvas.drawPath(path16, paint16);

    var path17 = Path()..fillType = PathFillType.nonZero;
    path17.moveTo(751.019, 111);
    path17.lineTo(748.955, 111);
    path17.lineTo(746.011, 101.608);
    path17.lineTo(746.011, 111);
    path17.lineTo(744.027, 111);
    path17.lineTo(744.027, 99.4);
    path17.lineTo(747.179, 99.4);
    path17.lineTo(749.995, 108.648);
    path17.lineTo(752.795, 99.4);
    path17.lineTo(755.947, 99.4);
    path17.lineTo(755.947, 111);
    path17.lineTo(753.963, 111);
    path17.lineTo(753.963, 101.608);
    path17.lineTo(751.019, 111);
    path17.close();
    path17.moveTo(766.155, 107.24);
    path17.lineTo(759.739, 107.24);
    path17.cubicTo(759.867, 108.84, 760.987, 109.624, 762.075, 109.624);
    path17.cubicTo(763.083, 109.624, 763.851, 109.24, 764.187, 108.424);
    path17.lineTo(766.059, 108.424);
    path17.cubicTo(765.675, 109.8, 764.363, 111.208, 762.155, 111.208);
    path17.cubicTo(759.387, 111.208, 757.803, 109.112, 757.803, 106.632);
    path17.cubicTo(757.803, 104.04, 759.579, 102.2, 762.027, 102.2);
    path17.cubicTo(764.667, 102.2, 766.331, 104.36, 766.155, 107.24);
    path17.close();
    path17.moveTo(762.027, 103.688);
    path17.cubicTo(761.131, 103.688, 759.915, 104.232, 759.739, 105.848);
    path17.lineTo(764.219, 105.848);
    path17.cubicTo(764.171, 104.504, 763.147, 103.688, 762.027, 103.688);
    path17.close();
    path17.moveTo(769.563, 106.696);
    path17.cubicTo(769.563, 108.68, 770.539, 109.656, 771.787, 109.656);
    path17.cubicTo(773.131, 109.656, 773.915, 108.536, 773.915, 106.696);
    path17.cubicTo(773.915, 104.888, 773.131, 103.752, 771.787, 103.752);
    path17.cubicTo(770.539, 103.752, 769.563, 104.712, 769.563, 106.696);
    path17.close();
    path17.moveTo(767.739, 102.392);
    path17.lineTo(769.643, 102.392);
    path17.lineTo(769.643, 103.544);
    path17.cubicTo(770.155, 102.696, 771.051, 102.2, 772.203, 102.2);
    path17.cubicTo(774.315, 102.2, 775.899, 103.944, 775.899, 106.696);
    path17.cubicTo(775.899, 109.464, 774.315, 111.208, 772.203, 111.208);
    path17.cubicTo(771.051, 111.208, 770.155, 110.712, 769.643, 109.864);
    path17.lineTo(769.643, 113.8);
    path17.lineTo(767.739, 113.8);
    path17.lineTo(767.739, 102.392);
    path17.close();
    path17.moveTo(780.817, 111);
    path17.lineTo(777.537, 111);
    path17.lineTo(777.537, 102.392);
    path17.lineTo(779.441, 102.392);
    path17.lineTo(779.441, 105.288);
    path17.lineTo(780.769, 105.288);
    path17.cubicTo(783.137, 105.288, 784.145, 106.184, 784.145, 108.088);
    path17.cubicTo(784.145, 110.264, 782.929, 111, 780.817, 111);
    path17.close();
    path17.moveTo(779.441, 106.792);
    path17.lineTo(779.441, 109.496);
    path17.lineTo(780.545, 109.496);
    path17.cubicTo(781.697, 109.496, 782.241, 109.16, 782.241, 108.072);
    path17.cubicTo(782.241, 107.096, 781.681, 106.792, 780.529, 106.792);
    path17.lineTo(779.441, 106.792);
    path17.close();
    path17.moveTo(787.281, 111);
    path17.lineTo(785.377, 111);
    path17.lineTo(785.377, 102.392);
    path17.lineTo(787.281, 102.392);
    path17.lineTo(787.281, 111);
    path17.close();
    path17.moveTo(800.76, 102.392);
    path17.lineTo(800.76, 111);
    path17.lineTo(798.856, 111);
    path17.lineTo(798.856, 103.896);
    path17.lineTo(795.176, 103.896);
    path17.lineTo(795.176, 111);
    path17.lineTo(793.272, 111);
    path17.lineTo(793.272, 102.392);
    path17.lineTo(800.76, 102.392);
    path17.close();
    path17.moveTo(804.381, 106.712);
    path17.cubicTo(804.381, 108.696, 805.437, 109.656, 806.653, 109.656);
    path17.cubicTo(807.869, 109.656, 808.925, 108.696, 808.925, 106.712);
    path17.cubicTo(808.925, 104.728, 807.869, 103.752, 806.653, 103.752);
    path17.cubicTo(805.437, 103.752, 804.381, 104.728, 804.381, 106.712);
    path17.close();
    path17.moveTo(806.653, 102.2);
    path17.cubicTo(808.749, 102.2, 810.893, 103.608, 810.893, 106.712);
    path17.cubicTo(810.893, 109.832, 808.749, 111.208, 806.653, 111.208);
    path17.cubicTo(804.557, 111.208, 802.413, 109.832, 802.413, 106.712);
    path17.cubicTo(802.413, 103.608, 804.557, 102.2, 806.653, 102.2);
    path17.close();
    path17.moveTo(821.102, 109.512);
    path17.lineTo(821.102, 113.032);
    path17.lineTo(819.374, 113.032);
    path17.lineTo(819.374, 111);
    path17.lineTo(813.086, 111);
    path17.lineTo(813.086, 113.032);
    path17.lineTo(811.358, 113.032);
    path17.lineTo(811.358, 109.512);
    path17.lineTo(811.822, 109.512);
    path17.cubicTo(812.782, 109.512, 813.278, 108.264, 813.422, 105.128);
    path17.lineTo(813.55, 102.392);
    path17.lineTo(819.822, 102.392);
    path17.lineTo(819.822, 109.512);
    path17.lineTo(821.102, 109.512);
    path17.close();
    path17.moveTo(817.918, 109.512);
    path17.lineTo(817.918, 103.896);
    path17.lineTo(815.23, 103.896);
    path17.lineTo(815.15, 105.352);
    path17.cubicTo(815.022, 107.64, 814.718, 108.856, 814.03, 109.512);
    path17.lineTo(817.918, 109.512);
    path17.close();
    path17.moveTo(831.289, 109.512);
    path17.lineTo(831.289, 113.032);
    path17.lineTo(829.561, 113.032);
    path17.lineTo(829.561, 111);
    path17.lineTo(823.273, 111);
    path17.lineTo(823.273, 113.032);
    path17.lineTo(821.545, 113.032);
    path17.lineTo(821.545, 109.512);
    path17.lineTo(822.009, 109.512);
    path17.cubicTo(822.969, 109.512, 823.465, 108.264, 823.609, 105.128);
    path17.lineTo(823.737, 102.392);
    path17.lineTo(830.009, 102.392);
    path17.lineTo(830.009, 109.512);
    path17.lineTo(831.289, 109.512);
    path17.close();
    path17.moveTo(828.105, 109.512);
    path17.lineTo(828.105, 103.896);
    path17.lineTo(825.417, 103.896);
    path17.lineTo(825.337, 105.352);
    path17.cubicTo(825.209, 107.64, 824.905, 108.856, 824.217, 109.512);
    path17.lineTo(828.105, 109.512);
    path17.close();
    path17.moveTo(840.296, 107.24);
    path17.lineTo(833.88, 107.24);
    path17.cubicTo(834.008, 108.84, 835.128, 109.624, 836.216, 109.624);
    path17.cubicTo(837.224, 109.624, 837.992, 109.24, 838.328, 108.424);
    path17.lineTo(840.2, 108.424);
    path17.cubicTo(839.816, 109.8, 838.504, 111.208, 836.296, 111.208);
    path17.cubicTo(833.528, 111.208, 831.944, 109.112, 831.944, 106.632);
    path17.cubicTo(831.944, 104.04, 833.72, 102.2, 836.168, 102.2);
    path17.cubicTo(838.808, 102.2, 840.472, 104.36, 840.296, 107.24);
    path17.close();
    path17.moveTo(836.168, 103.688);
    path17.cubicTo(835.272, 103.688, 834.056, 104.232, 833.88, 105.848);
    path17.lineTo(838.36, 105.848);
    path17.cubicTo(838.312, 104.504, 837.288, 103.688, 836.168, 103.688);
    path17.close();
    path17.moveTo(843.703, 106.696);
    path17.cubicTo(843.703, 108.68, 844.679, 109.656, 845.927, 109.656);
    path17.cubicTo(847.271, 109.656, 848.055, 108.536, 848.055, 106.696);
    path17.cubicTo(848.055, 104.888, 847.271, 103.752, 845.927, 103.752);
    path17.cubicTo(844.679, 103.752, 843.703, 104.712, 843.703, 106.696);
    path17.close();
    path17.moveTo(841.879, 102.392);
    path17.lineTo(843.783, 102.392);
    path17.lineTo(843.783, 103.544);
    path17.cubicTo(844.295, 102.696, 845.191, 102.2, 846.343, 102.2);
    path17.cubicTo(848.455, 102.2, 850.039, 103.944, 850.039, 106.696);
    path17.cubicTo(850.039, 109.464, 848.455, 111.208, 846.343, 111.208);
    path17.cubicTo(845.191, 111.208, 844.295, 110.712, 843.783, 109.864);
    path17.lineTo(843.783, 113.8);
    path17.lineTo(841.879, 113.8);
    path17.lineTo(841.879, 102.392);
    path17.close();
    path17.moveTo(855.754, 111);
    path17.lineTo(855.754, 107.24);
    path17.lineTo(855.002, 107.24);
    path17.lineTo(852.474, 111);
    path17.lineTo(850.234, 111);
    path17.lineTo(853.402, 106.472);
    path17.lineTo(850.49, 102.392);
    path17.lineTo(852.618, 102.392);
    path17.lineTo(854.89, 105.736);
    path17.lineTo(855.754, 105.736);
    path17.lineTo(855.754, 102.392);
    path17.lineTo(857.658, 102.392);
    path17.lineTo(857.658, 105.736);
    path17.lineTo(858.49, 105.736);
    path17.lineTo(860.794, 102.392);
    path17.lineTo(862.986, 102.392);
    path17.lineTo(860.042, 106.456);
    path17.lineTo(863.194, 111);
    path17.lineTo(860.97, 111);
    path17.lineTo(858.442, 107.24);
    path17.lineTo(857.658, 107.24);
    path17.lineTo(857.658, 111);
    path17.lineTo(855.754, 111);
    path17.close();
    path17.moveTo(870.185, 111);
    path17.lineTo(867.353, 107.24);
    path17.lineTo(866.457, 107.24);
    path17.lineTo(866.457, 111);
    path17.lineTo(864.537, 111);
    path17.lineTo(864.537, 102.392);
    path17.lineTo(866.457, 102.392);
    path17.lineTo(866.457, 105.736);
    path17.lineTo(867.497, 105.736);
    path17.lineTo(869.977, 102.392);
    path17.lineTo(872.153, 102.392);
    path17.lineTo(868.905, 106.568);
    path17.lineTo(872.377, 111);
    path17.lineTo(870.185, 111);
    path17.close();
    path17.moveTo(881.629, 102.392);
    path17.lineTo(881.629, 111);
    path17.lineTo(879.725, 111);
    path17.lineTo(879.725, 105.032);
    path17.lineTo(875.629, 111);
    path17.lineTo(873.725, 111);
    path17.lineTo(873.725, 102.392);
    path17.lineTo(875.629, 102.392);
    path17.lineTo(875.629, 108.392);
    path17.lineTo(879.725, 102.392);
    path17.lineTo(881.629, 102.392);
    path17.close();
    Paint paint17 = Paint();
    paint17.color = const Color(0xFF000000);
    canvas.drawPath(path17, paint17);

    var path18 = Path()..fillType = PathFillType.nonZero;
    path18.moveTo(1087.39, 64.08);
    path18.lineTo(1087.39, 66.896);
    path18.lineTo(1089.82, 66.896);
    path18.cubicTo(1092.45, 66.896, 1094.14, 67.76, 1094.14, 70.352);
    path18.cubicTo(1094.14, 72.976, 1092.46, 74, 1089.73, 74);
    path18.lineTo(1085.36, 74);
    path18.lineTo(1085.36, 62.4);
    path18.lineTo(1093.28, 62.4);
    path18.lineTo(1093.28, 64.08);
    path18.lineTo(1087.39, 64.08);
    path18.close();
    path18.moveTo(1087.39, 72.32);
    path18.lineTo(1089.79, 72.32);
    path18.cubicTo(1091.25, 72.32, 1092.05, 71.664, 1092.05, 70.4);
    path18.cubicTo(1092.05, 69.04, 1091.22, 68.544, 1089.74, 68.544);
    path18.lineTo(1087.39, 68.544);
    path18.lineTo(1087.39, 72.32);
    path18.close();
    path18.moveTo(1097.14, 69.712);
    path18.cubicTo(1097.14, 71.696, 1098.19, 72.656, 1099.41, 72.656);
    path18.cubicTo(1100.62, 72.656, 1101.68, 71.696, 1101.68, 69.712);
    path18.cubicTo(1101.68, 67.728, 1100.62, 66.752, 1099.41, 66.752);
    path18.cubicTo(1098.19, 66.752, 1097.14, 67.728, 1097.14, 69.712);
    path18.close();
    path18.moveTo(1099.41, 65.2);
    path18.cubicTo(1101.5, 65.2, 1103.65, 66.608, 1103.65, 69.712);
    path18.cubicTo(1103.65, 72.832, 1101.5, 74.208, 1099.41, 74.208);
    path18.cubicTo(1097.31, 74.208, 1095.17, 72.832, 1095.17, 69.712);
    path18.cubicTo(1095.17, 66.608, 1097.31, 65.2, 1099.41, 65.2);
    path18.close();
    path18.moveTo(1112.56, 74);
    path18.lineTo(1110.65, 74);
    path18.lineTo(1110.65, 66.896);
    path18.lineTo(1108.12, 66.896);
    path18.lineTo(1108, 68.752);
    path18.cubicTo(1107.76, 72.352, 1106.8, 74, 1104.81, 74);
    path18.lineTo(1104.46, 74);
    path18.lineTo(1104.46, 72.496);
    path18.lineTo(1104.65, 72.496);
    path18.cubicTo(1105.36, 72.496, 1106.01, 71.744, 1106.19, 68.48);
    path18.lineTo(1106.35, 65.392);
    path18.lineTo(1112.56, 65.392);
    path18.lineTo(1112.56, 74);
    path18.close();
    path18.moveTo(1116.76, 68.288);
    path18.lineTo(1118.54, 68.288);
    path18.cubicTo(1120.9, 68.288, 1121.9, 69.184, 1121.9, 71.088);
    path18.cubicTo(1121.9, 73.264, 1120.71, 74, 1118.57, 74);
    path18.lineTo(1114.86, 74);
    path18.lineTo(1114.86, 65.392);
    path18.lineTo(1116.76, 65.392);
    path18.lineTo(1116.76, 68.288);
    path18.close();
    path18.moveTo(1116.76, 72.496);
    path18.lineTo(1118.31, 72.496);
    path18.cubicTo(1119.45, 72.496, 1120.01, 72.112, 1120.01, 71.072);
    path18.cubicTo(1120.01, 70.112, 1119.45, 69.792, 1118.3, 69.792);
    path18.lineTo(1116.76, 69.792);
    path18.lineTo(1116.76, 72.496);
    path18.close();
    path18.moveTo(1134.87, 65.392);
    path18.lineTo(1134.87, 74);
    path18.lineTo(1123.46, 74);
    path18.lineTo(1123.46, 65.392);
    path18.lineTo(1125.37, 65.392);
    path18.lineTo(1125.37, 72.496);
    path18.lineTo(1128.22, 72.496);
    path18.lineTo(1128.22, 65.392);
    path18.lineTo(1130.12, 65.392);
    path18.lineTo(1130.12, 72.496);
    path18.lineTo(1132.97, 72.496);
    path18.lineTo(1132.97, 65.392);
    path18.lineTo(1134.87, 65.392);
    path18.close();
    path18.moveTo(1144.88, 70.24);
    path18.lineTo(1138.46, 70.24);
    path18.cubicTo(1138.59, 71.84, 1139.71, 72.624, 1140.8, 72.624);
    path18.cubicTo(1141.81, 72.624, 1142.58, 72.24, 1142.91, 71.424);
    path18.lineTo(1144.78, 71.424);
    path18.cubicTo(1144.4, 72.8, 1143.09, 74.208, 1140.88, 74.208);
    path18.cubicTo(1138.11, 74.208, 1136.53, 72.112, 1136.53, 69.632);
    path18.cubicTo(1136.53, 67.04, 1138.3, 65.2, 1140.75, 65.2);
    path18.cubicTo(1143.39, 65.2, 1145.06, 67.36, 1144.88, 70.24);
    path18.close();
    path18.moveTo(1140.75, 66.688);
    path18.cubicTo(1139.86, 66.688, 1138.64, 67.232, 1138.46, 68.848);
    path18.lineTo(1142.94, 68.848);
    path18.cubicTo(1142.9, 67.504, 1141.87, 66.688, 1140.75, 66.688);
    path18.close();
    path18.moveTo(1150.23, 65.392);
    path18.lineTo(1154.28, 65.392);
    path18.cubicTo(1156.07, 65.392, 1157.51, 65.84, 1157.51, 67.616);
    path18.cubicTo(1157.51, 68.496, 1157.13, 69.104, 1156.37, 69.44);
    path18.cubicTo(1157.22, 69.696, 1157.86, 70.288, 1157.86, 71.424);
    path18.cubicTo(1157.86, 73.264, 1156.42, 74, 1154.49, 74);
    path18.lineTo(1150.23, 74);
    path18.lineTo(1150.23, 65.392);
    path18.close();
    path18.moveTo(1152.13, 68.912);
    path18.lineTo(1154.13, 68.912);
    path18.cubicTo(1155.08, 68.912, 1155.62, 68.64, 1155.62, 67.872);
    path18.cubicTo(1155.62, 67.12, 1155.06, 66.88, 1154.12, 66.88);
    path18.lineTo(1152.13, 66.88);
    path18.lineTo(1152.13, 68.912);
    path18.close();
    path18.moveTo(1152.13, 70.288);
    path18.lineTo(1152.13, 72.512);
    path18.lineTo(1154.26, 72.512);
    path18.cubicTo(1155.4, 72.512, 1155.96, 72.128, 1155.96, 71.36);
    path18.cubicTo(1155.96, 70.544, 1155.4, 70.288, 1154.25, 70.288);
    path18.lineTo(1152.13, 70.288);
    path18.close();
    path18.moveTo(1160.9, 69.712);
    path18.cubicTo(1160.9, 71.696, 1161.96, 72.656, 1163.17, 72.656);
    path18.cubicTo(1164.39, 72.656, 1165.45, 71.696, 1165.45, 69.712);
    path18.cubicTo(1165.45, 67.728, 1164.39, 66.752, 1163.17, 66.752);
    path18.cubicTo(1161.96, 66.752, 1160.9, 67.728, 1160.9, 69.712);
    path18.close();
    path18.moveTo(1163.17, 65.2);
    path18.cubicTo(1165.27, 65.2, 1167.41, 66.608, 1167.41, 69.712);
    path18.cubicTo(1167.41, 72.832, 1165.27, 74.208, 1163.17, 74.208);
    path18.cubicTo(1161.08, 74.208, 1158.93, 72.832, 1158.93, 69.712);
    path18.cubicTo(1158.93, 66.608, 1161.08, 65.2, 1163.17, 65.2);
    path18.close();
    path18.moveTo(1174.37, 69.456);
    path18.cubicTo(1175.31, 69.728, 1175.89, 70.32, 1175.89, 71.472);
    path18.cubicTo(1175.89, 73.376, 1174.23, 74.208, 1172.07, 74.208);
    path18.cubicTo(1170.18, 74.208, 1168.5, 73.392, 1168.19, 71.2);
    path18.lineTo(1170.02, 71.2);
    path18.cubicTo(1170.19, 72.176, 1170.91, 72.8, 1172.13, 72.8);
    path18.cubicTo(1173.35, 72.8, 1173.99, 72.32, 1173.99, 71.568);
    path18.cubicTo(1173.99, 70.672, 1173.38, 70.336, 1172.29, 70.336);
    path18.lineTo(1170.88, 70.336);
    path18.lineTo(1170.88, 68.848);
    path18.lineTo(1172.19, 68.848);
    path18.cubicTo(1173.14, 68.848, 1173.73, 68.528, 1173.73, 67.776);
    path18.cubicTo(1173.73, 66.992, 1173.27, 66.592, 1172.19, 66.592);
    path18.cubicTo(1171.12, 66.592, 1170.26, 67.104, 1170.11, 68.176);
    path18.lineTo(1168.29, 68.176);
    path18.cubicTo(1168.59, 66.144, 1170.32, 65.168, 1172.23, 65.168);
    path18.cubicTo(1174.1, 65.168, 1175.62, 65.92, 1175.62, 67.648);
    path18.cubicTo(1175.62, 68.496, 1175.2, 69.088, 1174.37, 69.456);
    path18.close();
    path18.moveTo(1187.74, 65.392);
    path18.lineTo(1187.74, 74);
    path18.lineTo(1185.9, 74);
    path18.lineTo(1185.9, 67.184);
    path18.lineTo(1183.37, 74);
    path18.lineTo(1181.9, 74);
    path18.lineTo(1179.37, 67.216);
    path18.lineTo(1179.37, 74);
    path18.lineTo(1177.53, 74);
    path18.lineTo(1177.53, 65.392);
    path18.lineTo(1180.41, 65.392);
    path18.lineTo(1182.66, 71.536);
    path18.lineTo(1184.86, 65.392);
    path18.lineTo(1187.74, 65.392);
    path18.close();
    path18.moveTo(1191.51, 69.712);
    path18.cubicTo(1191.51, 71.696, 1192.57, 72.656, 1193.78, 72.656);
    path18.cubicTo(1195, 72.656, 1196.05, 71.696, 1196.05, 69.712);
    path18.cubicTo(1196.05, 67.728, 1195, 66.752, 1193.78, 66.752);
    path18.cubicTo(1192.57, 66.752, 1191.51, 67.728, 1191.51, 69.712);
    path18.close();
    path18.moveTo(1193.78, 65.2);
    path18.cubicTo(1195.88, 65.2, 1198.02, 66.608, 1198.02, 69.712);
    path18.cubicTo(1198.02, 72.832, 1195.88, 74.208, 1193.78, 74.208);
    path18.cubicTo(1191.69, 74.208, 1189.54, 72.832, 1189.54, 69.712);
    path18.cubicTo(1189.54, 66.608, 1191.69, 65.2, 1193.78, 65.2);
    path18.close();
    path18.moveTo(1203.74, 74);
    path18.lineTo(1203.74, 70.24);
    path18.lineTo(1202.99, 70.24);
    path18.lineTo(1200.46, 74);
    path18.lineTo(1198.22, 74);
    path18.lineTo(1201.39, 69.472);
    path18.lineTo(1198.48, 65.392);
    path18.lineTo(1200.61, 65.392);
    path18.lineTo(1202.88, 68.736);
    path18.lineTo(1203.74, 68.736);
    path18.lineTo(1203.74, 65.392);
    path18.lineTo(1205.65, 65.392);
    path18.lineTo(1205.65, 68.736);
    path18.lineTo(1206.48, 68.736);
    path18.lineTo(1208.78, 65.392);
    path18.lineTo(1210.98, 65.392);
    path18.lineTo(1208.03, 69.456);
    path18.lineTo(1211.18, 74);
    path18.lineTo(1208.96, 74);
    path18.lineTo(1206.43, 70.24);
    path18.lineTo(1205.65, 70.24);
    path18.lineTo(1205.65, 74);
    path18.lineTo(1203.74, 74);
    path18.close();
    path18.moveTo(1220.18, 74);
    path18.lineTo(1218.27, 74);
    path18.lineTo(1218.27, 70.336);
    path18.lineTo(1214.43, 70.336);
    path18.lineTo(1214.43, 74);
    path18.lineTo(1212.53, 74);
    path18.lineTo(1212.53, 65.392);
    path18.lineTo(1214.43, 65.392);
    path18.lineTo(1214.43, 68.832);
    path18.lineTo(1218.27, 68.832);
    path18.lineTo(1218.27, 65.392);
    path18.lineTo(1220.18, 65.392);
    path18.lineTo(1220.18, 74);
    path18.close();
    path18.moveTo(1223.79, 69.712);
    path18.cubicTo(1223.79, 71.696, 1224.85, 72.656, 1226.06, 72.656);
    path18.cubicTo(1227.28, 72.656, 1228.34, 71.696, 1228.34, 69.712);
    path18.cubicTo(1228.34, 67.728, 1227.28, 66.752, 1226.06, 66.752);
    path18.cubicTo(1224.85, 66.752, 1223.79, 67.728, 1223.79, 69.712);
    path18.close();
    path18.moveTo(1226.06, 65.2);
    path18.cubicTo(1228.16, 65.2, 1230.3, 66.608, 1230.3, 69.712);
    path18.cubicTo(1230.3, 72.832, 1228.16, 74.208, 1226.06, 74.208);
    path18.cubicTo(1223.97, 74.208, 1221.82, 72.832, 1221.82, 69.712);
    path18.cubicTo(1221.82, 66.608, 1223.97, 65.2, 1226.06, 65.2);
    path18.close();
    path18.moveTo(1235.59, 65.2);
    path18.cubicTo(1237.48, 65.2, 1239.11, 66.432, 1239.45, 68.336);
    path18.lineTo(1237.59, 68.336);
    path18.cubicTo(1237.42, 67.424, 1236.63, 66.784, 1235.59, 66.784);
    path18.cubicTo(1234.39, 66.784, 1233.34, 67.664, 1233.34, 69.696);
    path18.cubicTo(1233.34, 71.744, 1234.43, 72.624, 1235.55, 72.624);
    path18.cubicTo(1236.49, 72.624, 1237.4, 72.208, 1237.66, 71.056);
    path18.lineTo(1239.51, 71.056);
    path18.cubicTo(1239.13, 73.072, 1237.35, 74.208, 1235.51, 74.208);
    path18.cubicTo(1233.02, 74.208, 1231.37, 72.272, 1231.37, 69.712);
    path18.cubicTo(1231.37, 67.152, 1233.02, 65.2, 1235.59, 65.2);
    path18.close();
    path18.moveTo(1247.66, 66.896);
    path18.lineTo(1244.73, 66.896);
    path18.lineTo(1244.73, 74);
    path18.lineTo(1242.82, 74);
    path18.lineTo(1242.82, 66.896);
    path18.lineTo(1239.88, 66.896);
    path18.lineTo(1239.88, 65.392);
    path18.lineTo(1247.66, 65.392);
    path18.lineTo(1247.66, 66.896);
    path18.close();
    path18.moveTo(1256.5, 70.24);
    path18.lineTo(1250.09, 70.24);
    path18.cubicTo(1250.22, 71.84, 1251.34, 72.624, 1252.42, 72.624);
    path18.cubicTo(1253.43, 72.624, 1254.2, 72.24, 1254.54, 71.424);
    path18.lineTo(1256.41, 71.424);
    path18.cubicTo(1256.02, 72.8, 1254.71, 74.208, 1252.5, 74.208);
    path18.cubicTo(1249.74, 74.208, 1248.15, 72.112, 1248.15, 69.632);
    path18.cubicTo(1248.15, 67.04, 1249.93, 65.2, 1252.38, 65.2);
    path18.cubicTo(1255.02, 65.2, 1256.68, 67.36, 1256.5, 70.24);
    path18.close();
    path18.moveTo(1252.38, 66.688);
    path18.cubicTo(1251.48, 66.688, 1250.26, 67.232, 1250.09, 68.848);
    path18.lineTo(1254.57, 68.848);
    path18.cubicTo(1254.52, 67.504, 1253.5, 66.688, 1252.38, 66.688);
    path18.close();
    path18.moveTo(1263.45, 62.4);
    path18.lineTo(1264.82, 62.4);
    path18.cubicTo(1264.7, 63.536, 1263.99, 64.336, 1262.17, 64.336);
    path18.cubicTo(1260.39, 64.336, 1259.62, 63.536, 1259.54, 62.4);
    path18.lineTo(1260.94, 62.4);
    path18.cubicTo(1261, 62.976, 1261.35, 63.28, 1262.18, 63.28);
    path18.cubicTo(1263, 63.28, 1263.38, 62.976, 1263.45, 62.4);
    path18.close();
    path18.moveTo(1266.07, 65.392);
    path18.lineTo(1266.07, 74);
    path18.lineTo(1264.17, 74);
    path18.lineTo(1264.17, 68.032);
    path18.lineTo(1260.07, 74);
    path18.lineTo(1258.17, 74);
    path18.lineTo(1258.17, 65.392);
    path18.lineTo(1260.07, 65.392);
    path18.lineTo(1260.07, 71.392);
    path18.lineTo(1264.17, 65.392);
    path18.lineTo(1266.07, 65.392);
    path18.close();
    path18.moveTo(1085.15, 89.392);
    path18.lineTo(1089.2, 89.392);
    path18.cubicTo(1090.99, 89.392, 1092.43, 89.84, 1092.43, 91.616);
    path18.cubicTo(1092.43, 92.496, 1092.05, 93.104, 1091.3, 93.44);
    path18.cubicTo(1092.14, 93.696, 1092.78, 94.288, 1092.78, 95.424);
    path18.cubicTo(1092.78, 97.264, 1091.34, 98, 1089.41, 98);
    path18.lineTo(1085.15, 98);
    path18.lineTo(1085.15, 89.392);
    path18.close();
    path18.moveTo(1087.06, 92.912);
    path18.lineTo(1089.06, 92.912);
    path18.cubicTo(1090, 92.912, 1090.54, 92.64, 1090.54, 91.872);
    path18.cubicTo(1090.54, 91.12, 1089.98, 90.88, 1089.04, 90.88);
    path18.lineTo(1087.06, 90.88);
    path18.lineTo(1087.06, 92.912);
    path18.close();
    path18.moveTo(1087.06, 94.288);
    path18.lineTo(1087.06, 96.512);
    path18.lineTo(1089.18, 96.512);
    path18.cubicTo(1090.32, 96.512, 1090.88, 96.128, 1090.88, 95.36);
    path18.cubicTo(1090.88, 94.544, 1090.32, 94.288, 1089.17, 94.288);
    path18.lineTo(1087.06, 94.288);
    path18.close();
    path18.moveTo(1105.46, 98);
    path18.lineTo(1103.56, 98);
    path18.lineTo(1103.56, 90.896);
    path18.lineTo(1101.03, 90.896);
    path18.lineTo(1100.9, 92.752);
    path18.cubicTo(1100.66, 96.352, 1099.7, 98, 1097.72, 98);
    path18.lineTo(1097.37, 98);
    path18.lineTo(1097.37, 96.496);
    path18.lineTo(1097.56, 96.496);
    path18.cubicTo(1098.26, 96.496, 1098.92, 95.744, 1099.09, 92.48);
    path18.lineTo(1099.25, 89.392);
    path18.lineTo(1105.46, 89.392);
    path18.lineTo(1105.46, 98);
    path18.close();
    path18.moveTo(1115.67, 89.392);
    path18.lineTo(1115.67, 98);
    path18.lineTo(1113.76, 98);
    path18.lineTo(1113.76, 92.032);
    path18.lineTo(1109.67, 98);
    path18.lineTo(1107.76, 98);
    path18.lineTo(1107.76, 89.392);
    path18.lineTo(1109.67, 89.392);
    path18.lineTo(1109.67, 95.392);
    path18.lineTo(1113.76, 89.392);
    path18.lineTo(1115.67, 89.392);
    path18.close();
    path18.moveTo(1124.51, 98);
    path18.lineTo(1122.61, 98);
    path18.lineTo(1122.61, 94.672);
    path18.cubicTo(1121.7, 94.912, 1120.98, 95.008, 1120.19, 95.008);
    path18.cubicTo(1118.38, 95.008, 1117.36, 94.16, 1117.36, 92.288);
    path18.lineTo(1117.36, 89.392);
    path18.lineTo(1119.26, 89.392);
    path18.lineTo(1119.26, 91.952);
    path18.cubicTo(1119.26, 93.04, 1119.78, 93.456, 1120.94, 93.456);
    path18.cubicTo(1121.44, 93.456, 1121.95, 93.392, 1122.61, 93.216);
    path18.lineTo(1122.61, 89.392);
    path18.lineTo(1124.51, 89.392);
    path18.lineTo(1124.51, 98);
    path18.close();
    path18.moveTo(1134.47, 98);
    path18.lineTo(1132.57, 98);
    path18.lineTo(1132.57, 94.336);
    path18.lineTo(1128.73, 94.336);
    path18.lineTo(1128.73, 98);
    path18.lineTo(1126.82, 98);
    path18.lineTo(1126.82, 89.392);
    path18.lineTo(1128.73, 89.392);
    path18.lineTo(1128.73, 92.832);
    path18.lineTo(1132.57, 92.832);
    path18.lineTo(1132.57, 89.392);
    path18.lineTo(1134.47, 89.392);
    path18.lineTo(1134.47, 98);
    path18.close();
    path18.moveTo(1138.09, 93.712);
    path18.cubicTo(1138.09, 95.696, 1139.15, 96.656, 1140.36, 96.656);
    path18.cubicTo(1141.58, 96.656, 1142.63, 95.696, 1142.63, 93.712);
    path18.cubicTo(1142.63, 91.728, 1141.58, 90.752, 1140.36, 90.752);
    path18.cubicTo(1139.15, 90.752, 1138.09, 91.728, 1138.09, 93.712);
    path18.close();
    path18.moveTo(1140.36, 89.2);
    path18.cubicTo(1142.46, 89.2, 1144.6, 90.608, 1144.6, 93.712);
    path18.cubicTo(1144.6, 96.832, 1142.46, 98.208, 1140.36, 98.208);
    path18.cubicTo(1138.27, 98.208, 1136.12, 96.832, 1136.12, 93.712);
    path18.cubicTo(1136.12, 90.608, 1138.27, 89.2, 1140.36, 89.2);
    path18.close();
    path18.moveTo(1156.45, 89.392);
    path18.lineTo(1156.45, 98);
    path18.lineTo(1154.61, 98);
    path18.lineTo(1154.61, 91.184);
    path18.lineTo(1152.09, 98);
    path18.lineTo(1150.61, 98);
    path18.lineTo(1148.09, 91.216);
    path18.lineTo(1148.09, 98);
    path18.lineTo(1146.25, 98);
    path18.lineTo(1146.25, 89.392);
    path18.lineTo(1149.13, 89.392);
    path18.lineTo(1151.38, 95.536);
    path18.lineTo(1153.57, 89.392);
    path18.lineTo(1156.45, 89.392);
    path18.close();
    path18.moveTo(1168.25, 98);
    path18.lineTo(1165.42, 94.24);
    path18.lineTo(1164.53, 94.24);
    path18.lineTo(1164.53, 98);
    path18.lineTo(1162.61, 98);
    path18.lineTo(1162.61, 89.392);
    path18.lineTo(1164.53, 89.392);
    path18.lineTo(1164.53, 92.736);
    path18.lineTo(1165.57, 92.736);
    path18.lineTo(1168.05, 89.392);
    path18.lineTo(1170.22, 89.392);
    path18.lineTo(1166.97, 93.568);
    path18.lineTo(1170.45, 98);
    path18.lineTo(1168.25, 98);
    path18.close();
    path18.moveTo(1176.73, 94.608);
    path18.lineTo(1176.73, 93.952);
    path18.cubicTo(1174.01, 94.208, 1172.9, 94.608, 1172.9, 95.584);
    path18.cubicTo(1172.9, 96.336, 1173.53, 96.784, 1174.49, 96.784);
    path18.cubicTo(1175.9, 96.784, 1176.73, 96.08, 1176.73, 94.608);
    path18.close();
    path18.moveTo(1174.07, 98.208);
    path18.cubicTo(1172.2, 98.208, 1170.89, 97.2, 1170.89, 95.632);
    path18.cubicTo(1170.89, 93.472, 1173.54, 92.96, 1176.68, 92.624);
    path18.lineTo(1176.68, 92.464);
    path18.cubicTo(1176.68, 90.992, 1175.85, 90.544, 1174.89, 90.544);
    path18.cubicTo(1173.93, 90.544, 1173.21, 91.056, 1173.16, 92.096);
    path18.lineTo(1171.29, 92.096);
    path18.cubicTo(1171.42, 90.352, 1172.87, 89.136, 1174.95, 89.136);
    path18.cubicTo(1177.02, 89.136, 1178.63, 90.08, 1178.58, 92.832);
    path18.cubicTo(1178.58, 93.248, 1178.55, 94.272, 1178.55, 95.056);
    path18.cubicTo(1178.55, 96.144, 1178.63, 97.28, 1178.81, 98);
    path18.lineTo(1177.06, 98);
    path18.cubicTo(1177, 97.632, 1176.95, 97.424, 1176.9, 96.832);
    path18.cubicTo(1176.34, 97.776, 1175.35, 98.208, 1174.07, 98.208);
    path18.close();
    path18.moveTo(1184.65, 89.904);
    path18.cubicTo(1186.65, 89.904, 1188.4, 91.28, 1188.4, 93.984);
    path18.cubicTo(1188.4, 96.752, 1186.46, 98.208, 1184.3, 98.208);
    path18.cubicTo(1182.03, 98.208, 1180.14, 96.592, 1180.14, 93.28);
    path18.lineTo(1180.14, 92.512);
    path18.cubicTo(1180.19, 89.392, 1181.65, 87.136, 1184.7, 86.672);
    path18.lineTo(1187.71, 86.208);
    path18.lineTo(1187.71, 87.872);
    path18.lineTo(1184.8, 88.352);
    path18.cubicTo(1183.25, 88.608, 1182, 89.36, 1181.69, 91.488);
    path18.cubicTo(1182.32, 90.4, 1183.44, 89.904, 1184.65, 89.904);
    path18.close();
    path18.moveTo(1184.3, 96.672);
    path18.cubicTo(1185.57, 96.672, 1186.43, 95.728, 1186.43, 93.984);
    path18.cubicTo(1186.43, 92.272, 1185.47, 91.408, 1184.32, 91.408);
    path18.cubicTo(1183.12, 91.408, 1182.06, 92.256, 1182.06, 93.984);
    path18.cubicTo(1182.06, 95.664, 1183.01, 96.672, 1184.3, 96.672);
    path18.close();
    path18.moveTo(1197.88, 89.392);
    path18.lineTo(1197.88, 98);
    path18.lineTo(1195.98, 98);
    path18.lineTo(1195.98, 92.032);
    path18.lineTo(1191.88, 98);
    path18.lineTo(1189.98, 98);
    path18.lineTo(1189.98, 89.392);
    path18.lineTo(1191.88, 89.392);
    path18.lineTo(1191.88, 95.392);
    path18.lineTo(1195.98, 89.392);
    path18.lineTo(1197.88, 89.392);
    path18.close();
    path18.moveTo(1207.68, 98);
    path18.lineTo(1205.77, 98);
    path18.lineTo(1205.77, 94.336);
    path18.lineTo(1201.93, 94.336);
    path18.lineTo(1201.93, 98);
    path18.lineTo(1200.03, 98);
    path18.lineTo(1200.03, 89.392);
    path18.lineTo(1201.93, 89.392);
    path18.lineTo(1201.93, 92.832);
    path18.lineTo(1205.77, 92.832);
    path18.lineTo(1205.77, 89.392);
    path18.lineTo(1207.68, 89.392);
    path18.lineTo(1207.68, 98);
    path18.close();
    path18.moveTo(1217.68, 94.24);
    path18.lineTo(1211.26, 94.24);
    path18.cubicTo(1211.39, 95.84, 1212.51, 96.624, 1213.6, 96.624);
    path18.cubicTo(1214.6, 96.624, 1215.37, 96.24, 1215.71, 95.424);
    path18.lineTo(1217.58, 95.424);
    path18.cubicTo(1217.2, 96.8, 1215.88, 98.208, 1213.68, 98.208);
    path18.cubicTo(1210.91, 98.208, 1209.32, 96.112, 1209.32, 93.632);
    path18.cubicTo(1209.32, 91.04, 1211.1, 89.2, 1213.55, 89.2);
    path18.cubicTo(1216.19, 89.2, 1217.85, 91.36, 1217.68, 94.24);
    path18.close();
    path18.moveTo(1213.55, 90.688);
    path18.cubicTo(1212.65, 90.688, 1211.44, 91.232, 1211.26, 92.848);
    path18.lineTo(1215.74, 92.848);
    path18.cubicTo(1215.69, 91.504, 1214.67, 90.688, 1213.55, 90.688);
    path18.close();
    path18.moveTo(1225.92, 90.896);
    path18.lineTo(1222.99, 90.896);
    path18.lineTo(1222.99, 98);
    path18.lineTo(1221.09, 98);
    path18.lineTo(1221.09, 90.896);
    path18.lineTo(1218.15, 90.896);
    path18.lineTo(1218.15, 89.392);
    path18.lineTo(1225.92, 89.392);
    path18.lineTo(1225.92, 90.896);
    path18.close();
    path18.moveTo(1234.77, 94.24);
    path18.lineTo(1228.35, 94.24);
    path18.cubicTo(1228.48, 95.84, 1229.6, 96.624, 1230.69, 96.624);
    path18.cubicTo(1231.7, 96.624, 1232.47, 96.24, 1232.8, 95.424);
    path18.lineTo(1234.67, 95.424);
    path18.cubicTo(1234.29, 96.8, 1232.98, 98.208, 1230.77, 98.208);
    path18.cubicTo(1228, 98.208, 1226.42, 96.112, 1226.42, 93.632);
    path18.cubicTo(1226.42, 91.04, 1228.19, 89.2, 1230.64, 89.2);
    path18.cubicTo(1233.28, 89.2, 1234.95, 91.36, 1234.77, 94.24);
    path18.close();
    path18.moveTo(1230.64, 90.688);
    path18.cubicTo(1229.75, 90.688, 1228.53, 91.232, 1228.35, 92.848);
    path18.lineTo(1232.83, 92.848);
    path18.cubicTo(1232.79, 91.504, 1231.76, 90.688, 1230.64, 90.688);
    path18.close();
    Paint paint18 = Paint();
    paint18.color = const Color(0xCCFFFFFF);
    canvas.drawPath(path18, paint18);

    var path19 = Path()..fillType = PathFillType.nonZero;
    path19.moveTo(1084, 104);
    path19.lineTo(1085, 104);
    path19.lineTo(1085, 112);
    path19.lineTo(1084, 112);
    path19.close();
    Paint paint19 = Paint();
    paint19.color = const Color(0x03FFFFFF);
    canvas.drawPath(path19, paint19);

    var path20 = Path()..fillType = PathFillType.nonZero;
    path20.moveTo(1084, 112);
    path20.lineTo(1085, 112);
    path20.lineTo(1085, 120);
    path20.lineTo(1084, 120);
    path20.close();
    Paint paint20 = Paint();
    paint20.color = const Color(0x03FFFFFF);
    canvas.drawPath(path20, paint20);

    var path21 = Path()..fillType = PathFillType.nonZero;
    path21.moveTo(1096, 120);
    path21.lineTo(1320, 120);
    path21.cubicTo(1326.6274, 120, 1332, 125.37258, 1332, 132);
    path21.lineTo(1332, 156);
    path21.cubicTo(1332, 162.62741, 1326.6274, 168, 1320, 168);
    path21.lineTo(1096, 168);
    path21.cubicTo(1089.3726, 168, 1084, 162.62741, 1084, 156);
    path21.lineTo(1084, 132);
    path21.cubicTo(1084, 125.37258, 1089.3726, 120, 1096, 120);
    path21.close();
    Paint paint21 = Paint();
    paint21.color = const Color(0xFF000000);
    canvas.drawPath(path21, paint21);

    var path22 = Path()..fillType = PathFillType.nonZero;
    path22.moveTo(1198.93, 150);
    path22.lineTo(1196.9, 150);
    path22.lineTo(1196.9, 140.096);
    path22.lineTo(1191.65, 140.096);
    path22.lineTo(1191.65, 150);
    path22.lineTo(1189.62, 150);
    path22.lineTo(1189.62, 138.4);
    path22.lineTo(1198.93, 138.4);
    path22.lineTo(1198.93, 150);
    path22.close();
    path22.moveTo(1203.19, 145.696);
    path22.cubicTo(1203.19, 147.68, 1204.16, 148.656, 1205.41, 148.656);
    path22.cubicTo(1206.75, 148.656, 1207.54, 147.536, 1207.54, 145.696);
    path22.cubicTo(1207.54, 143.888, 1206.75, 142.752, 1205.41, 142.752);
    path22.cubicTo(1204.16, 142.752, 1203.19, 143.712, 1203.19, 145.696);
    path22.close();
    path22.moveTo(1201.36, 141.392);
    path22.lineTo(1203.27, 141.392);
    path22.lineTo(1203.27, 142.544);
    path22.cubicTo(1203.78, 141.696, 1204.67, 141.2, 1205.83, 141.2);
    path22.cubicTo(1207.94, 141.2, 1209.52, 142.944, 1209.52, 145.696);
    path22.cubicTo(1209.52, 148.464, 1207.94, 150.208, 1205.83, 150.208);
    path22.cubicTo(1204.67, 150.208, 1203.78, 149.712, 1203.27, 148.864);
    path22.lineTo(1203.27, 152.8);
    path22.lineTo(1201.36, 152.8);
    path22.lineTo(1201.36, 141.392);
    path22.close();
    path22.moveTo(1212.57, 145.712);
    path22.cubicTo(1212.57, 147.696, 1213.62, 148.656, 1214.84, 148.656);
    path22.cubicTo(1216.05, 148.656, 1217.11, 147.696, 1217.11, 145.712);
    path22.cubicTo(1217.11, 143.728, 1216.05, 142.752, 1214.84, 142.752);
    path22.cubicTo(1213.62, 142.752, 1212.57, 143.728, 1212.57, 145.712);
    path22.close();
    path22.moveTo(1214.84, 141.2);
    path22.cubicTo(1216.93, 141.2, 1219.08, 142.608, 1219.08, 145.712);
    path22.cubicTo(1219.08, 148.832, 1216.93, 150.208, 1214.84, 150.208);
    path22.cubicTo(1212.74, 150.208, 1210.6, 148.832, 1210.6, 145.712);
    path22.cubicTo(1210.6, 142.608, 1212.74, 141.2, 1214.84, 141.2);
    path22.close();
    path22.moveTo(1226.54, 138.4);
    path22.lineTo(1226.54, 141.392);
    path22.cubicTo(1228.99, 141.392, 1231.04, 142.768, 1231.04, 145.744);
    path22.cubicTo(1231.04, 148.816, 1228.98, 150.096, 1226.54, 150.096);
    path22.lineTo(1226.54, 152.8);
    path22.lineTo(1224.64, 152.8);
    path22.lineTo(1224.64, 150.096);
    path22.cubicTo(1222.19, 150.096, 1220.14, 148.816, 1220.14, 145.744);
    path22.cubicTo(1220.14, 142.768, 1222.19, 141.392, 1224.64, 141.392);
    path22.lineTo(1224.64, 138.4);
    path22.lineTo(1226.54, 138.4);
    path22.close();
    path22.moveTo(1224.64, 148.576);
    path22.lineTo(1224.64, 142.928);
    path22.cubicTo(1223.17, 142.928, 1222.06, 143.776, 1222.06, 145.808);
    path22.cubicTo(1222.06, 147.808, 1223.15, 148.576, 1224.64, 148.576);
    path22.close();
    path22.moveTo(1226.54, 142.928);
    path22.lineTo(1226.54, 148.576);
    path22.cubicTo(1228.03, 148.576, 1229.1, 147.808, 1229.1, 145.808);
    path22.cubicTo(1229.1, 143.776, 1228.03, 142.928, 1226.54, 142.928);
    path22.close();
    path22.moveTo(1240.58, 141.392);
    path22.lineTo(1240.58, 150);
    path22.lineTo(1238.68, 150);
    path22.lineTo(1238.68, 144.032);
    path22.lineTo(1234.58, 150);
    path22.lineTo(1232.68, 150);
    path22.lineTo(1232.68, 141.392);
    path22.lineTo(1234.58, 141.392);
    path22.lineTo(1234.58, 147.392);
    path22.lineTo(1238.68, 141.392);
    path22.lineTo(1240.58, 141.392);
    path22.close();
    path22.moveTo(1249.99, 150);
    path22.lineTo(1248.08, 150);
    path22.lineTo(1248.08, 142.896);
    path22.lineTo(1245.55, 142.896);
    path22.lineTo(1245.43, 144.752);
    path22.cubicTo(1245.19, 148.352, 1244.23, 150, 1242.24, 150);
    path22.lineTo(1241.89, 150);
    path22.lineTo(1241.89, 148.496);
    path22.lineTo(1242.08, 148.496);
    path22.cubicTo(1242.79, 148.496, 1243.44, 147.744, 1243.62, 144.48);
    path22.lineTo(1243.78, 141.392);
    path22.lineTo(1249.99, 141.392);
    path22.lineTo(1249.99, 150);
    path22.close();
    path22.moveTo(1254.19, 144.288);
    path22.lineTo(1255.96, 144.288);
    path22.cubicTo(1258.33, 144.288, 1259.32, 145.184, 1259.32, 147.088);
    path22.cubicTo(1259.32, 149.264, 1258.14, 150, 1256, 150);
    path22.lineTo(1252.28, 150);
    path22.lineTo(1252.28, 141.392);
    path22.lineTo(1254.19, 141.392);
    path22.lineTo(1254.19, 144.288);
    path22.close();
    path22.moveTo(1254.19, 148.496);
    path22.lineTo(1255.74, 148.496);
    path22.cubicTo(1256.88, 148.496, 1257.44, 148.112, 1257.44, 147.072);
    path22.cubicTo(1257.44, 146.112, 1256.88, 145.792, 1255.72, 145.792);
    path22.lineTo(1254.19, 145.792);
    path22.lineTo(1254.19, 148.496);
    path22.close();
    Paint paint22 = Paint();
    paint22.color = const Color(0xFF000000);
    canvas.drawPath(path22, paint22);

    var path23 = Path()..fillType = PathFillType.nonZero;
    path23.moveTo(108, 178);
    path23.lineTo(109, 178);
    path23.lineTo(109, 234);
    path23.lineTo(108, 234);
    path23.close();
    Paint paint23 = Paint();
    paint23.color = const Color(0x03FFFFFF);
    canvas.drawPath(path23, paint23);

    var path24 = Path()..fillType = PathFillType.nonZero;
    path24.moveTo(0, 0);
    path24.lineTo(1224, 0);
    path24.lineTo(1224, 157);
    path24.lineTo(0, 157);
    path24.close();
    path24 = path24.transform(
        Matrix4(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 108, 234, 0, 1).storage);
    Paint paint24 = Paint();
    paint24.color = const Color(0xFF000000);
    canvas.drawPath(path24, paint24);

    var path25 = Path()..fillType = PathFillType.nonZero;
    path25.moveTo(108, 240.087);
    path25.cubicTo(108, 236.725, 110.725, 234, 114.087, 234);
    path25.lineTo(141.913, 234);
    path25.cubicTo(145.275, 234, 148, 236.725, 148, 240.087);
    path25.lineTo(148, 267.913);
    path25.cubicTo(148, 271.275, 145.275, 274, 141.913, 274);
    path25.lineTo(114.087, 274);
    path25.cubicTo(110.725, 274, 108, 271.275, 108, 267.913);
    path25.lineTo(108, 240.087);
    path25.close();
    Paint paint25 = Paint();
    paint25.color = const Color(0xFF000000);
    canvas.drawPath(path25, paint25);

    var path26 = Path()..fillType = PathFillType.nonZero;
    path26.moveTo(138.129, 267.125);
    path26.cubicTo(136.343, 267.125, 135.113, 266.146, 135.113, 263.114);
    path26.lineTo(135.113, 262.462);
    path26.lineTo(137.097, 262.462);
    path26.lineTo(137.097, 263.115);
    path26.cubicTo(137.097, 264.727, 137.534, 265.168, 138.129, 265.168);
    path26.cubicTo(138.724, 265.168, 139.141, 264.727, 139.141, 263.978);
    path26.cubicTo(139.141, 263.038, 139.002, 262.52, 137.613, 261.541);
    path26.cubicTo(135.986, 260.409, 135.232, 259.2, 135.232, 257.646);
    path26.cubicTo(135.232, 255.67, 136.303, 254.48, 138.129, 254.48);
    path26.cubicTo(139.399, 254.48, 141.085, 254.864, 141.085, 258.087);
    path26.lineTo(141.085, 258.836);
    path26.lineTo(139.101, 258.836);
    path26.lineTo(139.101, 258.087);
    path26.cubicTo(139.101, 256.821, 138.685, 256.399, 138.129, 256.399);
    path26.cubicTo(137.534, 256.399, 137.216, 256.821, 137.216, 257.569);
    path26.cubicTo(137.216, 258.336, 137.395, 258.97, 138.784, 260.006);
    path26.cubicTo(140.51, 261.292, 141.125, 262.309, 141.125, 263.978);
    path26.cubicTo(141.125, 265.647, 140.331, 267.125, 138.129, 267.125);
    path26.close();
    path26.moveTo(131.363, 267.125);
    path26.cubicTo(129.577, 267.125, 128.347, 266.3, 128.347, 263.114);
    path26.lineTo(128.347, 262.462);
    path26.lineTo(130.331, 262.462);
    path26.lineTo(130.331, 263.115);
    path26.cubicTo(130.331, 264.727, 130.768, 265.168, 131.363, 265.168);
    path26.cubicTo(131.958, 265.168, 132.375, 264.727, 132.375, 263.978);
    path26.cubicTo(132.375, 263.038, 132.236, 262.52, 130.847, 261.541);
    path26.cubicTo(129.22, 260.409, 128.466, 259.2, 128.466, 257.646);
    path26.cubicTo(128.466, 255.67, 129.537, 254.48, 131.363, 254.48);
    path26.cubicTo(132.633, 254.48, 134.319, 254.864, 134.319, 258.087);
    path26.lineTo(134.319, 258.836);
    path26.lineTo(132.335, 258.836);
    path26.lineTo(132.335, 258.087);
    path26.cubicTo(132.335, 256.821, 131.919, 256.399, 131.363, 256.399);
    path26.cubicTo(130.768, 256.399, 130.45, 256.821, 130.45, 257.569);
    path26.cubicTo(130.45, 258.336, 130.629, 258.97, 132.018, 260.006);
    path26.cubicTo(133.744, 261.292, 134.359, 262.309, 134.359, 263.978);
    path26.cubicTo(134.359, 265.647, 133.565, 267.125, 131.363, 267.125);
    path26.close();
    path26.moveTo(138.129, 253.52);
    path26.cubicTo(136.343, 253.52, 135.113, 252.541, 135.113, 249.51);
    path26.lineTo(135.113, 248.857);
    path26.lineTo(137.097, 248.857);
    path26.lineTo(137.097, 249.51);
    path26.cubicTo(137.097, 251.122, 137.534, 251.563, 138.129, 251.563);
    path26.cubicTo(138.724, 251.563, 139.141, 251.122, 139.141, 250.373);
    path26.cubicTo(139.141, 249.433, 139.002, 248.915, 137.613, 247.936);
    path26.cubicTo(135.986, 246.804, 135.232, 245.595, 135.232, 244.041);
    path26.cubicTo(135.232, 242.065, 136.303, 240.875, 138.129, 240.875);
    path26.cubicTo(139.399, 240.875, 141.085, 241.259, 141.085, 244.482);
    path26.lineTo(141.085, 245.231);
    path26.lineTo(139.101, 245.231);
    path26.lineTo(139.101, 244.482);
    path26.cubicTo(139.101, 243.216, 138.685, 242.794, 138.129, 242.794);
    path26.cubicTo(137.534, 242.794, 137.216, 243.216, 137.216, 243.964);
    path26.cubicTo(137.216, 244.732, 137.395, 245.365, 138.784, 246.401);
    path26.cubicTo(140.51, 247.687, 141.125, 248.704, 141.125, 250.373);
    path26.cubicTo(141.125, 252.042, 140.331, 253.52, 138.129, 253.52);
    path26.close();
    path26.moveTo(131.363, 253.52);
    path26.cubicTo(129.577, 253.52, 128.347, 252.695, 128.347, 249.51);
    path26.lineTo(128.347, 248.857);
    path26.lineTo(130.331, 248.857);
    path26.lineTo(130.331, 249.51);
    path26.cubicTo(130.331, 251.122, 130.768, 251.563, 131.363, 251.563);
    path26.cubicTo(131.958, 251.563, 132.375, 251.122, 132.375, 250.373);
    path26.cubicTo(132.375, 249.433, 132.236, 248.915, 130.847, 247.936);
    path26.cubicTo(129.22, 246.804, 128.466, 245.595, 128.466, 244.041);
    path26.cubicTo(128.466, 242.065, 129.537, 240.875, 131.363, 240.875);
    path26.cubicTo(132.633, 240.875, 134.319, 241.259, 134.319, 244.482);
    path26.lineTo(134.319, 245.231);
    path26.lineTo(132.335, 245.231);
    path26.lineTo(132.335, 244.482);
    path26.cubicTo(132.335, 243.216, 131.919, 242.794, 131.363, 242.794);
    path26.cubicTo(130.768, 242.794, 130.45, 243.216, 130.45, 243.964);
    path26.cubicTo(130.45, 244.732, 130.629, 245.365, 132.018, 246.401);
    path26.cubicTo(133.744, 247.687, 134.359, 248.704, 134.359, 250.373);
    path26.cubicTo(134.359, 252.042, 133.565, 253.52, 131.363, 253.52);
    path26.close();
    path26.moveTo(116.859, 262.462);
    path26.lineTo(117.256, 262.462);
    path26.cubicTo(118.129, 262.462, 118.566, 262.04, 118.566, 260.083);
    path26.lineTo(118.566, 258.97);
    path26.cubicTo(118.566, 257.013, 118.129, 256.591, 117.256, 256.591);
    path26.lineTo(116.859, 256.591);
    path26.lineTo(116.859, 262.462);
    path26.close();
    path26.moveTo(116.859, 266.933);
    path26.lineTo(114.875, 266.933);
    path26.lineTo(114.875, 254.671);
    path26.lineTo(117.256, 254.671);
    path26.cubicTo(119.836, 254.671, 120.55, 256.091, 120.55, 258.778);
    path26.lineTo(120.55, 260.275);
    path26.cubicTo(120.55, 262.961, 119.836, 264.381, 117.256, 264.381);
    path26.lineTo(116.859, 264.381);
    path26.lineTo(116.859, 266.933);
    path26.close();
    path26.moveTo(117.256, 246.939);
    path26.lineTo(116.859, 246.939);
    path26.lineTo(116.859, 242.986);
    path26.lineTo(117.256, 242.986);
    path26.cubicTo(118.149, 242.986, 118.565, 243.274, 118.565, 244.617);
    path26.lineTo(118.565, 245.307);
    path26.cubicTo(118.566, 246.651, 118.149, 246.939, 117.256, 246.939);
    path26.close();
    path26.moveTo(120.927, 253.329);
    path26.lineTo(119.399, 248.224);
    path26.cubicTo(120.133, 247.629, 120.55, 246.651, 120.55, 245.442);
    path26.lineTo(120.55, 244.483);
    path26.cubicTo(120.55, 242.238, 119.518, 241.067, 117.256, 241.067);
    path26.lineTo(114.875, 241.067);
    path26.lineTo(114.875, 253.329);
    path26.lineTo(116.859, 253.329);
    path26.lineTo(116.859, 248.857);
    path26.lineTo(117.117, 248.857);
    path26.cubicTo(117.216, 248.857, 117.355, 248.857, 117.573, 248.838);
    path26.lineTo(118.764, 253.328);
    path26.lineTo(120.927, 253.329);
    path26.close();
    path26.moveTo(123.188, 262.462);
    path26.lineTo(124.2, 256.591);
    path26.lineTo(124.359, 256.591);
    path26.lineTo(125.371, 262.462);
    path26.lineTo(123.188, 262.462);
    path26.close();
    path26.moveTo(126.125, 266.933);
    path26.lineTo(128.109, 266.933);
    path26.lineTo(125.907, 254.671);
    path26.lineTo(122.653, 254.671);
    path26.lineTo(120.431, 266.933);
    path26.lineTo(122.415, 266.933);
    path26.lineTo(122.871, 264.381);
    path26.lineTo(125.689, 264.381);
    path26.lineTo(126.125, 266.933);
    path26.close();
    path26.moveTo(124.478, 253.52);
    path26.cubicTo(122.038, 253.52, 121.581, 251.736, 121.581, 249.567);
    path26.lineTo(121.581, 241.067);
    path26.lineTo(123.645, 241.067);
    path26.lineTo(123.645, 249.74);
    path26.cubicTo(123.645, 251.256, 123.923, 251.601, 124.478, 251.601);
    path26.cubicTo(125.034, 251.601, 125.311, 251.256, 125.311, 249.74);
    path26.lineTo(125.311, 241.067);
    path26.lineTo(127.375, 241.067);
    path26.lineTo(127.375, 249.568);
    path26.cubicTo(127.375, 251.736, 126.919, 253.52, 124.478, 253.52);
    path26.close();
    Paint paint26 = Paint();
    paint26.color = const Color(0xFFFFFFFF);
    canvas.drawPath(path26, paint26);

    var path27 = Path()..fillType = PathFillType.nonZero;
    path27.moveTo(156, 261.821);
    path27.lineTo(156, 246.183);
    path27.lineTo(162.881, 246.183);
    path27.lineTo(162.881, 248.418);
    path27.lineTo(158.457, 248.418);
    path27.lineTo(158.457, 252.417);
    path27.lineTo(159.886, 252.417);
    path27.cubicTo(161.122, 252.417, 162.05, 252.745, 162.668, 253.4);
    path27.cubicTo(163.285, 254.055, 163.595, 255.015, 163.595, 256.282);
    path27.lineTo(163.595, 257.958);
    path27.cubicTo(163.595, 259.224, 163.285, 260.184, 162.668, 260.839);
    path27.cubicTo(162.05, 261.495, 161.122, 261.823, 159.886, 261.823);
    path27.lineTo(156, 261.823);
    path27.lineTo(156, 261.821);
    path27.close();
    path27.moveTo(159.888, 259.586);
    path27.cubicTo(160.275, 259.586, 160.581, 259.482, 160.803, 259.272);
    path27.cubicTo(161.027, 259.065, 161.138, 258.678, 161.138, 258.11);
    path27.lineTo(161.138, 256.122);
    path27.cubicTo(161.138, 255.556, 161.027, 255.169, 160.803, 254.96);
    path27.cubicTo(160.579, 254.752, 160.275, 254.646, 159.888, 254.646);
    path27.lineTo(158.459, 254.646);
    path27.lineTo(158.459, 259.584);
    path27.lineTo(159.888, 259.584);
    path27.lineTo(159.888, 259.586);
    path27.close();
    Paint paint27 = Paint();
    paint27.color = const Color(0xFFFFFFFF);
    canvas.drawPath(path27, paint27);

    var path28 = Path()..fillType = PathFillType.nonZero;
    path28.moveTo(167.775, 261.821);
    path28.lineTo(165.25, 261.821);
    path28.lineTo(165.25, 246.183);
    path28.lineTo(167.44, 246.183);
    path28.lineTo(167.44, 256.079);
    path28.lineTo(168.334, 252.639);
    path28.lineTo(170.345, 246.183);
    path28.lineTo(173.048, 246.183);
    path28.lineTo(173.048, 261.821);
    path28.lineTo(170.836, 261.821);
    path28.lineTo(170.836, 250.807);
    path28.lineTo(169.831, 254.65);
    path28.lineTo(167.775, 261.821);
    path28.close();
    Paint paint28 = Paint();
    paint28.color = const Color(0xFFFFFFFF);
    canvas.drawPath(path28, paint28);

    var path29 = Path()..fillType = PathFillType.nonZero;
    path29.moveTo(179.525, 250.024);
    path29.cubicTo(179.525, 249.324, 179.409, 248.851, 179.18, 248.606);
    path29.cubicTo(178.949, 248.36, 178.639, 248.237, 178.252, 248.237);
    path29.cubicTo(177.865, 248.237, 177.552, 248.353, 177.314, 248.582);
    path29.cubicTo(177.075, 248.814, 176.955, 249.211, 176.955, 249.777);
    path29.lineTo(176.955, 251.05);
    path29.lineTo(174.699, 251.05);
    path29.lineTo(174.699, 249.888);
    path29.cubicTo(174.699, 248.622, 175, 247.658, 175.603, 246.994);
    path29.cubicTo(176.207, 246.331, 177.111, 246, 178.318, 246);
    path29.cubicTo(179.525, 246, 180.437, 246.338, 181.055, 247.017);
    path29.cubicTo(181.673, 247.696, 181.983, 248.667, 181.983, 249.933);
    path29.lineTo(181.983, 250.336);
    path29.cubicTo(181.983, 252.003, 181.409, 253.076, 180.261, 253.552);
    path29.cubicTo(180.887, 253.821, 181.331, 254.235, 181.59, 254.792);
    path29.cubicTo(181.85, 255.35, 181.981, 256.031, 181.981, 256.835);
    path29.lineTo(181.981, 258.064);
    path29.cubicTo(181.981, 259.33, 181.671, 260.302, 181.053, 260.979);
    path29.cubicTo(180.435, 261.658, 179.522, 261.996, 178.317, 261.996);
    path29.cubicTo(177.109, 261.996, 176.198, 261.658, 175.58, 260.979);
    path29.cubicTo(174.962, 260.302, 174.652, 259.33, 174.652, 258.064);
    path29.lineTo(174.652, 256.343);
    path29.lineTo(176.975, 256.343);
    path29.lineTo(176.975, 258.219);
    path29.cubicTo(176.975, 258.785, 177.09, 259.185, 177.321, 259.414);
    path29.cubicTo(177.552, 259.645, 177.86, 259.76, 178.248, 259.76);
    path29.cubicTo(178.635, 259.76, 178.945, 259.64, 179.176, 259.401);
    path29.cubicTo(179.407, 259.163, 179.522, 258.694, 179.522, 257.994);
    path29.lineTo(179.522, 256.765);
    path29.cubicTo(179.522, 256.036, 179.395, 255.522, 179.142, 255.223);
    path29.cubicTo(178.888, 254.926, 178.48, 254.775, 177.914, 254.775);
    path29.lineTo(177.31, 254.775);
    path29.lineTo(177.31, 252.54);
    path29.lineTo(178.048, 252.54);
    path29.cubicTo(178.51, 252.54, 178.87, 252.422, 179.131, 252.182);
    path29.cubicTo(179.391, 251.944, 179.522, 251.512, 179.522, 250.886);
    path29.lineTo(179.522, 250.024);
    path29.lineTo(179.525, 250.024);
    path29.close();
    Paint paint29 = Paint();
    paint29.color = const Color(0xFFFFFFFF);
    canvas.drawPath(path29, paint29);

    var path30 = Path()..fillType = PathFillType.nonZero;
    path30.moveTo(186.094, 261.821);
    path30.lineTo(183.637, 261.821);
    path30.lineTo(183.637, 246.183);
    path30.lineTo(186.094, 246.183);
    path30.lineTo(186.094, 252.884);
    path30.lineTo(188.886, 252.884);
    path30.lineTo(188.886, 246.183);
    path30.lineTo(191.388, 246.183);
    path30.lineTo(191.388, 261.821);
    path30.lineTo(188.886, 261.821);
    path30.lineTo(188.886, 255.119);
    path30.lineTo(186.094, 255.119);
    path30.lineTo(186.094, 261.821);
    path30.close();
    Paint paint30 = Paint();
    paint30.color = const Color(0xFFFFFFFF);
    canvas.drawPath(path30, paint30);

    var path31 = Path()..fillType = PathFillType.nonZero;
    path31.moveTo(195.633, 252.771);
    path31.lineTo(199.007, 252.771);
    path31.lineTo(199.007, 255.006);
    path31.lineTo(195.633, 255.006);
    path31.lineTo(195.633, 259.586);
    path31.lineTo(199.877, 259.586);
    path31.lineTo(199.877, 261.819);
    path31.lineTo(193.176, 261.819);
    path31.lineTo(193.176, 246.181);
    path31.lineTo(199.877, 246.181);
    path31.lineTo(199.877, 248.416);
    path31.lineTo(195.633, 248.416);
    path31.lineTo(195.633, 252.771);
    path31.close();
    Paint paint31 = Paint();
    paint31.color = const Color(0xFFFFFFFF);
    canvas.drawPath(path31, paint31);

    var path32 = Path()..fillType = PathFillType.nonZero;
    path32.moveTo(208.524, 255.99);
    path32.lineTo(208.524, 258.067);
    path32.cubicTo(208.524, 259.333, 208.214, 260.306, 207.596, 260.983);
    path32.cubicTo(206.978, 261.662, 206.065, 262, 204.86, 262);
    path32.cubicTo(203.654, 262, 202.741, 261.662, 202.123, 260.983);
    path32.cubicTo(201.505, 260.306, 201.195, 259.333, 201.195, 258.067);
    path32.lineTo(201.195, 249.935);
    path32.cubicTo(201.195, 248.669, 201.505, 247.698, 202.123, 247.019);
    path32.cubicTo(202.741, 246.342, 203.654, 246.002, 204.86, 246.002);
    path32.cubicTo(206.065, 246.002, 206.978, 246.34, 207.596, 247.019);
    path32.cubicTo(208.214, 247.698, 208.524, 248.669, 208.524, 249.935);
    path32.lineTo(208.524, 251.453);
    path32.lineTo(206.201, 251.453);
    path32.lineTo(206.201, 249.777);
    path32.cubicTo(206.201, 249.211, 206.085, 248.814, 205.855, 248.583);
    path32.cubicTo(205.624, 248.352, 205.314, 248.237, 204.928, 248.237);
    path32.cubicTo(204.541, 248.237, 204.231, 248.353, 204, 248.583);
    path32.cubicTo(203.769, 248.814, 203.654, 249.211, 203.654, 249.777);
    path32.lineTo(203.654, 258.221);
    path32.cubicTo(203.654, 258.787, 203.769, 259.181, 204, 259.405);
    path32.cubicTo(204.231, 259.629, 204.539, 259.74, 204.928, 259.74);
    path32.cubicTo(205.314, 259.74, 205.624, 259.629, 205.855, 259.405);
    path32.cubicTo(206.086, 259.181, 206.201, 258.787, 206.201, 258.221);
    path32.lineTo(206.201, 255.988);
    path32.lineTo(208.524, 255.988);
    path32.lineTo(208.524, 255.99);
    path32.close();
    Paint paint32 = Paint();
    paint32.color = const Color(0xFFFFFFFF);
    canvas.drawPath(path32, paint32);

    var path33 = Path()..fillType = PathFillType.evenOdd;
    path33.moveTo(1248.68, 242.332);
    path33.cubicTo(1247.34, 244.653, 1247.34, 247.768, 1247.34, 253.999);
    path33.cubicTo(1247.34, 260.229, 1247.34, 263.345, 1248.68, 265.665);
    path33.cubicTo(1249.55, 267.186, 1250.82, 268.448, 1252.34, 269.326);
    path33.cubicTo(1254.66, 270.665, 1257.77, 270.665, 1264, 270.665);
    path33.cubicTo(1270.23, 270.665, 1273.35, 270.665, 1275.67, 269.326);
    path33.cubicTo(1277.19, 268.448, 1278.45, 267.186, 1279.33, 265.665);
    path33.cubicTo(1280.67, 263.345, 1280.67, 260.229, 1280.67, 253.999);
    path33.cubicTo(1280.67, 247.768, 1280.67, 244.653, 1279.33, 242.332);
    path33.cubicTo(1278.45, 240.812, 1277.19, 239.549, 1275.67, 238.672);
    path33.cubicTo(1273.35, 237.332, 1270.23, 237.332, 1264, 237.332);
    path33.cubicTo(1257.77, 237.332, 1254.66, 237.332, 1252.34, 238.672);
    path33.cubicTo(1250.82, 239.549, 1249.55, 240.812, 1248.68, 242.332);
    path33.close();
    path33.moveTo(1253.59, 247.749);
    path33.lineTo(1256.02, 247.749);
    path33.cubicTo(1256.64, 247.749, 1256.87, 248.021, 1257.1, 248.694);
    path33.cubicTo(1258.29, 252.156, 1260.3, 255.183, 1261.12, 255.183);
    path33.cubicTo(1261.43, 255.183, 1261.57, 255.04, 1261.57, 254.256);
    path33.lineTo(1261.57, 250.676);
    path33.cubicTo(1261.52, 249.657, 1261.16, 249.217, 1260.9, 248.891);
    path33.cubicTo(1260.73, 248.689, 1260.61, 248.531, 1260.61, 248.307);
    path33.cubicTo(1260.61, 248.035, 1260.84, 247.749, 1261.22, 247.749);
    path33.lineTo(1265.04, 247.749);
    path33.cubicTo(1265.56, 247.749, 1265.74, 248.024, 1265.74, 248.642);
    path33.lineTo(1265.74, 253.457);
    path33.cubicTo(1265.74, 253.972, 1265.96, 254.153, 1266.12, 254.153);
    path33.cubicTo(1266.43, 254.153, 1266.68, 253.972, 1267.25, 253.406);
    path33.cubicTo(1269, 251.449, 1270.24, 248.436, 1270.24, 248.436);
    path33.cubicTo(1270.39, 248.076, 1270.68, 247.749, 1271.29, 247.749);
    path33.lineTo(1273.72, 247.749);
    path33.cubicTo(1274.46, 247.749, 1274.61, 248.127, 1274.46, 248.642);
    path33.cubicTo(1274.17, 249.957, 1271.6, 253.648, 1271.23, 254.169);
    path33.lineTo(1271.19, 254.23);
    path33.cubicTo(1270.93, 254.642, 1270.83, 254.848, 1271.19, 255.311);
    path33.cubicTo(1271.32, 255.489, 1271.59, 255.754, 1271.9, 256.058);
    path33.cubicTo(1272.22, 256.37, 1272.58, 256.723, 1272.86, 257.062);
    path33.cubicTo(1273.91, 258.237, 1274.69, 259.228, 1274.91, 259.911);
    path33.cubicTo(1275.11, 260.596, 1274.77, 260.943, 1274.07, 260.943);
    path33.lineTo(1271.64, 260.943);
    path33.cubicTo(1270.99, 260.943, 1270.66, 260.578, 1269.95, 259.79);
    path33.cubicTo(1269.65, 259.456, 1269.29, 259.046, 1268.79, 258.556);
    path33.cubicTo(1267.35, 257.165, 1266.73, 256.985, 1266.37, 256.985);
    path33.cubicTo(1265.89, 256.985, 1265.74, 257.124, 1265.74, 257.818);
    path33.lineTo(1265.74, 259.998);
    path33.cubicTo(1265.74, 260.596, 1265.55, 260.943, 1264, 260.943);
    path33.cubicTo(1261.43, 260.943, 1258.6, 259.38, 1256.59, 256.496);
    path33.cubicTo(1253.58, 252.273, 1252.75, 249.08, 1252.75, 248.436);
    path33.cubicTo(1252.75, 248.076, 1252.89, 247.749, 1253.59, 247.749);
    path33.close();
    Paint paint33 = Paint();
    paint33.color = const Color(0xFF000000);
    canvas.drawPath(path33, paint33);

    var path34 = Path()..fillType = PathFillType.evenOdd;
    path34.moveTo(1305.34, 237.332);
    path34.lineTo(1318.67, 237.332);
    path34.cubicTo(1324.19, 237.332, 1328.67, 241.809, 1328.67, 247.332);
    path34.lineTo(1328.67, 260.665);
    path34.cubicTo(1328.67, 266.188, 1324.19, 270.665, 1318.67, 270.665);
    path34.lineTo(1305.34, 270.665);
    path34.cubicTo(1299.81, 270.665, 1295.34, 266.188, 1295.34, 260.665);
    path34.lineTo(1295.34, 247.332);
    path34.cubicTo(1295.34, 241.809, 1299.81, 237.332, 1305.34, 237.332);
    path34.close();
    path34.moveTo(1318.67, 262.372);
    path34.cubicTo(1318.67, 262.372, 1318.2, 263.526, 1316.94, 262.975);
    path34.lineTo(1312.22, 259.358);
    path34.lineTo(1309.18, 262.11);
    path34.cubicTo(1309.18, 262.11, 1308.95, 262.294, 1308.68, 262.189);
    path34.cubicTo(1308.68, 262.189, 1308.45, 262.163, 1308.19, 261.298);
    path34.cubicTo(1307.9, 260.407, 1306.48, 255.767, 1306.48, 255.767);
    path34.lineTo(1301.79, 254.195);
    path34.cubicTo(1301.79, 254.195, 1301.08, 253.932, 1301, 253.382);
    path34.cubicTo(1300.93, 252.832, 1301.82, 252.517, 1301.82, 252.517);
    path34.lineTo(1320.45, 245.204);
    path34.cubicTo(1320.45, 245.204, 1321.97, 244.523, 1322, 245.65);
    path34.lineTo(1318.67, 262.372);
    path34.close();
    path34.moveTo(1318.38, 248.612);
    path34.cubicTo(1318.41, 248.219, 1317.75, 248.612, 1317.75, 248.612);
    path34.lineTo(1307.45, 255.165);
    path34.cubicTo(1307.29, 255.27, 1307.24, 255.453, 1307.29, 255.611);
    path34.lineTo(1308.53, 259.647);
    path34.cubicTo(1308.6, 259.883, 1308.94, 259.857, 1309, 259.595);
    path34.lineTo(1309.29, 257.131);
    path34.cubicTo(1309.29, 257.026, 1309.34, 256.947, 1309.42, 256.895);
    path34.cubicTo(1310.41, 256.004, 1317.83, 249.346, 1318.14, 249.032);
    path34.cubicTo(1318.49, 248.665, 1318.38, 248.612, 1318.38, 248.612);
    path34.close();
    Paint paint34 = Paint();
    paint34.color = const Color(0xFF000000);
    canvas.drawPath(path34, paint34);

    var path35 = Path()..fillType = PathFillType.nonZero;
    path35.moveTo(108, 274);
    path35.lineTo(109, 274);
    path35.lineTo(109, 298);
    path35.lineTo(108, 298);
    path35.close();
    Paint paint35 = Paint();
    paint35.color = const Color(0x03FFFFFF);
    canvas.drawPath(path35, paint35);

    var path36 = Path()..fillType = PathFillType.nonZero;
    path36.moveTo(108, 298);
    path36.lineTo(1332, 298);
    path36.lineTo(1332, 299);
    path36.lineTo(108, 299);
    path36.close();
    Paint paint36 = Paint();
    paint36.color = const Color(0xFF000000);
    canvas.drawPath(path36, paint36);

    var path37 = Path()..fillType = PathFillType.nonZero;
    path37.moveTo(108, 299);
    path37.lineTo(109, 299);
    path37.lineTo(109, 323);
    path37.lineTo(108, 323);
    path37.close();
    Paint paint37 = Paint();
    paint37.color = const Color(0x03FFFFFF);
    canvas.drawPath(path37, paint37);

    var path38 = Path()..fillType = PathFillType.nonZero;
    path38.moveTo(108.532, 333.946);
    path38.cubicTo(108.532, 330.81, 110.87, 328.668, 113.782, 328.668);
    path38.cubicTo(116.68, 328.668, 119.018, 330.81, 119.018, 333.946);
    path38.cubicTo(119.018, 337.054, 116.68, 339.182, 113.782, 339.182);
    path38.cubicTo(110.87, 339.182, 108.532, 337.054, 108.532, 333.946);
    path38.close();
    path38.moveTo(109.568, 333.946);
    path38.cubicTo(109.568, 336.522, 111.43, 338.244, 113.782, 338.244);
    path38.cubicTo(116.19, 338.244, 117.982, 336.522, 117.982, 333.946);
    path38.cubicTo(117.982, 331.342, 116.19, 329.606, 113.782, 329.606);
    path38.cubicTo(111.43, 329.606, 109.568, 331.342, 109.568, 333.946);
    path38.close();
    path38.moveTo(113.768, 335.822);
    path38.cubicTo(114.384, 335.822, 114.972, 335.556, 115.182, 334.772);
    path38.lineTo(116.246, 335.052);
    path38.cubicTo(115.952, 335.948, 115.14, 336.718, 113.768, 336.718);
    path38.cubicTo(112.074, 336.718, 111.136, 335.612, 111.136, 333.806);
    path38.cubicTo(111.136, 332, 112.144, 330.936, 113.81, 330.936);
    path38.cubicTo(115.154, 330.936, 115.938, 331.706, 116.204, 332.714);
    path38.lineTo(115.154, 333.008);
    path38.cubicTo(114.972, 332.224, 114.426, 331.818, 113.768, 331.818);
    path38.cubicTo(112.914, 331.818, 112.284, 332.448, 112.284, 333.806);
    path38.cubicTo(112.284, 335.164, 112.914, 335.822, 113.768, 335.822);
    path38.close();
    path38.moveTo(127.103, 328.668);
    path38.cubicTo(128.979, 328.668, 130.323, 329.606, 130.323, 331.328);
    path38.cubicTo(130.323, 333.68, 127.873, 335.752, 125.031, 337.81);
    path38.lineTo(130.603, 337.81);
    path38.lineTo(130.603, 339);
    path38.lineTo(123.295, 339);
    path38.lineTo(123.295, 337.852);
    path38.cubicTo(126.879, 335.206, 128.979, 333.302, 128.979, 331.496);
    path38.cubicTo(128.979, 330.432, 128.293, 329.732, 127.075, 329.732);
    path38.cubicTo(125.983, 329.732, 124.933, 330.334, 124.891, 332.014);
    path38.lineTo(123.575, 332.014);
    path38.cubicTo(123.533, 329.998, 124.933, 328.668, 127.103, 328.668);
    path38.close();
    path38.moveTo(138.343, 333.918);
    path38.cubicTo(138.343, 331.104, 137.335, 329.732, 135.753, 329.732);
    path38.cubicTo(134.143, 329.732, 133.163, 331.104, 133.163, 333.918);
    path38.cubicTo(133.163, 336.76, 134.143, 338.118, 135.753, 338.118);
    path38.cubicTo(137.363, 338.118, 138.343, 336.76, 138.343, 333.918);
    path38.close();
    path38.moveTo(139.701, 333.918);
    path38.cubicTo(139.701, 337.124, 138.455, 339.182, 135.753, 339.182);
    path38.cubicTo(133.051, 339.182, 131.805, 337.124, 131.805, 333.918);
    path38.cubicTo(131.805, 330.712, 133.051, 328.668, 135.753, 328.668);
    path38.cubicTo(138.455, 328.668, 139.701, 330.712, 139.701, 333.918);
    path38.close();
    path38.moveTo(144.617, 328.668);
    path38.cubicTo(146.493, 328.668, 147.837, 329.606, 147.837, 331.328);
    path38.cubicTo(147.837, 333.68, 145.387, 335.752, 142.545, 337.81);
    path38.lineTo(148.117, 337.81);
    path38.lineTo(148.117, 339);
    path38.lineTo(140.809, 339);
    path38.lineTo(140.809, 337.852);
    path38.cubicTo(144.393, 335.206, 146.493, 333.302, 146.493, 331.496);
    path38.cubicTo(146.493, 330.432, 145.807, 329.732, 144.589, 329.732);
    path38.cubicTo(143.497, 329.732, 142.447, 330.334, 142.405, 332.014);
    path38.lineTo(141.089, 332.014);
    path38.cubicTo(141.047, 329.998, 142.447, 328.668, 144.617, 328.668);
    path38.close();
    path38.moveTo(152.594, 338.118);
    path38.cubicTo(153.938, 338.118, 154.89, 337.432, 154.89, 336.158);
    path38.cubicTo(154.89, 334.702, 153.588, 334.226, 151.964, 334.226);
    path38.lineTo(151.754, 334.226);
    path38.lineTo(151.754, 333.064);
    path38.lineTo(151.922, 333.064);
    path38.cubicTo(153.7, 333.064, 154.624, 332.574, 154.624, 331.384);
    path38.cubicTo(154.624, 330.306, 153.728, 329.732, 152.65, 329.732);
    path38.cubicTo(151.292, 329.732, 150.55, 330.544, 150.438, 331.706);
    path38.lineTo(149.122, 331.706);
    path38.cubicTo(149.276, 329.914, 150.55, 328.668, 152.678, 328.668);
    path38.cubicTo(154.428, 328.668, 155.968, 329.382, 155.968, 331.244);
    path38.cubicTo(155.968, 332.294, 155.38, 333.162, 154.316, 333.596);
    path38.cubicTo(155.828, 334.086, 156.248, 335.066, 156.248, 336.144);
    path38.cubicTo(156.248, 338.188, 154.526, 339.182, 152.58, 339.182);
    path38.cubicTo(150.172, 339.182, 149.122, 337.698, 148.968, 336.004);
    path38.lineTo(150.284, 336.004);
    path38.cubicTo(150.438, 337.25, 151.152, 338.118, 152.594, 338.118);
    path38.close();
    path38.moveTo(157.5, 339);
    path38.lineTo(157.5, 337.39);
    path38.lineTo(159.11, 337.39);
    path38.lineTo(159.11, 339.112);
    path38.lineTo(158.256, 340.946);
    path38.lineTo(157.444, 340.946);
    path38.lineTo(158.186, 339);
    path38.lineTo(157.5, 339);
    path38.close();
    path38.moveTo(163.414, 339);
    path38.lineTo(167.18, 328.85);
    path38.lineTo(168.832, 328.85);
    path38.lineTo(172.654, 339);
    path38.lineTo(171.114, 339);
    path38.lineTo(170.316, 336.802);
    path38.lineTo(165.654, 336.802);
    path38.lineTo(164.87, 339);
    path38.lineTo(163.414, 339);
    path38.close();
    path38.moveTo(167.964, 330.292);
    path38.lineTo(166.088, 335.584);
    path38.lineTo(169.868, 335.584);
    path38.lineTo(167.964, 330.292);
    path38.close();
    path38.moveTo(180.829, 328.85);
    path38.lineTo(182.257, 328.85);
    path38.lineTo(182.257, 339);
    path38.lineTo(180.829, 339);
    path38.lineTo(180.829, 334.394);
    path38.lineTo(175.495, 334.394);
    path38.lineTo(175.495, 339);
    path38.lineTo(174.067, 339);
    path38.lineTo(174.067, 328.85);
    path38.lineTo(175.495, 328.85);
    path38.lineTo(175.495, 333.162);
    path38.lineTo(180.829, 333.162);
    path38.lineTo(180.829, 328.85);
    path38.close();
    path38.moveTo(185.775, 333.918);
    path38.cubicTo(185.775, 336.536, 187.231, 337.978, 189.079, 337.978);
    path38.cubicTo(190.927, 337.978, 192.383, 336.536, 192.383, 333.918);
    path38.cubicTo(192.383, 331.3, 190.927, 329.872, 189.079, 329.872);
    path38.cubicTo(187.231, 329.872, 185.775, 331.3, 185.775, 333.918);
    path38.close();
    path38.moveTo(193.839, 333.918);
    path38.cubicTo(193.839, 336.984, 192.005, 339.182, 189.079, 339.182);
    path38.cubicTo(186.153, 339.182, 184.319, 336.984, 184.319, 333.918);
    path38.cubicTo(184.319, 330.852, 186.153, 328.668, 189.079, 328.668);
    path38.cubicTo(192.005, 328.668, 193.839, 330.852, 193.839, 333.918);
    path38.close();
    path38.moveTo(200.245, 338.384);
    path38.lineTo(198.019, 335.178);
    path38.lineTo(200.245, 331.986);
    path38.lineTo(201.617, 331.986);
    path38.lineTo(199.517, 335.178);
    path38.lineTo(201.617, 338.384);
    path38.lineTo(200.245, 338.384);
    path38.close();
    path38.moveTo(203.395, 338.384);
    path38.lineTo(201.169, 335.178);
    path38.lineTo(203.395, 331.986);
    path38.lineTo(204.767, 331.986);
    path38.lineTo(202.667, 335.178);
    path38.lineTo(204.767, 338.384);
    path38.lineTo(203.395, 338.384);
    path38.close();
    path38.moveTo(214.338, 339);
    path38.lineTo(212.91, 339);
    path38.lineTo(212.91, 330.082);
    path38.lineTo(207.842, 330.082);
    path38.lineTo(207.842, 339);
    path38.lineTo(206.414, 339);
    path38.lineTo(206.414, 328.85);
    path38.lineTo(214.338, 328.85);
    path38.lineTo(214.338, 339);
    path38.close();
    path38.moveTo(216.758, 331.468);
    path38.lineTo(218.032, 331.468);
    path38.lineTo(218.032, 332.658);
    path38.cubicTo(218.494, 331.86, 219.278, 331.342, 220.496, 331.342);
    path38.cubicTo(222.232, 331.342, 223.716, 332.798, 223.716, 335.262);
    path38.cubicTo(223.716, 337.768, 222.232, 339.182, 220.496, 339.182);
    path38.cubicTo(219.278, 339.182, 218.494, 338.664, 218.032, 337.866);
    path38.lineTo(218.032, 341.45);
    path38.lineTo(216.758, 341.45);
    path38.lineTo(216.758, 331.468);
    path38.close();
    path38.moveTo(217.976, 335.262);
    path38.cubicTo(217.976, 337.25, 219.04, 338.09, 220.174, 338.09);
    path38.cubicTo(221.476, 338.09, 222.33, 337.068, 222.33, 335.262);
    path38.cubicTo(222.33, 333.456, 221.476, 332.434, 220.174, 332.434);
    path38.cubicTo(219.04, 332.434, 217.976, 333.274, 217.976, 335.262);
    path38.close();
    path38.moveTo(226.196, 335.262);
    path38.cubicTo(226.196, 337.278, 227.288, 338.062, 228.45, 338.062);
    path38.cubicTo(229.612, 338.062, 230.704, 337.194, 230.704, 335.262);
    path38.cubicTo(230.704, 333.246, 229.612, 332.462, 228.45, 332.462);
    path38.cubicTo(227.288, 332.462, 226.196, 333.204, 226.196, 335.262);
    path38.close();
    path38.moveTo(228.45, 331.342);
    path38.cubicTo(230.2, 331.342, 232.062, 332.532, 232.062, 335.262);
    path38.cubicTo(232.062, 337.992, 230.2, 339.182, 228.45, 339.182);
    path38.cubicTo(226.7, 339.182, 224.838, 337.992, 224.838, 335.262);
    path38.cubicTo(224.838, 332.532, 226.7, 331.342, 228.45, 331.342);
    path38.close();
    path38.moveTo(240.346, 335.654);
    path38.lineTo(234.55, 335.654);
    path38.cubicTo(234.592, 337.278, 235.768, 338.062, 236.874, 338.062);
    path38.cubicTo(237.994, 338.062, 238.61, 337.558, 238.932, 336.816);
    path38.lineTo(240.248, 336.816);
    path38.cubicTo(239.912, 338.104, 238.708, 339.182, 236.874, 339.182);
    path38.cubicTo(234.494, 339.182, 233.178, 337.474, 233.178, 335.248);
    path38.cubicTo(233.178, 332.854, 234.774, 331.342, 236.832, 331.342);
    path38.cubicTo(239.142, 331.342, 240.5, 333.26, 240.346, 335.654);
    path38.close();
    path38.moveTo(236.832, 332.434);
    path38.cubicTo(235.712, 332.434, 234.676, 333.05, 234.564, 334.562);
    path38.lineTo(239.002, 334.562);
    path38.cubicTo(238.96, 333.498, 238.19, 332.434, 236.832, 332.434);
    path38.close();
    path38.moveTo(246.758, 339);
    path38.lineTo(244.168, 335.654);
    path38.lineTo(243.202, 335.654);
    path38.lineTo(243.202, 339);
    path38.lineTo(241.914, 339);
    path38.lineTo(241.914, 331.468);
    path38.lineTo(243.202, 331.468);
    path38.lineTo(243.202, 334.548);
    path38.lineTo(244.14, 334.548);
    path38.lineTo(246.534, 331.468);
    path38.lineTo(248.046, 331.468);
    path38.lineTo(245.204, 335.024);
    path38.lineTo(248.34, 339);
    path38.lineTo(246.758, 339);
    path38.close();
    path38.moveTo(255.115, 332.574);
    path38.lineTo(252.539, 332.574);
    path38.lineTo(252.539, 339);
    path38.lineTo(251.265, 339);
    path38.lineTo(251.265, 332.574);
    path38.lineTo(248.689, 332.574);
    path38.lineTo(248.689, 331.468);
    path38.lineTo(255.115, 331.468);
    path38.lineTo(255.115, 332.574);
    path38.close();
    path38.moveTo(262.678, 339);
    path38.lineTo(261.404, 339);
    path38.lineTo(261.404, 335.71);
    path38.lineTo(257.68, 335.71);
    path38.lineTo(257.68, 339);
    path38.lineTo(256.406, 339);
    path38.lineTo(256.406, 331.468);
    path38.lineTo(257.68, 331.468);
    path38.lineTo(257.68, 334.604);
    path38.lineTo(261.404, 334.604);
    path38.lineTo(261.404, 331.468);
    path38.lineTo(262.678, 331.468);
    path38.lineTo(262.678, 339);
    path38.close();
    path38.moveTo(267.544, 339);
    path38.lineTo(264.828, 339);
    path38.lineTo(264.828, 331.468);
    path38.lineTo(266.102, 331.468);
    path38.lineTo(266.102, 334.128);
    path38.lineTo(267.558, 334.128);
    path38.cubicTo(269.518, 334.128, 270.372, 334.898, 270.372, 336.508);
    path38.cubicTo(270.372, 338.37, 269.266, 339, 267.544, 339);
    path38.close();
    path38.moveTo(266.102, 335.234);
    path38.lineTo(266.102, 337.894);
    path38.lineTo(267.432, 337.894);
    path38.cubicTo(268.552, 337.894, 269.126, 337.53, 269.126, 336.508);
    path38.cubicTo(269.126, 335.5, 268.566, 335.234, 267.39, 335.234);
    path38.lineTo(266.102, 335.234);
    path38.close();
    path38.moveTo(272.892, 339);
    path38.lineTo(271.618, 339);
    path38.lineTo(271.618, 331.468);
    path38.lineTo(272.892, 331.468);
    path38.lineTo(272.892, 339);
    path38.close();
    path38.moveTo(279.563, 328.85);
    path38.lineTo(280.557, 328.85);
    path38.cubicTo(280.445, 329.69, 279.913, 330.544, 278.317, 330.544);
    path38.cubicTo(276.777, 330.544, 276.189, 329.69, 276.119, 328.85);
    path38.lineTo(277.113, 328.85);
    path38.cubicTo(277.169, 329.298, 277.505, 329.704, 278.331, 329.704);
    path38.cubicTo(279.157, 329.704, 279.507, 329.298, 279.563, 328.85);
    path38.close();
    path38.moveTo(280.221, 339);
    path38.lineTo(280.221, 333.316);
    path38.lineTo(276.329, 339);
    path38.lineTo(275.055, 339);
    path38.lineTo(275.055, 331.468);
    path38.lineTo(276.329, 331.468);
    path38.lineTo(276.329, 337.152);
    path38.lineTo(280.221, 331.468);
    path38.lineTo(281.495, 331.468);
    path38.lineTo(281.495, 339);
    path38.lineTo(280.221, 339);
    path38.close();
    path38.moveTo(287.774, 335.262);
    path38.cubicTo(287.774, 337.278, 288.866, 338.062, 290.028, 338.062);
    path38.cubicTo(291.19, 338.062, 292.282, 337.194, 292.282, 335.262);
    path38.cubicTo(292.282, 333.246, 291.19, 332.462, 290.028, 332.462);
    path38.cubicTo(288.866, 332.462, 287.774, 333.204, 287.774, 335.262);
    path38.close();
    path38.moveTo(290.028, 331.342);
    path38.cubicTo(291.778, 331.342, 293.64, 332.532, 293.64, 335.262);
    path38.cubicTo(293.64, 337.992, 291.778, 339.182, 290.028, 339.182);
    path38.cubicTo(288.278, 339.182, 286.416, 337.992, 286.416, 335.262);
    path38.cubicTo(286.416, 332.532, 288.278, 331.342, 290.028, 331.342);
    path38.close();
    path38.moveTo(299.908, 328.85);
    path38.lineTo(299.908, 331.482);
    path38.cubicTo(302.106, 331.482, 303.786, 332.7, 303.786, 335.262);
    path38.cubicTo(303.786, 337.908, 302.078, 339.07, 299.908, 339.07);
    path38.lineTo(299.908, 341.45);
    path38.lineTo(298.634, 341.45);
    path38.lineTo(298.634, 339.07);
    path38.cubicTo(296.45, 339.07, 294.756, 337.908, 294.756, 335.262);
    path38.cubicTo(294.756, 332.7, 296.45, 331.482, 298.634, 331.482);
    path38.lineTo(298.634, 328.85);
    path38.lineTo(299.908, 328.85);
    path38.close();
    path38.moveTo(298.634, 337.978);
    path38.lineTo(298.634, 332.574);
    path38.cubicTo(297.178, 332.574, 296.114, 333.456, 296.114, 335.304);
    path38.cubicTo(296.114, 337.138, 297.136, 337.978, 298.634, 337.978);
    path38.close();
    path38.moveTo(299.908, 332.574);
    path38.lineTo(299.908, 337.978);
    path38.cubicTo(301.364, 337.978, 302.428, 337.138, 302.428, 335.304);
    path38.cubicTo(302.428, 333.456, 301.406, 332.574, 299.908, 332.574);
    path38.close();
    path38.moveTo(310.517, 339);
    path38.lineTo(310.517, 333.316);
    path38.lineTo(306.625, 339);
    path38.lineTo(305.351, 339);
    path38.lineTo(305.351, 331.468);
    path38.lineTo(306.625, 331.468);
    path38.lineTo(306.625, 337.152);
    path38.lineTo(310.517, 331.468);
    path38.lineTo(311.791, 331.468);
    path38.lineTo(311.791, 339);
    path38.lineTo(310.517, 339);
    path38.close();
    path38.moveTo(317.003, 331.342);
    path38.cubicTo(318.851, 331.342, 319.971, 332.7, 320.153, 333.988);
    path38.lineTo(318.865, 333.988);
    path38.cubicTo(318.683, 333.092, 317.913, 332.462, 316.919, 332.462);
    path38.cubicTo(315.799, 332.462, 314.749, 333.344, 314.749, 335.234);
    path38.cubicTo(314.749, 337.138, 315.799, 338.062, 316.919, 338.062);
    path38.cubicTo(317.997, 338.062, 318.739, 337.334, 318.921, 336.55);
    path38.lineTo(320.237, 336.55);
    path38.cubicTo(319.971, 337.964, 318.641, 339.182, 316.877, 339.182);
    path38.cubicTo(314.707, 339.182, 313.363, 337.544, 313.363, 335.248);
    path38.cubicTo(313.363, 333.008, 314.777, 331.342, 317.003, 331.342);
    path38.close();
    path38.moveTo(331.268, 331.468);
    path38.lineTo(331.268, 339);
    path38.lineTo(329.994, 339);
    path38.lineTo(329.994, 332.574);
    path38.lineTo(326.34, 332.574);
    path38.lineTo(326.34, 339);
    path38.lineTo(325.066, 339);
    path38.lineTo(325.066, 331.468);
    path38.lineTo(331.268, 331.468);
    path38.close();
    path38.moveTo(334.218, 335.262);
    path38.cubicTo(334.218, 337.278, 335.31, 338.062, 336.472, 338.062);
    path38.cubicTo(337.634, 338.062, 338.726, 337.194, 338.726, 335.262);
    path38.cubicTo(338.726, 333.246, 337.634, 332.462, 336.472, 332.462);
    path38.cubicTo(335.31, 332.462, 334.218, 333.204, 334.218, 335.262);
    path38.close();
    path38.moveTo(336.472, 331.342);
    path38.cubicTo(338.222, 331.342, 340.084, 332.532, 340.084, 335.262);
    path38.cubicTo(340.084, 337.992, 338.222, 339.182, 336.472, 339.182);
    path38.cubicTo(334.722, 339.182, 332.86, 337.992, 332.86, 335.262);
    path38.cubicTo(332.86, 332.532, 334.722, 331.342, 336.472, 331.342);
    path38.close();
    path38.moveTo(345, 331.468);
    path38.lineTo(346.274, 331.468);
    path38.lineTo(346.274, 332.658);
    path38.cubicTo(346.736, 331.86, 347.52, 331.342, 348.738, 331.342);
    path38.cubicTo(350.474, 331.342, 351.958, 332.798, 351.958, 335.262);
    path38.cubicTo(351.958, 337.768, 350.474, 339.182, 348.738, 339.182);
    path38.cubicTo(347.52, 339.182, 346.736, 338.664, 346.274, 337.866);
    path38.lineTo(346.274, 341.45);
    path38.lineTo(345, 341.45);
    path38.lineTo(345, 331.468);
    path38.close();
    path38.moveTo(346.218, 335.262);
    path38.cubicTo(346.218, 337.25, 347.282, 338.09, 348.416, 338.09);
    path38.cubicTo(349.718, 338.09, 350.572, 337.068, 350.572, 335.262);
    path38.cubicTo(350.572, 333.456, 349.718, 332.434, 348.416, 332.434);
    path38.cubicTo(347.282, 332.434, 346.218, 333.274, 346.218, 335.262);
    path38.close();
    path38.moveTo(358.207, 335.85);
    path38.lineTo(358.207, 335.374);
    path38.cubicTo(355.897, 335.598, 354.427, 335.948, 354.427, 336.984);
    path38.cubicTo(354.427, 337.698, 354.973, 338.174, 355.883, 338.174);
    path38.cubicTo(357.073, 338.174, 358.207, 337.628, 358.207, 335.85);
    path38.close();
    path38.moveTo(355.603, 339.182);
    path38.cubicTo(354.189, 339.182, 353.013, 338.398, 353.013, 337.012);
    path38.cubicTo(353.013, 335.234, 355.029, 334.702, 358.109, 334.366);
    path38.lineTo(358.109, 334.184);
    path38.cubicTo(358.109, 332.798, 357.353, 332.35, 356.401, 332.35);
    path38.cubicTo(355.337, 332.35, 354.735, 332.91, 354.679, 333.848);
    path38.lineTo(353.363, 333.848);
    path38.cubicTo(353.475, 332.224, 354.931, 331.314, 356.387, 331.314);
    path38.cubicTo(358.473, 331.314, 359.397, 332.294, 359.383, 334.422);
    path38.lineTo(359.369, 336.158);
    path38.cubicTo(359.355, 337.432, 359.411, 338.286, 359.565, 339);
    path38.lineTo(358.277, 339);
    path38.cubicTo(358.235, 338.72, 358.193, 338.412, 358.179, 337.964);
    path38.cubicTo(357.717, 338.748, 356.947, 339.182, 355.603, 339.182);
    path38.close();
    path38.moveTo(365.383, 335.052);
    path38.cubicTo(366.181, 335.276, 366.909, 335.85, 366.909, 336.858);
    path38.cubicTo(366.909, 338.482, 365.411, 339.182, 363.731, 339.182);
    path38.cubicTo(362.121, 339.182, 360.791, 338.426, 360.525, 336.704);
    path38.lineTo(361.813, 336.704);
    path38.cubicTo(362.023, 337.67, 362.737, 338.118, 363.815, 338.118);
    path38.cubicTo(364.879, 338.118, 365.551, 337.628, 365.551, 336.914);
    path38.cubicTo(365.551, 336.032, 364.977, 335.682, 363.913, 335.682);
    path38.lineTo(362.709, 335.682);
    path38.lineTo(362.709, 334.632);
    path38.lineTo(363.843, 334.632);
    path38.cubicTo(364.725, 334.632, 365.257, 334.24, 365.257, 333.456);
    path38.cubicTo(365.257, 332.742, 364.613, 332.42, 363.787, 332.42);
    path38.cubicTo(362.849, 332.42, 362.135, 332.77, 361.967, 333.792);
    path38.lineTo(360.651, 333.792);
    path38.cubicTo(360.917, 332.154, 362.135, 331.3, 363.717, 331.3);
    path38.cubicTo(365.201, 331.3, 366.573, 332.014, 366.573, 333.428);
    path38.cubicTo(366.573, 334.198, 366.055, 334.73, 365.383, 335.052);
    path38.close();
    path38.moveTo(368.42, 331.468);
    path38.lineTo(371.696, 331.468);
    path38.cubicTo(373.208, 331.468, 374.44, 331.86, 374.44, 333.386);
    path38.cubicTo(374.44, 334.184, 374.09, 334.744, 373.39, 335.038);
    path38.cubicTo(374.174, 335.262, 374.748, 335.794, 374.748, 336.802);
    path38.cubicTo(374.748, 338.37, 373.53, 339, 371.92, 339);
    path38.lineTo(368.42, 339);
    path38.lineTo(368.42, 331.468);
    path38.close();
    path38.moveTo(369.694, 334.632);
    path38.lineTo(371.612, 334.632);
    path38.cubicTo(372.55, 334.632, 373.11, 334.38, 373.11, 333.526);
    path38.cubicTo(373.11, 332.742, 372.522, 332.574, 371.57, 332.574);
    path38.lineTo(369.694, 332.574);
    path38.lineTo(369.694, 334.632);
    path38.close();
    path38.moveTo(369.694, 335.682);
    path38.lineTo(369.694, 337.894);
    path38.lineTo(371.724, 337.894);
    path38.cubicTo(372.844, 337.894, 373.418, 337.572, 373.418, 336.788);
    path38.cubicTo(373.418, 335.948, 372.858, 335.682, 371.682, 335.682);
    path38.lineTo(369.694, 335.682);
    path38.close();
    path38.moveTo(381.406, 339);
    path38.lineTo(381.406, 333.316);
    path38.lineTo(377.514, 339);
    path38.lineTo(376.24, 339);
    path38.lineTo(376.24, 331.468);
    path38.lineTo(377.514, 331.468);
    path38.lineTo(377.514, 337.152);
    path38.lineTo(381.406, 331.468);
    path38.lineTo(382.68, 331.468);
    path38.lineTo(382.68, 339);
    path38.lineTo(381.406, 339);
    path38.close();
    path38.moveTo(390.398, 332.574);
    path38.lineTo(387.822, 332.574);
    path38.lineTo(387.822, 339);
    path38.lineTo(386.548, 339);
    path38.lineTo(386.548, 332.574);
    path38.lineTo(383.972, 332.574);
    path38.lineTo(383.972, 331.468);
    path38.lineTo(390.398, 331.468);
    path38.lineTo(390.398, 332.574);
    path38.close();
    path38.moveTo(396.855, 339);
    path38.lineTo(396.855, 333.316);
    path38.lineTo(392.963, 339);
    path38.lineTo(391.689, 339);
    path38.lineTo(391.689, 331.468);
    path38.lineTo(392.963, 331.468);
    path38.lineTo(392.963, 337.152);
    path38.lineTo(396.855, 331.468);
    path38.lineTo(398.129, 331.468);
    path38.lineTo(398.129, 339);
    path38.lineTo(396.855, 339);
    path38.close();
    path38.moveTo(406.477, 331.342);
    path38.cubicTo(408.227, 331.342, 410.089, 332.532, 410.089, 335.262);
    path38.cubicTo(410.089, 337.992, 408.227, 339.182, 406.477, 339.182);
    path38.cubicTo(404.909, 339.182, 403.243, 338.118, 403.061, 335.71);
    path38.lineTo(401.563, 335.71);
    path38.lineTo(401.563, 339);
    path38.lineTo(400.289, 339);
    path38.lineTo(400.289, 331.468);
    path38.lineTo(401.563, 331.468);
    path38.lineTo(401.563, 334.604);
    path38.lineTo(403.089, 334.604);
    path38.cubicTo(403.355, 332.322, 404.937, 331.342, 406.477, 331.342);
    path38.close();
    path38.moveTo(406.477, 338.062);
    path38.cubicTo(407.639, 338.062, 408.731, 337.194, 408.731, 335.262);
    path38.cubicTo(408.731, 333.246, 407.639, 332.462, 406.477, 332.462);
    path38.cubicTo(405.427, 332.462, 404.405, 333.204, 404.405, 335.262);
    path38.cubicTo(404.405, 337.278, 405.427, 338.062, 406.477, 338.062);
    path38.close();
    path38.moveTo(420.572, 332.574);
    path38.lineTo(417.996, 332.574);
    path38.lineTo(417.996, 339);
    path38.lineTo(416.722, 339);
    path38.lineTo(416.722, 332.574);
    path38.lineTo(414.146, 332.574);
    path38.lineTo(414.146, 331.468);
    path38.lineTo(420.572, 331.468);
    path38.lineTo(420.572, 332.574);
    path38.close();
    path38.moveTo(421.415, 341.45);
    path38.lineTo(421.415, 340.386);
    path38.lineTo(421.933, 340.386);
    path38.cubicTo(422.773, 340.386, 423.179, 340.33, 423.515, 339.154);
    path38.lineTo(423.571, 339);
    path38.lineTo(420.855, 331.468);
    path38.lineTo(422.269, 331.468);
    path38.lineTo(424.187, 337.278);
    path38.lineTo(426.049, 331.468);
    path38.lineTo(427.379, 331.468);
    path38.lineTo(424.691, 339.322);
    path38.cubicTo(424.131, 340.946, 423.767, 341.45, 422.073, 341.45);
    path38.lineTo(421.415, 341.45);
    path38.close();
    path38.moveTo(428.521, 331.468);
    path38.lineTo(429.795, 331.468);
    path38.lineTo(429.795, 332.658);
    path38.cubicTo(430.257, 331.86, 431.041, 331.342, 432.259, 331.342);
    path38.cubicTo(433.995, 331.342, 435.479, 332.798, 435.479, 335.262);
    path38.cubicTo(435.479, 337.768, 433.995, 339.182, 432.259, 339.182);
    path38.cubicTo(431.041, 339.182, 430.257, 338.664, 429.795, 337.866);
    path38.lineTo(429.795, 341.45);
    path38.lineTo(428.521, 341.45);
    path38.lineTo(428.521, 331.468);
    path38.close();
    path38.moveTo(429.739, 335.262);
    path38.cubicTo(429.739, 337.25, 430.803, 338.09, 431.937, 338.09);
    path38.cubicTo(433.239, 338.09, 434.093, 337.068, 434.093, 335.262);
    path38.cubicTo(434.093, 333.456, 433.239, 332.434, 431.937, 332.434);
    path38.cubicTo(430.803, 332.434, 429.739, 333.274, 429.739, 335.262);
    path38.close();
    path38.moveTo(442.219, 339);
    path38.lineTo(442.219, 333.316);
    path38.lineTo(438.327, 339);
    path38.lineTo(437.053, 339);
    path38.lineTo(437.053, 331.468);
    path38.lineTo(438.327, 331.468);
    path38.lineTo(438.327, 337.152);
    path38.lineTo(442.219, 331.468);
    path38.lineTo(443.493, 331.468);
    path38.lineTo(443.493, 339);
    path38.lineTo(442.219, 339);
    path38.close();
    path38.moveTo(449.684, 335.052);
    path38.cubicTo(450.482, 335.276, 451.21, 335.85, 451.21, 336.858);
    path38.cubicTo(451.21, 338.482, 449.712, 339.182, 448.032, 339.182);
    path38.cubicTo(446.422, 339.182, 445.092, 338.426, 444.826, 336.704);
    path38.lineTo(446.114, 336.704);
    path38.cubicTo(446.324, 337.67, 447.038, 338.118, 448.116, 338.118);
    path38.cubicTo(449.18, 338.118, 449.852, 337.628, 449.852, 336.914);
    path38.cubicTo(449.852, 336.032, 449.278, 335.682, 448.214, 335.682);
    path38.lineTo(447.01, 335.682);
    path38.lineTo(447.01, 334.632);
    path38.lineTo(448.144, 334.632);
    path38.cubicTo(449.026, 334.632, 449.558, 334.24, 449.558, 333.456);
    path38.cubicTo(449.558, 332.742, 448.914, 332.42, 448.088, 332.42);
    path38.cubicTo(447.15, 332.42, 446.436, 332.77, 446.268, 333.792);
    path38.lineTo(444.952, 333.792);
    path38.cubicTo(445.218, 332.154, 446.436, 331.3, 448.018, 331.3);
    path38.cubicTo(449.502, 331.3, 450.874, 332.014, 450.874, 333.428);
    path38.cubicTo(450.874, 334.198, 450.356, 334.73, 449.684, 335.052);
    path38.close();
    path38.moveTo(460.953, 331.468);
    path38.lineTo(460.953, 339);
    path38.lineTo(459.707, 339);
    path38.lineTo(459.707, 332.952);
    path38.lineTo(457.285, 339);
    path38.lineTo(456.375, 339);
    path38.lineTo(453.967, 333.036);
    path38.lineTo(453.967, 339);
    path38.lineTo(452.721, 339);
    path38.lineTo(452.721, 331.468);
    path38.lineTo(454.541, 331.468);
    path38.lineTo(456.879, 337.264);
    path38.lineTo(459.133, 331.468);
    path38.lineTo(460.953, 331.468);
    path38.close();
    path38.moveTo(467.787, 335.85);
    path38.lineTo(467.787, 335.374);
    path38.cubicTo(465.477, 335.598, 464.007, 335.948, 464.007, 336.984);
    path38.cubicTo(464.007, 337.698, 464.553, 338.174, 465.463, 338.174);
    path38.cubicTo(466.653, 338.174, 467.787, 337.628, 467.787, 335.85);
    path38.close();
    path38.moveTo(465.183, 339.182);
    path38.cubicTo(463.769, 339.182, 462.593, 338.398, 462.593, 337.012);
    path38.cubicTo(462.593, 335.234, 464.609, 334.702, 467.689, 334.366);
    path38.lineTo(467.689, 334.184);
    path38.cubicTo(467.689, 332.798, 466.933, 332.35, 465.981, 332.35);
    path38.cubicTo(464.917, 332.35, 464.315, 332.91, 464.259, 333.848);
    path38.lineTo(462.943, 333.848);
    path38.cubicTo(463.055, 332.224, 464.511, 331.314, 465.967, 331.314);
    path38.cubicTo(468.053, 331.314, 468.977, 332.294, 468.963, 334.422);
    path38.lineTo(468.949, 336.158);
    path38.cubicTo(468.935, 337.432, 468.991, 338.286, 469.145, 339);
    path38.lineTo(467.857, 339);
    path38.cubicTo(467.815, 338.72, 467.773, 338.412, 467.759, 337.964);
    path38.cubicTo(467.297, 338.748, 466.527, 339.182, 465.183, 339.182);
    path38.close();
    path38.moveTo(479.42, 339);
    path38.lineTo(479.42, 333.316);
    path38.lineTo(475.528, 339);
    path38.lineTo(474.254, 339);
    path38.lineTo(474.254, 331.468);
    path38.lineTo(475.528, 331.468);
    path38.lineTo(475.528, 337.152);
    path38.lineTo(479.42, 331.468);
    path38.lineTo(480.694, 331.468);
    path38.lineTo(480.694, 339);
    path38.lineTo(479.42, 339);
    path38.close();
    path38.moveTo(490.978, 332.574);
    path38.lineTo(487.45, 332.574);
    path38.lineTo(487.45, 339);
    path38.lineTo(486.176, 339);
    path38.lineTo(486.176, 331.468);
    path38.lineTo(490.978, 331.468);
    path38.lineTo(490.978, 332.574);
    path38.close();
    path38.moveTo(492.743, 335.262);
    path38.cubicTo(492.743, 337.278, 493.835, 338.062, 494.997, 338.062);
    path38.cubicTo(496.159, 338.062, 497.251, 337.194, 497.251, 335.262);
    path38.cubicTo(497.251, 333.246, 496.159, 332.462, 494.997, 332.462);
    path38.cubicTo(493.835, 332.462, 492.743, 333.204, 492.743, 335.262);
    path38.close();
    path38.moveTo(494.997, 331.342);
    path38.cubicTo(496.747, 331.342, 498.609, 332.532, 498.609, 335.262);
    path38.cubicTo(498.609, 337.992, 496.747, 339.182, 494.997, 339.182);
    path38.cubicTo(493.247, 339.182, 491.385, 337.992, 491.385, 335.262);
    path38.cubicTo(491.385, 332.532, 493.247, 331.342, 494.997, 331.342);
    path38.close();
    path38.moveTo(503.364, 331.342);
    path38.cubicTo(505.212, 331.342, 506.332, 332.7, 506.514, 333.988);
    path38.lineTo(505.226, 333.988);
    path38.cubicTo(505.044, 333.092, 504.274, 332.462, 503.28, 332.462);
    path38.cubicTo(502.16, 332.462, 501.11, 333.344, 501.11, 335.234);
    path38.cubicTo(501.11, 337.138, 502.16, 338.062, 503.28, 338.062);
    path38.cubicTo(504.358, 338.062, 505.1, 337.334, 505.282, 336.55);
    path38.lineTo(506.598, 336.55);
    path38.cubicTo(506.332, 337.964, 505.002, 339.182, 503.238, 339.182);
    path38.cubicTo(501.068, 339.182, 499.724, 337.544, 499.724, 335.248);
    path38.cubicTo(499.724, 333.008, 501.138, 331.342, 503.364, 331.342);
    path38.close();
    path38.moveTo(513.417, 332.574);
    path38.lineTo(510.841, 332.574);
    path38.lineTo(510.841, 339);
    path38.lineTo(509.567, 339);
    path38.lineTo(509.567, 332.574);
    path38.lineTo(506.991, 332.574);
    path38.lineTo(506.991, 331.468);
    path38.lineTo(513.417, 331.468);
    path38.lineTo(513.417, 332.574);
    path38.close();
    path38.moveTo(521.043, 335.654);
    path38.lineTo(515.247, 335.654);
    path38.cubicTo(515.289, 337.278, 516.465, 338.062, 517.571, 338.062);
    path38.cubicTo(518.691, 338.062, 519.307, 337.558, 519.629, 336.816);
    path38.lineTo(520.945, 336.816);
    path38.cubicTo(520.609, 338.104, 519.405, 339.182, 517.571, 339.182);
    path38.cubicTo(515.191, 339.182, 513.875, 337.474, 513.875, 335.248);
    path38.cubicTo(513.875, 332.854, 515.471, 331.342, 517.529, 331.342);
    path38.cubicTo(519.839, 331.342, 521.197, 333.26, 521.043, 335.654);
    path38.close();
    path38.moveTo(517.529, 332.434);
    path38.cubicTo(516.409, 332.434, 515.373, 333.05, 515.261, 334.562);
    path38.lineTo(519.699, 334.562);
    path38.cubicTo(519.657, 333.498, 518.887, 332.434, 517.529, 332.434);
    path38.close();
    path38.moveTo(528.813, 331.468);
    path38.lineTo(528.813, 339);
    path38.lineTo(527.539, 339);
    path38.lineTo(527.539, 332.574);
    path38.lineTo(523.885, 332.574);
    path38.lineTo(523.885, 339);
    path38.lineTo(522.611, 339);
    path38.lineTo(522.611, 331.468);
    path38.lineTo(528.813, 331.468);
    path38.close();
    path38.moveTo(530.965, 331.468);
    path38.lineTo(532.239, 331.468);
    path38.lineTo(532.239, 332.658);
    path38.cubicTo(532.701, 331.86, 533.485, 331.342, 534.703, 331.342);
    path38.cubicTo(536.439, 331.342, 537.923, 332.798, 537.923, 335.262);
    path38.cubicTo(537.923, 337.768, 536.439, 339.182, 534.703, 339.182);
    path38.cubicTo(533.485, 339.182, 532.701, 338.664, 532.239, 337.866);
    path38.lineTo(532.239, 341.45);
    path38.lineTo(530.965, 341.45);
    path38.lineTo(530.965, 331.468);
    path38.close();
    path38.moveTo(532.183, 335.262);
    path38.cubicTo(532.183, 337.25, 533.247, 338.09, 534.381, 338.09);
    path38.cubicTo(535.683, 338.09, 536.537, 337.068, 536.537, 335.262);
    path38.cubicTo(536.537, 333.456, 535.683, 332.434, 534.381, 332.434);
    path38.cubicTo(533.247, 332.434, 532.183, 333.274, 532.183, 335.262);
    path38.close();
    path38.moveTo(544.662, 339);
    path38.lineTo(544.662, 333.316);
    path38.lineTo(540.77, 339);
    path38.lineTo(539.496, 339);
    path38.lineTo(539.496, 331.468);
    path38.lineTo(540.77, 331.468);
    path38.lineTo(540.77, 337.152);
    path38.lineTo(544.662, 331.468);
    path38.lineTo(545.936, 331.468);
    path38.lineTo(545.936, 339);
    path38.lineTo(544.662, 339);
    path38.close();
    path38.moveTo(553.262, 339);
    path38.lineTo(553.262, 333.316);
    path38.lineTo(549.37, 339);
    path38.lineTo(548.096, 339);
    path38.lineTo(548.096, 331.468);
    path38.lineTo(549.37, 331.468);
    path38.lineTo(549.37, 337.152);
    path38.lineTo(553.262, 331.468);
    path38.lineTo(554.536, 331.468);
    path38.lineTo(554.536, 339);
    path38.lineTo(553.262, 339);
    path38.close();
    path38.moveTo(564.927, 331.468);
    path38.lineTo(564.927, 339);
    path38.lineTo(563.681, 339);
    path38.lineTo(563.681, 332.952);
    path38.lineTo(561.259, 339);
    path38.lineTo(560.349, 339);
    path38.lineTo(557.941, 333.036);
    path38.lineTo(557.941, 339);
    path38.lineTo(556.695, 339);
    path38.lineTo(556.695, 331.468);
    path38.lineTo(558.515, 331.468);
    path38.lineTo(560.853, 337.264);
    path38.lineTo(563.107, 331.468);
    path38.lineTo(564.927, 331.468);
    path38.close();
    path38.moveTo(570.138, 331.342);
    path38.cubicTo(571.986, 331.342, 573.106, 332.7, 573.288, 333.988);
    path38.lineTo(572, 333.988);
    path38.cubicTo(571.818, 333.092, 571.048, 332.462, 570.054, 332.462);
    path38.cubicTo(568.934, 332.462, 567.884, 333.344, 567.884, 335.234);
    path38.cubicTo(567.884, 337.138, 568.934, 338.062, 570.054, 338.062);
    path38.cubicTo(571.132, 338.062, 571.874, 337.334, 572.056, 336.55);
    path38.lineTo(573.372, 336.55);
    path38.cubicTo(573.106, 337.964, 571.776, 339.182, 570.012, 339.182);
    path38.cubicTo(567.842, 339.182, 566.498, 337.544, 566.498, 335.248);
    path38.cubicTo(566.498, 333.008, 567.912, 331.342, 570.138, 331.342);
    path38.close();
    path38.moveTo(580.191, 332.574);
    path38.lineTo(577.615, 332.574);
    path38.lineTo(577.615, 339);
    path38.lineTo(576.341, 339);
    path38.lineTo(576.341, 332.574);
    path38.lineTo(573.765, 332.574);
    path38.lineTo(573.765, 331.468);
    path38.lineTo(580.191, 331.468);
    path38.lineTo(580.191, 332.574);
    path38.close();
    path38.moveTo(581.482, 331.468);
    path38.lineTo(584.758, 331.468);
    path38.cubicTo(586.27, 331.468, 587.502, 331.86, 587.502, 333.386);
    path38.cubicTo(587.502, 334.184, 587.152, 334.744, 586.452, 335.038);
    path38.cubicTo(587.236, 335.262, 587.81, 335.794, 587.81, 336.802);
    path38.cubicTo(587.81, 338.37, 586.592, 339, 584.982, 339);
    path38.lineTo(581.482, 339);
    path38.lineTo(581.482, 331.468);
    path38.close();
    path38.moveTo(582.756, 334.632);
    path38.lineTo(584.674, 334.632);
    path38.cubicTo(585.612, 334.632, 586.172, 334.38, 586.172, 333.526);
    path38.cubicTo(586.172, 332.742, 585.584, 332.574, 584.632, 332.574);
    path38.lineTo(582.756, 332.574);
    path38.lineTo(582.756, 334.632);
    path38.close();
    path38.moveTo(582.756, 335.682);
    path38.lineTo(582.756, 337.894);
    path38.lineTo(584.786, 337.894);
    path38.cubicTo(585.906, 337.894, 586.48, 337.572, 586.48, 336.788);
    path38.cubicTo(586.48, 335.948, 585.92, 335.682, 584.744, 335.682);
    path38.lineTo(582.756, 335.682);
    path38.close();
    path38.moveTo(593.979, 335.85);
    path38.lineTo(593.979, 335.374);
    path38.cubicTo(591.669, 335.598, 590.199, 335.948, 590.199, 336.984);
    path38.cubicTo(590.199, 337.698, 590.745, 338.174, 591.655, 338.174);
    path38.cubicTo(592.845, 338.174, 593.979, 337.628, 593.979, 335.85);
    path38.close();
    path38.moveTo(591.375, 339.182);
    path38.cubicTo(589.961, 339.182, 588.785, 338.398, 588.785, 337.012);
    path38.cubicTo(588.785, 335.234, 590.801, 334.702, 593.881, 334.366);
    path38.lineTo(593.881, 334.184);
    path38.cubicTo(593.881, 332.798, 593.125, 332.35, 592.173, 332.35);
    path38.cubicTo(591.109, 332.35, 590.507, 332.91, 590.451, 333.848);
    path38.lineTo(589.135, 333.848);
    path38.cubicTo(589.247, 332.224, 590.703, 331.314, 592.159, 331.314);
    path38.cubicTo(594.245, 331.314, 595.169, 332.294, 595.155, 334.422);
    path38.lineTo(595.141, 336.158);
    path38.cubicTo(595.127, 337.432, 595.183, 338.286, 595.337, 339);
    path38.lineTo(594.049, 339);
    path38.cubicTo(594.007, 338.72, 593.965, 338.412, 593.951, 337.964);
    path38.cubicTo(593.489, 338.748, 592.719, 339.182, 591.375, 339.182);
    path38.close();
    path38.moveTo(606.451, 339);
    path38.lineTo(604.939, 339);
    path38.lineTo(602.139, 330.152);
    path38.lineTo(602.139, 339);
    path38.lineTo(600.711, 339);
    path38.lineTo(600.711, 328.85);
    path38.lineTo(603.105, 328.85);
    path38.lineTo(605.695, 337.306);
    path38.lineTo(608.285, 328.85);
    path38.lineTo(610.679, 328.85);
    path38.lineTo(610.679, 339);
    path38.lineTo(609.251, 339);
    path38.lineTo(609.251, 330.152);
    path38.lineTo(606.451, 339);
    path38.close();
    path38.moveTo(613.903, 335.262);
    path38.cubicTo(613.903, 337.278, 614.995, 338.062, 616.157, 338.062);
    path38.cubicTo(617.319, 338.062, 618.411, 337.194, 618.411, 335.262);
    path38.cubicTo(618.411, 333.246, 617.319, 332.462, 616.157, 332.462);
    path38.cubicTo(614.995, 332.462, 613.903, 333.204, 613.903, 335.262);
    path38.close();
    path38.moveTo(616.157, 331.342);
    path38.cubicTo(617.907, 331.342, 619.769, 332.532, 619.769, 335.262);
    path38.cubicTo(619.769, 337.992, 617.907, 339.182, 616.157, 339.182);
    path38.cubicTo(614.407, 339.182, 612.545, 337.992, 612.545, 335.262);
    path38.cubicTo(612.545, 332.532, 614.407, 331.342, 616.157, 331.342);
    path38.close();
    path38.moveTo(624.525, 331.342);
    path38.cubicTo(626.373, 331.342, 627.493, 332.7, 627.675, 333.988);
    path38.lineTo(626.387, 333.988);
    path38.cubicTo(626.205, 333.092, 625.435, 332.462, 624.441, 332.462);
    path38.cubicTo(623.321, 332.462, 622.271, 333.344, 622.271, 335.234);
    path38.cubicTo(622.271, 337.138, 623.321, 338.062, 624.441, 338.062);
    path38.cubicTo(625.519, 338.062, 626.261, 337.334, 626.443, 336.55);
    path38.lineTo(627.759, 336.55);
    path38.cubicTo(627.493, 337.964, 626.163, 339.182, 624.399, 339.182);
    path38.cubicTo(622.229, 339.182, 620.885, 337.544, 620.885, 335.248);
    path38.cubicTo(620.885, 333.008, 622.299, 331.342, 624.525, 331.342);
    path38.close();
    path38.moveTo(634.11, 339);
    path38.lineTo(631.52, 335.654);
    path38.lineTo(630.554, 335.654);
    path38.lineTo(630.554, 339);
    path38.lineTo(629.266, 339);
    path38.lineTo(629.266, 331.468);
    path38.lineTo(630.554, 331.468);
    path38.lineTo(630.554, 334.548);
    path38.lineTo(631.492, 334.548);
    path38.lineTo(633.886, 331.468);
    path38.lineTo(635.398, 331.468);
    path38.lineTo(632.556, 335.024);
    path38.lineTo(635.692, 339);
    path38.lineTo(634.11, 339);
    path38.close();
    path38.moveTo(636.908, 331.468);
    path38.lineTo(640.184, 331.468);
    path38.cubicTo(641.696, 331.468, 642.928, 331.86, 642.928, 333.386);
    path38.cubicTo(642.928, 334.184, 642.578, 334.744, 641.878, 335.038);
    path38.cubicTo(642.662, 335.262, 643.236, 335.794, 643.236, 336.802);
    path38.cubicTo(643.236, 338.37, 642.018, 339, 640.408, 339);
    path38.lineTo(636.908, 339);
    path38.lineTo(636.908, 331.468);
    path38.close();
    path38.moveTo(638.182, 334.632);
    path38.lineTo(640.1, 334.632);
    path38.cubicTo(641.038, 334.632, 641.598, 334.38, 641.598, 333.526);
    path38.cubicTo(641.598, 332.742, 641.01, 332.574, 640.058, 332.574);
    path38.lineTo(638.182, 332.574);
    path38.lineTo(638.182, 334.632);
    path38.close();
    path38.moveTo(638.182, 335.682);
    path38.lineTo(638.182, 337.894);
    path38.lineTo(640.212, 337.894);
    path38.cubicTo(641.332, 337.894, 641.906, 337.572, 641.906, 336.788);
    path38.cubicTo(641.906, 335.948, 641.346, 335.682, 640.17, 335.682);
    path38.lineTo(638.182, 335.682);
    path38.close();
    path38.moveTo(647.444, 339);
    path38.lineTo(644.728, 339);
    path38.lineTo(644.728, 331.468);
    path38.lineTo(646.002, 331.468);
    path38.lineTo(646.002, 334.128);
    path38.lineTo(647.458, 334.128);
    path38.cubicTo(649.418, 334.128, 650.272, 334.898, 650.272, 336.508);
    path38.cubicTo(650.272, 338.37, 649.166, 339, 647.444, 339);
    path38.close();
    path38.moveTo(646.002, 335.234);
    path38.lineTo(646.002, 337.894);
    path38.lineTo(647.332, 337.894);
    path38.cubicTo(648.452, 337.894, 649.026, 337.53, 649.026, 336.508);
    path38.cubicTo(649.026, 335.5, 648.466, 335.234, 647.29, 335.234);
    path38.lineTo(646.002, 335.234);
    path38.close();
    path38.moveTo(652.792, 339);
    path38.lineTo(651.518, 339);
    path38.lineTo(651.518, 331.468);
    path38.lineTo(652.792, 331.468);
    path38.lineTo(652.792, 339);
    path38.close();
    path38.moveTo(657.783, 335.178);
    path38.lineTo(655.557, 338.384);
    path38.lineTo(654.185, 338.384);
    path38.lineTo(656.299, 335.178);
    path38.lineTo(654.185, 331.986);
    path38.lineTo(655.557, 331.986);
    path38.lineTo(657.783, 335.178);
    path38.close();
    path38.moveTo(660.933, 335.178);
    path38.lineTo(658.707, 338.384);
    path38.lineTo(657.335, 338.384);
    path38.lineTo(659.449, 335.178);
    path38.lineTo(657.335, 331.986);
    path38.lineTo(658.707, 331.986);
    path38.lineTo(660.933, 335.178);
    path38.close();
    Paint paint38 = Paint();
    paint38.color = const Color(0xFF000000);
    canvas.drawPath(path38, paint38);

    var path39 = Path()..fillType = PathFillType.nonZero;
    path39.moveTo(117.268, 361);
    path39.lineTo(115.84, 361);
    path39.lineTo(115.84, 352.082);
    path39.lineTo(110.772, 352.082);
    path39.lineTo(110.772, 361);
    path39.lineTo(109.344, 361);
    path39.lineTo(109.344, 350.85);
    path39.lineTo(117.268, 350.85);
    path39.lineTo(117.268, 361);
    path39.close();
    path39.moveTo(120.485, 357.262);
    path39.cubicTo(120.485, 359.278, 121.577, 360.062, 122.739, 360.062);
    path39.cubicTo(123.901, 360.062, 124.993, 359.194, 124.993, 357.262);
    path39.cubicTo(124.993, 355.246, 123.901, 354.462, 122.739, 354.462);
    path39.cubicTo(121.577, 354.462, 120.485, 355.204, 120.485, 357.262);
    path39.close();
    path39.moveTo(122.739, 353.342);
    path39.cubicTo(124.489, 353.342, 126.351, 354.532, 126.351, 357.262);
    path39.cubicTo(126.351, 359.992, 124.489, 361.182, 122.739, 361.182);
    path39.cubicTo(120.989, 361.182, 119.127, 359.992, 119.127, 357.262);
    path39.cubicTo(119.127, 354.532, 120.989, 353.342, 122.739, 353.342);
    path39.close();
    path39.moveTo(133.786, 353.468);
    path39.lineTo(133.786, 361);
    path39.lineTo(132.512, 361);
    path39.lineTo(132.512, 354.574);
    path39.lineTo(129.978, 354.574);
    path39.lineTo(129.866, 356.394);
    path39.cubicTo(129.684, 359.432, 129.026, 361, 127.276, 361);
    path39.lineTo(127.038, 361);
    path39.lineTo(127.038, 359.894);
    path39.lineTo(127.178, 359.894);
    path39.cubicTo(127.85, 359.894, 128.494, 359.166, 128.648, 356.044);
    path39.lineTo(128.76, 353.468);
    path39.lineTo(133.786, 353.468);
    path39.close();
    path39.moveTo(141.109, 361);
    path39.lineTo(141.109, 355.316);
    path39.lineTo(137.217, 361);
    path39.lineTo(135.943, 361);
    path39.lineTo(135.943, 353.468);
    path39.lineTo(137.217, 353.468);
    path39.lineTo(137.217, 359.152);
    path39.lineTo(141.109, 353.468);
    path39.lineTo(142.383, 353.468);
    path39.lineTo(142.383, 361);
    path39.lineTo(141.109, 361);
    path39.close();
    path39.moveTo(150.101, 354.574);
    path39.lineTo(147.525, 354.574);
    path39.lineTo(147.525, 361);
    path39.lineTo(146.251, 361);
    path39.lineTo(146.251, 354.574);
    path39.lineTo(143.675, 354.574);
    path39.lineTo(143.675, 353.468);
    path39.lineTo(150.101, 353.468);
    path39.lineTo(150.101, 354.574);
    path39.close();
    path39.moveTo(156.558, 361);
    path39.lineTo(156.558, 355.316);
    path39.lineTo(152.666, 361);
    path39.lineTo(151.392, 361);
    path39.lineTo(151.392, 353.468);
    path39.lineTo(152.666, 353.468);
    path39.lineTo(152.666, 359.152);
    path39.lineTo(156.558, 353.468);
    path39.lineTo(157.832, 353.468);
    path39.lineTo(157.832, 361);
    path39.lineTo(156.558, 361);
    path39.close();
    path39.moveTo(164.836, 361);
    path39.lineTo(162.246, 357.654);
    path39.lineTo(161.28, 357.654);
    path39.lineTo(161.28, 361);
    path39.lineTo(159.992, 361);
    path39.lineTo(159.992, 353.468);
    path39.lineTo(161.28, 353.468);
    path39.lineTo(161.28, 356.548);
    path39.lineTo(162.218, 356.548);
    path39.lineTo(164.612, 353.468);
    path39.lineTo(166.124, 353.468);
    path39.lineTo(163.282, 357.024);
    path39.lineTo(166.418, 361);
    path39.lineTo(164.836, 361);
    path39.close();
    path39.moveTo(172.133, 357.85);
    path39.lineTo(172.133, 357.374);
    path39.cubicTo(169.823, 357.598, 168.353, 357.948, 168.353, 358.984);
    path39.cubicTo(168.353, 359.698, 168.899, 360.174, 169.809, 360.174);
    path39.cubicTo(170.999, 360.174, 172.133, 359.628, 172.133, 357.85);
    path39.close();
    path39.moveTo(169.529, 361.182);
    path39.cubicTo(168.115, 361.182, 166.939, 360.398, 166.939, 359.012);
    path39.cubicTo(166.939, 357.234, 168.955, 356.702, 172.035, 356.366);
    path39.lineTo(172.035, 356.184);
    path39.cubicTo(172.035, 354.798, 171.279, 354.35, 170.327, 354.35);
    path39.cubicTo(169.263, 354.35, 168.661, 354.91, 168.605, 355.848);
    path39.lineTo(167.289, 355.848);
    path39.cubicTo(167.401, 354.224, 168.857, 353.314, 170.313, 353.314);
    path39.cubicTo(172.399, 353.314, 173.323, 354.294, 173.309, 356.422);
    path39.lineTo(173.295, 358.158);
    path39.cubicTo(173.281, 359.432, 173.337, 360.286, 173.491, 361);
    path39.lineTo(172.203, 361);
    path39.cubicTo(172.161, 360.72, 172.119, 360.412, 172.105, 359.964);
    path39.cubicTo(171.643, 360.748, 170.873, 361.182, 169.529, 361.182);
    path39.close();
    path39.moveTo(183.443, 361);
    path39.lineTo(180.853, 357.654);
    path39.lineTo(179.887, 357.654);
    path39.lineTo(179.887, 361);
    path39.lineTo(178.599, 361);
    path39.lineTo(178.599, 353.468);
    path39.lineTo(179.887, 353.468);
    path39.lineTo(179.887, 356.548);
    path39.lineTo(180.825, 356.548);
    path39.lineTo(183.219, 353.468);
    path39.lineTo(184.731, 353.468);
    path39.lineTo(181.889, 357.024);
    path39.lineTo(185.025, 361);
    path39.lineTo(183.443, 361);
    path39.close();
    path39.moveTo(186.767, 357.262);
    path39.cubicTo(186.767, 359.278, 187.859, 360.062, 189.021, 360.062);
    path39.cubicTo(190.183, 360.062, 191.275, 359.194, 191.275, 357.262);
    path39.cubicTo(191.275, 355.246, 190.183, 354.462, 189.021, 354.462);
    path39.cubicTo(187.859, 354.462, 186.767, 355.204, 186.767, 357.262);
    path39.close();
    path39.moveTo(189.021, 353.342);
    path39.cubicTo(190.771, 353.342, 192.633, 354.532, 192.633, 357.262);
    path39.cubicTo(192.633, 359.992, 190.771, 361.182, 189.021, 361.182);
    path39.cubicTo(187.271, 361.182, 185.409, 359.992, 185.409, 357.262);
    path39.cubicTo(185.409, 354.532, 187.271, 353.342, 189.021, 353.342);
    path39.close();
    path39.moveTo(200.498, 361);
    path39.lineTo(199.224, 361);
    path39.lineTo(199.224, 357.71);
    path39.lineTo(195.5, 357.71);
    path39.lineTo(195.5, 361);
    path39.lineTo(194.226, 361);
    path39.lineTo(194.226, 353.468);
    path39.lineTo(195.5, 353.468);
    path39.lineTo(195.5, 356.604);
    path39.lineTo(199.224, 356.604);
    path39.lineTo(199.224, 353.468);
    path39.lineTo(200.498, 353.468);
    path39.lineTo(200.498, 361);
    path39.close();
    path39.moveTo(207.212, 350.85);
    path39.lineTo(207.212, 353.482);
    path39.cubicTo(209.41, 353.482, 211.09, 354.7, 211.09, 357.262);
    path39.cubicTo(211.09, 359.908, 209.382, 361.07, 207.212, 361.07);
    path39.lineTo(207.212, 363.45);
    path39.lineTo(205.938, 363.45);
    path39.lineTo(205.938, 361.07);
    path39.cubicTo(203.754, 361.07, 202.06, 359.908, 202.06, 357.262);
    path39.cubicTo(202.06, 354.7, 203.754, 353.482, 205.938, 353.482);
    path39.lineTo(205.938, 350.85);
    path39.lineTo(207.212, 350.85);
    path39.close();
    path39.moveTo(205.938, 359.978);
    path39.lineTo(205.938, 354.574);
    path39.cubicTo(204.482, 354.574, 203.418, 355.456, 203.418, 357.304);
    path39.cubicTo(203.418, 359.138, 204.44, 359.978, 205.938, 359.978);
    path39.close();
    path39.moveTo(207.212, 354.574);
    path39.lineTo(207.212, 359.978);
    path39.cubicTo(208.668, 359.978, 209.732, 359.138, 209.732, 357.304);
    path39.cubicTo(209.732, 355.456, 208.71, 354.574, 207.212, 354.574);
    path39.close();
    path39.moveTo(217.822, 361);
    path39.lineTo(217.822, 355.316);
    path39.lineTo(213.93, 361);
    path39.lineTo(212.656, 361);
    path39.lineTo(212.656, 353.468);
    path39.lineTo(213.93, 353.468);
    path39.lineTo(213.93, 359.152);
    path39.lineTo(217.822, 353.468);
    path39.lineTo(219.096, 353.468);
    path39.lineTo(219.096, 361);
    path39.lineTo(217.822, 361);
    path39.close();
    path39.moveTo(228.298, 359.894);
    path39.lineTo(228.298, 362.666);
    path39.lineTo(227.066, 362.666);
    path39.lineTo(227.066, 361);
    path39.lineTo(221.55, 361);
    path39.lineTo(221.55, 362.666);
    path39.lineTo(220.318, 362.666);
    path39.lineTo(220.318, 359.894);
    path39.lineTo(220.654, 359.894);
    path39.cubicTo(221.508, 359.894, 221.956, 358.774, 222.068, 355.89);
    path39.lineTo(222.166, 353.468);
    path39.lineTo(227.248, 353.468);
    path39.lineTo(227.248, 359.894);
    path39.lineTo(228.298, 359.894);
    path39.close();
    path39.moveTo(225.974, 359.894);
    path39.lineTo(225.974, 354.574);
    path39.lineTo(223.398, 354.574);
    path39.lineTo(223.328, 356.016);
    path39.cubicTo(223.216, 358.242, 222.894, 359.334, 222.306, 359.894);
    path39.lineTo(225.974, 359.894);
    path39.close();
    path39.moveTo(236.162, 357.654);
    path39.lineTo(230.366, 357.654);
    path39.cubicTo(230.408, 359.278, 231.584, 360.062, 232.69, 360.062);
    path39.cubicTo(233.81, 360.062, 234.426, 359.558, 234.748, 358.816);
    path39.lineTo(236.064, 358.816);
    path39.cubicTo(235.728, 360.104, 234.524, 361.182, 232.69, 361.182);
    path39.cubicTo(230.31, 361.182, 228.994, 359.474, 228.994, 357.248);
    path39.cubicTo(228.994, 354.854, 230.59, 353.342, 232.648, 353.342);
    path39.cubicTo(234.958, 353.342, 236.316, 355.26, 236.162, 357.654);
    path39.close();
    path39.moveTo(232.648, 354.434);
    path39.cubicTo(231.528, 354.434, 230.492, 355.05, 230.38, 356.562);
    path39.lineTo(234.818, 356.562);
    path39.cubicTo(234.776, 355.498, 234.006, 354.434, 232.648, 354.434);
    path39.close();
    path39.moveTo(244.002, 361);
    path39.lineTo(242.728, 361);
    path39.lineTo(242.728, 357.71);
    path39.lineTo(239.004, 357.71);
    path39.lineTo(239.004, 361);
    path39.lineTo(237.73, 361);
    path39.lineTo(237.73, 353.468);
    path39.lineTo(239.004, 353.468);
    path39.lineTo(239.004, 356.604);
    path39.lineTo(242.728, 356.604);
    path39.lineTo(242.728, 353.468);
    path39.lineTo(244.002, 353.468);
    path39.lineTo(244.002, 361);
    path39.close();
    path39.moveTo(252.144, 359.894);
    path39.lineTo(253.194, 359.894);
    path39.lineTo(253.194, 362.806);
    path39.lineTo(251.99, 362.806);
    path39.lineTo(251.99, 361);
    path39.lineTo(246.152, 361);
    path39.lineTo(246.152, 353.468);
    path39.lineTo(247.426, 353.468);
    path39.lineTo(247.426, 359.894);
    path39.lineTo(250.87, 359.894);
    path39.lineTo(250.87, 353.468);
    path39.lineTo(252.144, 353.468);
    path39.lineTo(252.144, 359.894);
    path39.close();
    path39.moveTo(259.644, 361);
    path39.lineTo(259.644, 355.316);
    path39.lineTo(255.752, 361);
    path39.lineTo(254.478, 361);
    path39.lineTo(254.478, 353.468);
    path39.lineTo(255.752, 353.468);
    path39.lineTo(255.752, 359.152);
    path39.lineTo(259.644, 353.468);
    path39.lineTo(260.918, 353.468);
    path39.lineTo(260.918, 361);
    path39.lineTo(259.644, 361);
    path39.close();
    path39.moveTo(267.754, 357.85);
    path39.lineTo(267.754, 357.374);
    path39.cubicTo(265.444, 357.598, 263.974, 357.948, 263.974, 358.984);
    path39.cubicTo(263.974, 359.698, 264.52, 360.174, 265.43, 360.174);
    path39.cubicTo(266.62, 360.174, 267.754, 359.628, 267.754, 357.85);
    path39.close();
    path39.moveTo(265.15, 361.182);
    path39.cubicTo(263.736, 361.182, 262.56, 360.398, 262.56, 359.012);
    path39.cubicTo(262.56, 357.234, 264.576, 356.702, 267.656, 356.366);
    path39.lineTo(267.656, 356.184);
    path39.cubicTo(267.656, 354.798, 266.9, 354.35, 265.948, 354.35);
    path39.cubicTo(264.884, 354.35, 264.282, 354.91, 264.226, 355.848);
    path39.lineTo(262.91, 355.848);
    path39.cubicTo(263.022, 354.224, 264.478, 353.314, 265.934, 353.314);
    path39.cubicTo(268.02, 353.314, 268.944, 354.294, 268.93, 356.422);
    path39.lineTo(268.916, 358.158);
    path39.cubicTo(268.902, 359.432, 268.958, 360.286, 269.112, 361);
    path39.lineTo(267.824, 361);
    path39.cubicTo(267.782, 360.72, 267.74, 360.412, 267.726, 359.964);
    path39.cubicTo(267.264, 360.748, 266.494, 361.182, 265.15, 361.182);
    path39.close();
    path39.moveTo(276.848, 353.468);
    path39.lineTo(276.848, 361);
    path39.lineTo(275.574, 361);
    path39.lineTo(275.574, 354.574);
    path39.lineTo(273.04, 354.574);
    path39.lineTo(272.928, 356.394);
    path39.cubicTo(272.746, 359.432, 272.088, 361, 270.338, 361);
    path39.lineTo(270.1, 361);
    path39.lineTo(270.1, 359.894);
    path39.lineTo(270.24, 359.894);
    path39.cubicTo(270.912, 359.894, 271.556, 359.166, 271.71, 356.044);
    path39.lineTo(271.822, 353.468);
    path39.lineTo(276.848, 353.468);
    path39.close();
    path39.moveTo(280.28, 356.128);
    path39.lineTo(282.072, 356.128);
    path39.cubicTo(284.046, 356.128, 284.886, 356.898, 284.886, 358.508);
    path39.cubicTo(284.886, 360.37, 283.794, 361, 282.058, 361);
    path39.lineTo(279.006, 361);
    path39.lineTo(279.006, 353.468);
    path39.lineTo(280.28, 353.468);
    path39.lineTo(280.28, 356.128);
    path39.close();
    path39.moveTo(280.28, 359.894);
    path39.lineTo(281.946, 359.894);
    path39.cubicTo(283.066, 359.894, 283.64, 359.516, 283.64, 358.508);
    path39.cubicTo(283.64, 357.514, 283.052, 357.234, 281.918, 357.234);
    path39.lineTo(280.28, 357.234);
    path39.lineTo(280.28, 359.894);
    path39.close();
    path39.moveTo(292.592, 361);
    path39.lineTo(291.318, 361);
    path39.lineTo(291.318, 357.71);
    path39.lineTo(287.594, 357.71);
    path39.lineTo(287.594, 361);
    path39.lineTo(286.32, 361);
    path39.lineTo(286.32, 353.468);
    path39.lineTo(287.594, 353.468);
    path39.lineTo(287.594, 356.604);
    path39.lineTo(291.318, 356.604);
    path39.lineTo(291.318, 353.468);
    path39.lineTo(292.592, 353.468);
    path39.lineTo(292.592, 361);
    path39.close();
    path39.moveTo(295.54, 357.262);
    path39.cubicTo(295.54, 359.278, 296.632, 360.062, 297.794, 360.062);
    path39.cubicTo(298.956, 360.062, 300.048, 359.194, 300.048, 357.262);
    path39.cubicTo(300.048, 355.246, 298.956, 354.462, 297.794, 354.462);
    path39.cubicTo(296.632, 354.462, 295.54, 355.204, 295.54, 357.262);
    path39.close();
    path39.moveTo(297.794, 353.342);
    path39.cubicTo(299.544, 353.342, 301.406, 354.532, 301.406, 357.262);
    path39.cubicTo(301.406, 359.992, 299.544, 361.182, 297.794, 361.182);
    path39.cubicTo(296.044, 361.182, 294.182, 359.992, 294.182, 357.262);
    path39.cubicTo(294.182, 354.532, 296.044, 353.342, 297.794, 353.342);
    path39.close();
    path39.moveTo(306.161, 353.342);
    path39.cubicTo(308.009, 353.342, 309.129, 354.7, 309.311, 355.988);
    path39.lineTo(308.023, 355.988);
    path39.cubicTo(307.841, 355.092, 307.071, 354.462, 306.077, 354.462);
    path39.cubicTo(304.957, 354.462, 303.907, 355.344, 303.907, 357.234);
    path39.cubicTo(303.907, 359.138, 304.957, 360.062, 306.077, 360.062);
    path39.cubicTo(307.155, 360.062, 307.897, 359.334, 308.079, 358.55);
    path39.lineTo(309.395, 358.55);
    path39.cubicTo(309.129, 359.964, 307.799, 361.182, 306.035, 361.182);
    path39.cubicTo(303.865, 361.182, 302.521, 359.544, 302.521, 357.248);
    path39.cubicTo(302.521, 355.008, 303.935, 353.342, 306.161, 353.342);
    path39.close();
    path39.moveTo(316.214, 354.574);
    path39.lineTo(313.638, 354.574);
    path39.lineTo(313.638, 361);
    path39.lineTo(312.364, 361);
    path39.lineTo(312.364, 354.574);
    path39.lineTo(309.788, 354.574);
    path39.lineTo(309.788, 353.468);
    path39.lineTo(316.214, 353.468);
    path39.lineTo(316.214, 354.574);
    path39.close();
    path39.moveTo(322.672, 361);
    path39.lineTo(322.672, 355.316);
    path39.lineTo(318.78, 361);
    path39.lineTo(317.506, 361);
    path39.lineTo(317.506, 353.468);
    path39.lineTo(318.78, 353.468);
    path39.lineTo(318.78, 359.152);
    path39.lineTo(322.672, 353.468);
    path39.lineTo(323.946, 353.468);
    path39.lineTo(323.946, 361);
    path39.lineTo(322.672, 361);
    path39.close();
    Paint paint39 = Paint();
    paint39.color = const Color(0xFF000000);
    canvas.drawPath(path39, paint39);

    var path40 = Path()..fillType = PathFillType.nonZero;
    path40.moveTo(351.782, 361);
    path40.lineTo(350.354, 361);
    path40.lineTo(350.354, 352.082);
    path40.lineTo(345.286, 352.082);
    path40.lineTo(345.286, 361);
    path40.lineTo(343.858, 361);
    path40.lineTo(343.858, 350.85);
    path40.lineTo(351.782, 350.85);
    path40.lineTo(351.782, 361);
    path40.close();
    path40.moveTo(354.999, 357.262);
    path40.cubicTo(354.999, 359.278, 356.091, 360.062, 357.253, 360.062);
    path40.cubicTo(358.415, 360.062, 359.507, 359.194, 359.507, 357.262);
    path40.cubicTo(359.507, 355.246, 358.415, 354.462, 357.253, 354.462);
    path40.cubicTo(356.091, 354.462, 354.999, 355.204, 354.999, 357.262);
    path40.close();
    path40.moveTo(357.253, 353.342);
    path40.cubicTo(359.003, 353.342, 360.865, 354.532, 360.865, 357.262);
    path40.cubicTo(360.865, 359.992, 359.003, 361.182, 357.253, 361.182);
    path40.cubicTo(355.503, 361.182, 353.641, 359.992, 353.641, 357.262);
    path40.cubicTo(353.641, 354.532, 355.503, 353.342, 357.253, 353.342);
    path40.close();
    path40.moveTo(368.299, 353.468);
    path40.lineTo(368.299, 361);
    path40.lineTo(367.025, 361);
    path40.lineTo(367.025, 354.574);
    path40.lineTo(364.491, 354.574);
    path40.lineTo(364.379, 356.394);
    path40.cubicTo(364.197, 359.432, 363.539, 361, 361.789, 361);
    path40.lineTo(361.551, 361);
    path40.lineTo(361.551, 359.894);
    path40.lineTo(361.691, 359.894);
    path40.cubicTo(362.363, 359.894, 363.007, 359.166, 363.161, 356.044);
    path40.lineTo(363.273, 353.468);
    path40.lineTo(368.299, 353.468);
    path40.close();
    path40.moveTo(375.623, 361);
    path40.lineTo(375.623, 355.316);
    path40.lineTo(371.731, 361);
    path40.lineTo(370.457, 361);
    path40.lineTo(370.457, 353.468);
    path40.lineTo(371.731, 353.468);
    path40.lineTo(371.731, 359.152);
    path40.lineTo(375.623, 353.468);
    path40.lineTo(376.897, 353.468);
    path40.lineTo(376.897, 361);
    path40.lineTo(375.623, 361);
    path40.close();
    path40.moveTo(384.615, 354.574);
    path40.lineTo(382.039, 354.574);
    path40.lineTo(382.039, 361);
    path40.lineTo(380.765, 361);
    path40.lineTo(380.765, 354.574);
    path40.lineTo(378.189, 354.574);
    path40.lineTo(378.189, 353.468);
    path40.lineTo(384.615, 353.468);
    path40.lineTo(384.615, 354.574);
    path40.close();
    path40.moveTo(391.072, 361);
    path40.lineTo(391.072, 355.316);
    path40.lineTo(387.18, 361);
    path40.lineTo(385.906, 361);
    path40.lineTo(385.906, 353.468);
    path40.lineTo(387.18, 353.468);
    path40.lineTo(387.18, 359.152);
    path40.lineTo(391.072, 353.468);
    path40.lineTo(392.346, 353.468);
    path40.lineTo(392.346, 361);
    path40.lineTo(391.072, 361);
    path40.close();
    path40.moveTo(399.35, 361);
    path40.lineTo(396.76, 357.654);
    path40.lineTo(395.794, 357.654);
    path40.lineTo(395.794, 361);
    path40.lineTo(394.506, 361);
    path40.lineTo(394.506, 353.468);
    path40.lineTo(395.794, 353.468);
    path40.lineTo(395.794, 356.548);
    path40.lineTo(396.732, 356.548);
    path40.lineTo(399.126, 353.468);
    path40.lineTo(400.638, 353.468);
    path40.lineTo(397.796, 357.024);
    path40.lineTo(400.932, 361);
    path40.lineTo(399.35, 361);
    path40.close();
    path40.moveTo(406.647, 357.85);
    path40.lineTo(406.647, 357.374);
    path40.cubicTo(404.337, 357.598, 402.867, 357.948, 402.867, 358.984);
    path40.cubicTo(402.867, 359.698, 403.413, 360.174, 404.323, 360.174);
    path40.cubicTo(405.513, 360.174, 406.647, 359.628, 406.647, 357.85);
    path40.close();
    path40.moveTo(404.043, 361.182);
    path40.cubicTo(402.629, 361.182, 401.453, 360.398, 401.453, 359.012);
    path40.cubicTo(401.453, 357.234, 403.469, 356.702, 406.549, 356.366);
    path40.lineTo(406.549, 356.184);
    path40.cubicTo(406.549, 354.798, 405.793, 354.35, 404.841, 354.35);
    path40.cubicTo(403.777, 354.35, 403.175, 354.91, 403.119, 355.848);
    path40.lineTo(401.803, 355.848);
    path40.cubicTo(401.915, 354.224, 403.371, 353.314, 404.827, 353.314);
    path40.cubicTo(406.913, 353.314, 407.837, 354.294, 407.823, 356.422);
    path40.lineTo(407.809, 358.158);
    path40.cubicTo(407.795, 359.432, 407.851, 360.286, 408.005, 361);
    path40.lineTo(406.717, 361);
    path40.cubicTo(406.675, 360.72, 406.633, 360.412, 406.619, 359.964);
    path40.cubicTo(406.157, 360.748, 405.387, 361.182, 404.043, 361.182);
    path40.close();
    path40.moveTo(413.911, 357.262);
    path40.cubicTo(413.911, 359.278, 415.003, 360.062, 416.165, 360.062);
    path40.cubicTo(417.327, 360.062, 418.419, 359.194, 418.419, 357.262);
    path40.cubicTo(418.419, 355.246, 417.327, 354.462, 416.165, 354.462);
    path40.cubicTo(415.003, 354.462, 413.911, 355.204, 413.911, 357.262);
    path40.close();
    path40.moveTo(416.165, 353.342);
    path40.cubicTo(417.915, 353.342, 419.777, 354.532, 419.777, 357.262);
    path40.cubicTo(419.777, 359.992, 417.915, 361.182, 416.165, 361.182);
    path40.cubicTo(414.415, 361.182, 412.553, 359.992, 412.553, 357.262);
    path40.cubicTo(412.553, 354.532, 414.415, 353.342, 416.165, 353.342);
    path40.close();
    path40.moveTo(424.759, 353.902);
    path40.cubicTo(426.467, 353.902, 427.937, 355.092, 427.937, 357.472);
    path40.cubicTo(427.937, 359.894, 426.383, 361.182, 424.535, 361.182);
    path40.cubicTo(422.589, 361.182, 420.993, 359.824, 420.993, 357.08);
    path40.lineTo(420.993, 356.212);
    path40.cubicTo(421.035, 353.496, 421.931, 351.914, 424.955, 351.312);
    path40.lineTo(427.433, 350.822);
    path40.lineTo(427.433, 351.956);
    path40.lineTo(425.025, 352.474);
    path40.cubicTo(423.191, 352.88, 422.309, 353.566, 422.127, 355.442);
    path40.cubicTo(422.631, 354.392, 423.639, 353.902, 424.759, 353.902);
    path40.close();
    path40.moveTo(424.535, 360.076);
    path40.cubicTo(425.767, 360.076, 426.579, 359.138, 426.579, 357.5);
    path40.cubicTo(426.579, 355.848, 425.711, 355.008, 424.549, 355.008);
    path40.cubicTo(423.401, 355.008, 422.365, 355.792, 422.365, 357.486);
    path40.cubicTo(422.365, 359.082, 423.261, 360.076, 424.535, 360.076);
    path40.close();
    path40.moveTo(429.437, 353.468);
    path40.lineTo(430.711, 353.468);
    path40.lineTo(430.711, 354.658);
    path40.cubicTo(431.173, 353.86, 431.957, 353.342, 433.175, 353.342);
    path40.cubicTo(434.911, 353.342, 436.395, 354.798, 436.395, 357.262);
    path40.cubicTo(436.395, 359.768, 434.911, 361.182, 433.175, 361.182);
    path40.cubicTo(431.957, 361.182, 431.173, 360.664, 430.711, 359.866);
    path40.lineTo(430.711, 363.45);
    path40.lineTo(429.437, 363.45);
    path40.lineTo(429.437, 353.468);
    path40.close();
    path40.moveTo(430.655, 357.262);
    path40.cubicTo(430.655, 359.25, 431.719, 360.09, 432.853, 360.09);
    path40.cubicTo(434.155, 360.09, 435.009, 359.068, 435.009, 357.262);
    path40.cubicTo(435.009, 355.456, 434.155, 354.434, 432.853, 354.434);
    path40.cubicTo(431.719, 354.434, 430.655, 355.274, 430.655, 357.262);
    path40.close();
    path40.moveTo(442.645, 357.85);
    path40.lineTo(442.645, 357.374);
    path40.cubicTo(440.335, 357.598, 438.865, 357.948, 438.865, 358.984);
    path40.cubicTo(438.865, 359.698, 439.411, 360.174, 440.321, 360.174);
    path40.cubicTo(441.511, 360.174, 442.645, 359.628, 442.645, 357.85);
    path40.close();
    path40.moveTo(440.041, 361.182);
    path40.cubicTo(438.627, 361.182, 437.451, 360.398, 437.451, 359.012);
    path40.cubicTo(437.451, 357.234, 439.467, 356.702, 442.547, 356.366);
    path40.lineTo(442.547, 356.184);
    path40.cubicTo(442.547, 354.798, 441.791, 354.35, 440.839, 354.35);
    path40.cubicTo(439.775, 354.35, 439.173, 354.91, 439.117, 355.848);
    path40.lineTo(437.801, 355.848);
    path40.cubicTo(437.913, 354.224, 439.369, 353.314, 440.825, 353.314);
    path40.cubicTo(442.911, 353.314, 443.835, 354.294, 443.821, 356.422);
    path40.lineTo(443.807, 358.158);
    path40.cubicTo(443.793, 359.432, 443.849, 360.286, 444.003, 361);
    path40.lineTo(442.715, 361);
    path40.cubicTo(442.673, 360.72, 442.631, 360.412, 442.617, 359.964);
    path40.cubicTo(442.155, 360.748, 441.385, 361.182, 440.041, 361.182);
    path40.close();
    path40.moveTo(449.177, 353.902);
    path40.cubicTo(450.885, 353.902, 452.355, 355.092, 452.355, 357.472);
    path40.cubicTo(452.355, 359.894, 450.801, 361.182, 448.953, 361.182);
    path40.cubicTo(447.007, 361.182, 445.411, 359.824, 445.411, 357.08);
    path40.lineTo(445.411, 356.212);
    path40.cubicTo(445.453, 353.496, 446.349, 351.914, 449.373, 351.312);
    path40.lineTo(451.851, 350.822);
    path40.lineTo(451.851, 351.956);
    path40.lineTo(449.443, 352.474);
    path40.cubicTo(447.609, 352.88, 446.727, 353.566, 446.545, 355.442);
    path40.cubicTo(447.049, 354.392, 448.057, 353.902, 449.177, 353.902);
    path40.close();
    path40.moveTo(448.953, 360.076);
    path40.cubicTo(450.185, 360.076, 450.997, 359.138, 450.997, 357.5);
    path40.cubicTo(450.997, 355.848, 450.129, 355.008, 448.967, 355.008);
    path40.cubicTo(447.819, 355.008, 446.783, 355.792, 446.783, 357.486);
    path40.cubicTo(446.783, 359.082, 447.679, 360.076, 448.953, 360.076);
    path40.close();
    path40.moveTo(454.653, 357.262);
    path40.cubicTo(454.653, 359.278, 455.745, 360.062, 456.907, 360.062);
    path40.cubicTo(458.069, 360.062, 459.161, 359.194, 459.161, 357.262);
    path40.cubicTo(459.161, 355.246, 458.069, 354.462, 456.907, 354.462);
    path40.cubicTo(455.745, 354.462, 454.653, 355.204, 454.653, 357.262);
    path40.close();
    path40.moveTo(456.907, 353.342);
    path40.cubicTo(458.657, 353.342, 460.519, 354.532, 460.519, 357.262);
    path40.cubicTo(460.519, 359.992, 458.657, 361.182, 456.907, 361.182);
    path40.cubicTo(455.157, 361.182, 453.295, 359.992, 453.295, 357.262);
    path40.cubicTo(453.295, 354.532, 455.157, 353.342, 456.907, 353.342);
    path40.close();
    path40.moveTo(467.425, 354.574);
    path40.lineTo(464.849, 354.574);
    path40.lineTo(464.849, 361);
    path40.lineTo(463.575, 361);
    path40.lineTo(463.575, 354.574);
    path40.lineTo(460.999, 354.574);
    path40.lineTo(460.999, 353.468);
    path40.lineTo(467.425, 353.468);
    path40.lineTo(467.425, 354.574);
    path40.close();
    path40.moveTo(473.561, 361);
    path40.lineTo(470.971, 357.654);
    path40.lineTo(470.005, 357.654);
    path40.lineTo(470.005, 361);
    path40.lineTo(468.717, 361);
    path40.lineTo(468.717, 353.468);
    path40.lineTo(470.005, 353.468);
    path40.lineTo(470.005, 356.548);
    path40.lineTo(470.943, 356.548);
    path40.lineTo(473.337, 353.468);
    path40.lineTo(474.849, 353.468);
    path40.lineTo(472.007, 357.024);
    path40.lineTo(475.143, 361);
    path40.lineTo(473.561, 361);
    path40.close();
    path40.moveTo(481.525, 361);
    path40.lineTo(481.525, 355.316);
    path40.lineTo(477.633, 361);
    path40.lineTo(476.359, 361);
    path40.lineTo(476.359, 353.468);
    path40.lineTo(477.633, 353.468);
    path40.lineTo(477.633, 359.152);
    path40.lineTo(481.525, 353.468);
    path40.lineTo(482.799, 353.468);
    path40.lineTo(482.799, 361);
    path40.lineTo(481.525, 361);
    path40.close();
    path40.moveTo(494.483, 353.468);
    path40.lineTo(494.483, 361);
    path40.lineTo(493.209, 361);
    path40.lineTo(493.209, 354.574);
    path40.lineTo(489.555, 354.574);
    path40.lineTo(489.555, 361);
    path40.lineTo(488.281, 361);
    path40.lineTo(488.281, 353.468);
    path40.lineTo(494.483, 353.468);
    path40.close();
    path40.moveTo(503.215, 357.654);
    path40.lineTo(497.419, 357.654);
    path40.cubicTo(497.461, 359.278, 498.637, 360.062, 499.743, 360.062);
    path40.cubicTo(500.863, 360.062, 501.479, 359.558, 501.801, 358.816);
    path40.lineTo(503.117, 358.816);
    path40.cubicTo(502.781, 360.104, 501.577, 361.182, 499.743, 361.182);
    path40.cubicTo(497.363, 361.182, 496.047, 359.474, 496.047, 357.248);
    path40.cubicTo(496.047, 354.854, 497.643, 353.342, 499.701, 353.342);
    path40.cubicTo(502.011, 353.342, 503.369, 355.26, 503.215, 357.654);
    path40.close();
    path40.moveTo(499.701, 354.434);
    path40.cubicTo(498.581, 354.434, 497.545, 355.05, 497.433, 356.562);
    path40.lineTo(501.871, 356.562);
    path40.cubicTo(501.829, 355.498, 501.059, 354.434, 499.701, 354.434);
    path40.close();
    path40.moveTo(504.783, 353.468);
    path40.lineTo(506.057, 353.468);
    path40.lineTo(506.057, 354.658);
    path40.cubicTo(506.519, 353.86, 507.303, 353.342, 508.521, 353.342);
    path40.cubicTo(510.257, 353.342, 511.741, 354.798, 511.741, 357.262);
    path40.cubicTo(511.741, 359.768, 510.257, 361.182, 508.521, 361.182);
    path40.cubicTo(507.303, 361.182, 506.519, 360.664, 506.057, 359.866);
    path40.lineTo(506.057, 363.45);
    path40.lineTo(504.783, 363.45);
    path40.lineTo(504.783, 353.468);
    path40.close();
    path40.moveTo(506.001, 357.262);
    path40.cubicTo(506.001, 359.25, 507.065, 360.09, 508.199, 360.09);
    path40.cubicTo(509.501, 360.09, 510.355, 359.068, 510.355, 357.262);
    path40.cubicTo(510.355, 355.456, 509.501, 354.434, 508.199, 354.434);
    path40.cubicTo(507.065, 354.434, 506.001, 355.274, 506.001, 357.262);
    path40.close();
    path40.moveTo(516.476, 353.342);
    path40.cubicTo(518.324, 353.342, 519.444, 354.7, 519.626, 355.988);
    path40.lineTo(518.338, 355.988);
    path40.cubicTo(518.156, 355.092, 517.386, 354.462, 516.392, 354.462);
    path40.cubicTo(515.272, 354.462, 514.222, 355.344, 514.222, 357.234);
    path40.cubicTo(514.222, 359.138, 515.272, 360.062, 516.392, 360.062);
    path40.cubicTo(517.47, 360.062, 518.212, 359.334, 518.394, 358.55);
    path40.lineTo(519.71, 358.55);
    path40.cubicTo(519.444, 359.964, 518.114, 361.182, 516.35, 361.182);
    path40.cubicTo(514.18, 361.182, 512.836, 359.544, 512.836, 357.248);
    path40.cubicTo(512.836, 355.008, 514.25, 353.342, 516.476, 353.342);
    path40.close();
    path40.moveTo(522.083, 357.262);
    path40.cubicTo(522.083, 359.278, 523.175, 360.062, 524.337, 360.062);
    path40.cubicTo(525.499, 360.062, 526.591, 359.194, 526.591, 357.262);
    path40.cubicTo(526.591, 355.246, 525.499, 354.462, 524.337, 354.462);
    path40.cubicTo(523.175, 354.462, 522.083, 355.204, 522.083, 357.262);
    path40.close();
    path40.moveTo(524.337, 353.342);
    path40.cubicTo(526.087, 353.342, 527.949, 354.532, 527.949, 357.262);
    path40.cubicTo(527.949, 359.992, 526.087, 361.182, 524.337, 361.182);
    path40.cubicTo(522.587, 361.182, 520.725, 359.992, 520.725, 357.262);
    path40.cubicTo(520.725, 354.532, 522.587, 353.342, 524.337, 353.342);
    path40.close();
    path40.moveTo(535.815, 361);
    path40.lineTo(534.541, 361);
    path40.lineTo(534.541, 357.71);
    path40.lineTo(530.817, 357.71);
    path40.lineTo(530.817, 361);
    path40.lineTo(529.543, 361);
    path40.lineTo(529.543, 353.468);
    path40.lineTo(530.817, 353.468);
    path40.lineTo(530.817, 356.604);
    path40.lineTo(534.541, 356.604);
    path40.lineTo(534.541, 353.468);
    path40.lineTo(535.815, 353.468);
    path40.lineTo(535.815, 361);
    path40.close();
    path40.moveTo(542.641, 357.85);
    path40.lineTo(542.641, 357.374);
    path40.cubicTo(540.331, 357.598, 538.861, 357.948, 538.861, 358.984);
    path40.cubicTo(538.861, 359.698, 539.407, 360.174, 540.317, 360.174);
    path40.cubicTo(541.507, 360.174, 542.641, 359.628, 542.641, 357.85);
    path40.close();
    path40.moveTo(540.037, 361.182);
    path40.cubicTo(538.623, 361.182, 537.447, 360.398, 537.447, 359.012);
    path40.cubicTo(537.447, 357.234, 539.463, 356.702, 542.543, 356.366);
    path40.lineTo(542.543, 356.184);
    path40.cubicTo(542.543, 354.798, 541.787, 354.35, 540.835, 354.35);
    path40.cubicTo(539.771, 354.35, 539.169, 354.91, 539.113, 355.848);
    path40.lineTo(537.797, 355.848);
    path40.cubicTo(537.909, 354.224, 539.365, 353.314, 540.821, 353.314);
    path40.cubicTo(542.907, 353.314, 543.831, 354.294, 543.817, 356.422);
    path40.lineTo(543.803, 358.158);
    path40.cubicTo(543.789, 359.432, 543.845, 360.286, 543.999, 361);
    path40.lineTo(542.711, 361);
    path40.cubicTo(542.669, 360.72, 542.627, 360.412, 542.613, 359.964);
    path40.cubicTo(542.151, 360.748, 541.381, 361.182, 540.037, 361.182);
    path40.close();
    path40.moveTo(551.735, 353.468);
    path40.lineTo(551.735, 361);
    path40.lineTo(550.461, 361);
    path40.lineTo(550.461, 354.574);
    path40.lineTo(547.927, 354.574);
    path40.lineTo(547.815, 356.394);
    path40.cubicTo(547.633, 359.432, 546.975, 361, 545.225, 361);
    path40.lineTo(544.987, 361);
    path40.lineTo(544.987, 359.894);
    path40.lineTo(545.127, 359.894);
    path40.cubicTo(545.799, 359.894, 546.443, 359.166, 546.597, 356.044);
    path40.lineTo(546.709, 353.468);
    path40.lineTo(551.735, 353.468);
    path40.close();
    path40.moveTo(555.166, 356.128);
    path40.lineTo(556.958, 356.128);
    path40.cubicTo(558.932, 356.128, 559.772, 356.898, 559.772, 358.508);
    path40.cubicTo(559.772, 360.37, 558.68, 361, 556.944, 361);
    path40.lineTo(553.892, 361);
    path40.lineTo(553.892, 353.468);
    path40.lineTo(555.166, 353.468);
    path40.lineTo(555.166, 356.128);
    path40.close();
    path40.moveTo(555.166, 359.894);
    path40.lineTo(556.832, 359.894);
    path40.cubicTo(557.952, 359.894, 558.526, 359.516, 558.526, 358.508);
    path40.cubicTo(558.526, 357.514, 557.938, 357.234, 556.804, 357.234);
    path40.lineTo(555.166, 357.234);
    path40.lineTo(555.166, 359.894);
    path40.close();
    path40.moveTo(567.479, 361);
    path40.lineTo(566.205, 361);
    path40.lineTo(566.205, 357.71);
    path40.lineTo(562.481, 357.71);
    path40.lineTo(562.481, 361);
    path40.lineTo(561.207, 361);
    path40.lineTo(561.207, 353.468);
    path40.lineTo(562.481, 353.468);
    path40.lineTo(562.481, 356.604);
    path40.lineTo(566.205, 356.604);
    path40.lineTo(566.205, 353.468);
    path40.lineTo(567.479, 353.468);
    path40.lineTo(567.479, 361);
    path40.close();
    path40.moveTo(572.345, 361);
    path40.lineTo(569.629, 361);
    path40.lineTo(569.629, 353.468);
    path40.lineTo(570.903, 353.468);
    path40.lineTo(570.903, 356.128);
    path40.lineTo(572.359, 356.128);
    path40.cubicTo(574.319, 356.128, 575.173, 356.898, 575.173, 358.508);
    path40.cubicTo(575.173, 360.37, 574.067, 361, 572.345, 361);
    path40.close();
    path40.moveTo(570.903, 357.234);
    path40.lineTo(570.903, 359.894);
    path40.lineTo(572.233, 359.894);
    path40.cubicTo(573.353, 359.894, 573.927, 359.53, 573.927, 358.508);
    path40.cubicTo(573.927, 357.5, 573.367, 357.234, 572.191, 357.234);
    path40.lineTo(570.903, 357.234);
    path40.close();
    path40.moveTo(577.693, 361);
    path40.lineTo(576.419, 361);
    path40.lineTo(576.419, 353.468);
    path40.lineTo(577.693, 353.468);
    path40.lineTo(577.693, 361);
    path40.close();
    path40.moveTo(585.721, 353.468);
    path40.lineTo(583.159, 357.066);
    path40.lineTo(585.973, 361);
    path40.lineTo(584.447, 361);
    path40.lineTo(582.403, 358.13);
    path40.lineTo(580.373, 361);
    path40.lineTo(578.917, 361);
    path40.lineTo(581.689, 357.122);
    path40.lineTo(579.085, 353.468);
    path40.lineTo(580.611, 353.468);
    path40.lineTo(582.445, 356.058);
    path40.lineTo(584.293, 353.468);
    path40.lineTo(585.721, 353.468);
    path40.close();
    path40.moveTo(597.561, 359.894);
    path40.lineTo(597.561, 362.666);
    path40.lineTo(596.329, 362.666);
    path40.lineTo(596.329, 361);
    path40.lineTo(590.813, 361);
    path40.lineTo(590.813, 362.666);
    path40.lineTo(589.581, 362.666);
    path40.lineTo(589.581, 359.894);
    path40.lineTo(589.917, 359.894);
    path40.cubicTo(590.771, 359.894, 591.219, 358.774, 591.331, 355.89);
    path40.lineTo(591.429, 353.468);
    path40.lineTo(596.511, 353.468);
    path40.lineTo(596.511, 359.894);
    path40.lineTo(597.561, 359.894);
    path40.close();
    path40.moveTo(595.237, 359.894);
    path40.lineTo(595.237, 354.574);
    path40.lineTo(592.661, 354.574);
    path40.lineTo(592.591, 356.016);
    path40.cubicTo(592.479, 358.242, 592.157, 359.334, 591.569, 359.894);
    path40.lineTo(595.237, 359.894);
    path40.close();
    path40.moveTo(603.522, 357.85);
    path40.lineTo(603.522, 357.374);
    path40.cubicTo(601.212, 357.598, 599.742, 357.948, 599.742, 358.984);
    path40.cubicTo(599.742, 359.698, 600.288, 360.174, 601.198, 360.174);
    path40.cubicTo(602.388, 360.174, 603.522, 359.628, 603.522, 357.85);
    path40.close();
    path40.moveTo(600.918, 361.182);
    path40.cubicTo(599.504, 361.182, 598.328, 360.398, 598.328, 359.012);
    path40.cubicTo(598.328, 357.234, 600.344, 356.702, 603.424, 356.366);
    path40.lineTo(603.424, 356.184);
    path40.cubicTo(603.424, 354.798, 602.668, 354.35, 601.716, 354.35);
    path40.cubicTo(600.652, 354.35, 600.05, 354.91, 599.994, 355.848);
    path40.lineTo(598.678, 355.848);
    path40.cubicTo(598.79, 354.224, 600.246, 353.314, 601.702, 353.314);
    path40.cubicTo(603.788, 353.314, 604.712, 354.294, 604.698, 356.422);
    path40.lineTo(604.684, 358.158);
    path40.cubicTo(604.67, 359.432, 604.726, 360.286, 604.88, 361);
    path40.lineTo(603.592, 361);
    path40.cubicTo(603.55, 360.72, 603.508, 360.412, 603.494, 359.964);
    path40.cubicTo(603.032, 360.748, 602.262, 361.182, 600.918, 361.182);
    path40.close();
    path40.moveTo(612.938, 361);
    path40.lineTo(611.664, 361);
    path40.lineTo(611.664, 357.71);
    path40.lineTo(607.94, 357.71);
    path40.lineTo(607.94, 361);
    path40.lineTo(606.666, 361);
    path40.lineTo(606.666, 353.468);
    path40.lineTo(607.94, 353.468);
    path40.lineTo(607.94, 356.604);
    path40.lineTo(611.664, 356.604);
    path40.lineTo(611.664, 353.468);
    path40.lineTo(612.938, 353.468);
    path40.lineTo(612.938, 361);
    path40.close();
    path40.moveTo(621.36, 361);
    path40.lineTo(620.086, 361);
    path40.lineTo(620.086, 357.71);
    path40.lineTo(616.362, 357.71);
    path40.lineTo(616.362, 361);
    path40.lineTo(615.088, 361);
    path40.lineTo(615.088, 353.468);
    path40.lineTo(616.362, 353.468);
    path40.lineTo(616.362, 356.604);
    path40.lineTo(620.086, 356.604);
    path40.lineTo(620.086, 353.468);
    path40.lineTo(621.36, 353.468);
    path40.lineTo(621.36, 361);
    path40.close();
    path40.moveTo(626.226, 361);
    path40.lineTo(623.51, 361);
    path40.lineTo(623.51, 353.468);
    path40.lineTo(624.784, 353.468);
    path40.lineTo(624.784, 356.128);
    path40.lineTo(626.24, 356.128);
    path40.cubicTo(628.2, 356.128, 629.054, 356.898, 629.054, 358.508);
    path40.cubicTo(629.054, 360.37, 627.948, 361, 626.226, 361);
    path40.close();
    path40.moveTo(624.784, 357.234);
    path40.lineTo(624.784, 359.894);
    path40.lineTo(626.114, 359.894);
    path40.cubicTo(627.234, 359.894, 627.808, 359.53, 627.808, 358.508);
    path40.cubicTo(627.808, 357.5, 627.248, 357.234, 626.072, 357.234);
    path40.lineTo(624.784, 357.234);
    path40.close();
    path40.moveTo(631.574, 361);
    path40.lineTo(630.3, 361);
    path40.lineTo(630.3, 353.468);
    path40.lineTo(631.574, 353.468);
    path40.lineTo(631.574, 361);
    path40.close();
    path40.moveTo(639.602, 353.468);
    path40.lineTo(637.04, 357.066);
    path40.lineTo(639.854, 361);
    path40.lineTo(638.328, 361);
    path40.lineTo(636.284, 358.13);
    path40.lineTo(634.254, 361);
    path40.lineTo(632.798, 361);
    path40.lineTo(635.57, 357.122);
    path40.lineTo(632.966, 353.468);
    path40.lineTo(634.492, 353.468);
    path40.lineTo(636.326, 356.058);
    path40.lineTo(638.174, 353.468);
    path40.lineTo(639.602, 353.468);
    path40.close();
    Paint paint40 = Paint();
    paint40.color = const Color(0xFF000000);
    canvas.drawPath(path40, paint40);

    var path41 = Path()..fillType = PathFillType.nonZero;
    path41.moveTo(665.561, 361);
    path41.lineTo(664.133, 361);
    path41.lineTo(664.133, 352.082);
    path41.lineTo(659.065, 352.082);
    path41.lineTo(659.065, 361);
    path41.lineTo(657.637, 361);
    path41.lineTo(657.637, 350.85);
    path41.lineTo(665.561, 350.85);
    path41.lineTo(665.561, 361);
    path41.close();
    path41.moveTo(668.778, 357.262);
    path41.cubicTo(668.778, 359.278, 669.87, 360.062, 671.032, 360.062);
    path41.cubicTo(672.194, 360.062, 673.286, 359.194, 673.286, 357.262);
    path41.cubicTo(673.286, 355.246, 672.194, 354.462, 671.032, 354.462);
    path41.cubicTo(669.87, 354.462, 668.778, 355.204, 668.778, 357.262);
    path41.close();
    path41.moveTo(671.032, 353.342);
    path41.cubicTo(672.782, 353.342, 674.644, 354.532, 674.644, 357.262);
    path41.cubicTo(674.644, 359.992, 672.782, 361.182, 671.032, 361.182);
    path41.cubicTo(669.282, 361.182, 667.42, 359.992, 667.42, 357.262);
    path41.cubicTo(667.42, 354.532, 669.282, 353.342, 671.032, 353.342);
    path41.close();
    path41.moveTo(682.079, 353.468);
    path41.lineTo(682.079, 361);
    path41.lineTo(680.805, 361);
    path41.lineTo(680.805, 354.574);
    path41.lineTo(678.271, 354.574);
    path41.lineTo(678.159, 356.394);
    path41.cubicTo(677.977, 359.432, 677.319, 361, 675.569, 361);
    path41.lineTo(675.331, 361);
    path41.lineTo(675.331, 359.894);
    path41.lineTo(675.471, 359.894);
    path41.cubicTo(676.143, 359.894, 676.787, 359.166, 676.941, 356.044);
    path41.lineTo(677.053, 353.468);
    path41.lineTo(682.079, 353.468);
    path41.close();
    path41.moveTo(685.51, 356.128);
    path41.lineTo(687.302, 356.128);
    path41.cubicTo(689.276, 356.128, 690.116, 356.898, 690.116, 358.508);
    path41.cubicTo(690.116, 360.37, 689.024, 361, 687.288, 361);
    path41.lineTo(684.236, 361);
    path41.lineTo(684.236, 353.468);
    path41.lineTo(685.51, 353.468);
    path41.lineTo(685.51, 356.128);
    path41.close();
    path41.moveTo(685.51, 359.894);
    path41.lineTo(687.176, 359.894);
    path41.cubicTo(688.296, 359.894, 688.87, 359.516, 688.87, 358.508);
    path41.cubicTo(688.87, 357.514, 688.282, 357.234, 687.148, 357.234);
    path41.lineTo(685.51, 357.234);
    path41.lineTo(685.51, 359.894);
    path41.close();
    path41.moveTo(695.856, 357.052);
    path41.cubicTo(696.654, 357.276, 697.382, 357.85, 697.382, 358.858);
    path41.cubicTo(697.382, 360.482, 695.884, 361.182, 694.204, 361.182);
    path41.cubicTo(692.594, 361.182, 691.264, 360.426, 690.998, 358.704);
    path41.lineTo(692.286, 358.704);
    path41.cubicTo(692.496, 359.67, 693.21, 360.118, 694.288, 360.118);
    path41.cubicTo(695.352, 360.118, 696.024, 359.628, 696.024, 358.914);
    path41.cubicTo(696.024, 358.032, 695.45, 357.682, 694.386, 357.682);
    path41.lineTo(693.182, 357.682);
    path41.lineTo(693.182, 356.632);
    path41.lineTo(694.316, 356.632);
    path41.cubicTo(695.198, 356.632, 695.73, 356.24, 695.73, 355.456);
    path41.cubicTo(695.73, 354.742, 695.086, 354.42, 694.26, 354.42);
    path41.cubicTo(693.322, 354.42, 692.608, 354.77, 692.44, 355.792);
    path41.lineTo(691.124, 355.792);
    path41.cubicTo(691.39, 354.154, 692.608, 353.3, 694.19, 353.3);
    path41.cubicTo(695.674, 353.3, 697.046, 354.014, 697.046, 355.428);
    path41.cubicTo(697.046, 356.198, 696.528, 356.73, 695.856, 357.052);
    path41.close();
    path41.moveTo(699.69, 357.262);
    path41.cubicTo(699.69, 359.278, 700.782, 360.062, 701.944, 360.062);
    path41.cubicTo(703.106, 360.062, 704.198, 359.194, 704.198, 357.262);
    path41.cubicTo(704.198, 355.246, 703.106, 354.462, 701.944, 354.462);
    path41.cubicTo(700.782, 354.462, 699.69, 355.204, 699.69, 357.262);
    path41.close();
    path41.moveTo(701.944, 353.342);
    path41.cubicTo(703.694, 353.342, 705.556, 354.532, 705.556, 357.262);
    path41.cubicTo(705.556, 359.992, 703.694, 361.182, 701.944, 361.182);
    path41.cubicTo(700.194, 361.182, 698.332, 359.992, 698.332, 357.262);
    path41.cubicTo(698.332, 354.532, 700.194, 353.342, 701.944, 353.342);
    path41.close();
    path41.moveTo(707.15, 353.468);
    path41.lineTo(710.426, 353.468);
    path41.cubicTo(711.938, 353.468, 713.17, 353.86, 713.17, 355.386);
    path41.cubicTo(713.17, 356.184, 712.82, 356.744, 712.12, 357.038);
    path41.cubicTo(712.904, 357.262, 713.478, 357.794, 713.478, 358.802);
    path41.cubicTo(713.478, 360.37, 712.26, 361, 710.65, 361);
    path41.lineTo(707.15, 361);
    path41.lineTo(707.15, 353.468);
    path41.close();
    path41.moveTo(708.424, 356.632);
    path41.lineTo(710.342, 356.632);
    path41.cubicTo(711.28, 356.632, 711.84, 356.38, 711.84, 355.526);
    path41.cubicTo(711.84, 354.742, 711.252, 354.574, 710.3, 354.574);
    path41.lineTo(708.424, 354.574);
    path41.lineTo(708.424, 356.632);
    path41.close();
    path41.moveTo(708.424, 357.682);
    path41.lineTo(708.424, 359.894);
    path41.lineTo(710.454, 359.894);
    path41.cubicTo(711.574, 359.894, 712.148, 359.572, 712.148, 358.788);
    path41.cubicTo(712.148, 357.948, 711.588, 357.682, 710.412, 357.682);
    path41.lineTo(708.424, 357.682);
    path41.close();
    path41.moveTo(719.647, 357.85);
    path41.lineTo(719.647, 357.374);
    path41.cubicTo(717.337, 357.598, 715.867, 357.948, 715.867, 358.984);
    path41.cubicTo(715.867, 359.698, 716.413, 360.174, 717.323, 360.174);
    path41.cubicTo(718.513, 360.174, 719.647, 359.628, 719.647, 357.85);
    path41.close();
    path41.moveTo(717.043, 361.182);
    path41.cubicTo(715.629, 361.182, 714.453, 360.398, 714.453, 359.012);
    path41.cubicTo(714.453, 357.234, 716.469, 356.702, 719.549, 356.366);
    path41.lineTo(719.549, 356.184);
    path41.cubicTo(719.549, 354.798, 718.793, 354.35, 717.841, 354.35);
    path41.cubicTo(716.777, 354.35, 716.175, 354.91, 716.119, 355.848);
    path41.lineTo(714.803, 355.848);
    path41.cubicTo(714.915, 354.224, 716.371, 353.314, 717.827, 353.314);
    path41.cubicTo(719.913, 353.314, 720.837, 354.294, 720.823, 356.422);
    path41.lineTo(720.809, 358.158);
    path41.cubicTo(720.795, 359.432, 720.851, 360.286, 721.005, 361);
    path41.lineTo(719.717, 361);
    path41.cubicTo(719.675, 360.72, 719.633, 360.412, 719.619, 359.964);
    path41.cubicTo(719.157, 360.748, 718.387, 361.182, 717.043, 361.182);
    path41.close();
    path41.moveTo(727.952, 354.574);
    path41.lineTo(725.376, 354.574);
    path41.lineTo(725.376, 361);
    path41.lineTo(724.102, 361);
    path41.lineTo(724.102, 354.574);
    path41.lineTo(721.526, 354.574);
    path41.lineTo(721.526, 353.468);
    path41.lineTo(727.952, 353.468);
    path41.lineTo(727.952, 354.574);
    path41.close();
    path41.moveTo(735.578, 357.654);
    path41.lineTo(729.782, 357.654);
    path41.cubicTo(729.824, 359.278, 731, 360.062, 732.106, 360.062);
    path41.cubicTo(733.226, 360.062, 733.842, 359.558, 734.164, 358.816);
    path41.lineTo(735.48, 358.816);
    path41.cubicTo(735.144, 360.104, 733.94, 361.182, 732.106, 361.182);
    path41.cubicTo(729.726, 361.182, 728.41, 359.474, 728.41, 357.248);
    path41.cubicTo(728.41, 354.854, 730.006, 353.342, 732.064, 353.342);
    path41.cubicTo(734.374, 353.342, 735.732, 355.26, 735.578, 357.654);
    path41.close();
    path41.moveTo(732.064, 354.434);
    path41.cubicTo(730.944, 354.434, 729.908, 355.05, 729.796, 356.562);
    path41.lineTo(734.234, 356.562);
    path41.cubicTo(734.192, 355.498, 733.422, 354.434, 732.064, 354.434);
    path41.close();
    path41.moveTo(743.096, 353.468);
    path41.lineTo(743.096, 361);
    path41.lineTo(741.822, 361);
    path41.lineTo(741.822, 354.574);
    path41.lineTo(739.288, 354.574);
    path41.lineTo(739.176, 356.394);
    path41.cubicTo(738.994, 359.432, 738.336, 361, 736.586, 361);
    path41.lineTo(736.348, 361);
    path41.lineTo(736.348, 359.894);
    path41.lineTo(736.488, 359.894);
    path41.cubicTo(737.16, 359.894, 737.804, 359.166, 737.958, 356.044);
    path41.lineTo(738.07, 353.468);
    path41.lineTo(743.096, 353.468);
    path41.close();
    path41.moveTo(746.528, 356.128);
    path41.lineTo(748.32, 356.128);
    path41.cubicTo(750.294, 356.128, 751.134, 356.898, 751.134, 358.508);
    path41.cubicTo(751.134, 360.37, 750.042, 361, 748.306, 361);
    path41.lineTo(745.254, 361);
    path41.lineTo(745.254, 353.468);
    path41.lineTo(746.528, 353.468);
    path41.lineTo(746.528, 356.128);
    path41.close();
    path41.moveTo(746.528, 359.894);
    path41.lineTo(748.194, 359.894);
    path41.cubicTo(749.314, 359.894, 749.888, 359.516, 749.888, 358.508);
    path41.cubicTo(749.888, 357.514, 749.3, 357.234, 748.166, 357.234);
    path41.lineTo(746.528, 357.234);
    path41.lineTo(746.528, 359.894);
    path41.close();
    path41.moveTo(755.73, 353.342);
    path41.cubicTo(757.578, 353.342, 758.698, 354.7, 758.88, 355.988);
    path41.lineTo(757.592, 355.988);
    path41.cubicTo(757.41, 355.092, 756.64, 354.462, 755.646, 354.462);
    path41.cubicTo(754.526, 354.462, 753.476, 355.344, 753.476, 357.234);
    path41.cubicTo(753.476, 359.138, 754.526, 360.062, 755.646, 360.062);
    path41.cubicTo(756.724, 360.062, 757.466, 359.334, 757.648, 358.55);
    path41.lineTo(758.964, 358.55);
    path41.cubicTo(758.698, 359.964, 757.368, 361.182, 755.604, 361.182);
    path41.cubicTo(753.434, 361.182, 752.09, 359.544, 752.09, 357.248);
    path41.cubicTo(752.09, 355.008, 753.504, 353.342, 755.73, 353.342);
    path41.close();
    path41.moveTo(765.315, 361);
    path41.lineTo(762.725, 357.654);
    path41.lineTo(761.759, 357.654);
    path41.lineTo(761.759, 361);
    path41.lineTo(760.471, 361);
    path41.lineTo(760.471, 353.468);
    path41.lineTo(761.759, 353.468);
    path41.lineTo(761.759, 356.548);
    path41.lineTo(762.697, 356.548);
    path41.lineTo(765.091, 353.468);
    path41.lineTo(766.603, 353.468);
    path41.lineTo(763.761, 357.024);
    path41.lineTo(766.897, 361);
    path41.lineTo(765.315, 361);
    path41.close();
    path41.moveTo(768.638, 357.262);
    path41.cubicTo(768.638, 359.278, 769.73, 360.062, 770.892, 360.062);
    path41.cubicTo(772.054, 360.062, 773.146, 359.194, 773.146, 357.262);
    path41.cubicTo(773.146, 355.246, 772.054, 354.462, 770.892, 354.462);
    path41.cubicTo(769.73, 354.462, 768.638, 355.204, 768.638, 357.262);
    path41.close();
    path41.moveTo(770.892, 353.342);
    path41.cubicTo(772.642, 353.342, 774.504, 354.532, 774.504, 357.262);
    path41.cubicTo(774.504, 359.992, 772.642, 361.182, 770.892, 361.182);
    path41.cubicTo(769.142, 361.182, 767.28, 359.992, 767.28, 357.262);
    path41.cubicTo(767.28, 354.532, 769.142, 353.342, 770.892, 353.342);
    path41.close();
    path41.moveTo(782.787, 357.654);
    path41.lineTo(776.991, 357.654);
    path41.cubicTo(777.033, 359.278, 778.209, 360.062, 779.315, 360.062);
    path41.cubicTo(780.435, 360.062, 781.051, 359.558, 781.373, 358.816);
    path41.lineTo(782.689, 358.816);
    path41.cubicTo(782.353, 360.104, 781.149, 361.182, 779.315, 361.182);
    path41.cubicTo(776.935, 361.182, 775.619, 359.474, 775.619, 357.248);
    path41.cubicTo(775.619, 354.854, 777.215, 353.342, 779.273, 353.342);
    path41.cubicTo(781.583, 353.342, 782.941, 355.26, 782.787, 357.654);
    path41.close();
    path41.moveTo(779.273, 354.434);
    path41.cubicTo(778.153, 354.434, 777.117, 355.05, 777.005, 356.562);
    path41.lineTo(781.443, 356.562);
    path41.cubicTo(781.401, 355.498, 780.631, 354.434, 779.273, 354.434);
    path41.close();
    path41.moveTo(790.73, 353.342);
    path41.cubicTo(792.578, 353.342, 793.698, 354.7, 793.88, 355.988);
    path41.lineTo(792.592, 355.988);
    path41.cubicTo(792.41, 355.092, 791.64, 354.462, 790.646, 354.462);
    path41.cubicTo(789.526, 354.462, 788.476, 355.344, 788.476, 357.234);
    path41.cubicTo(788.476, 359.138, 789.526, 360.062, 790.646, 360.062);
    path41.cubicTo(791.724, 360.062, 792.466, 359.334, 792.648, 358.55);
    path41.lineTo(793.964, 358.55);
    path41.cubicTo(793.698, 359.964, 792.368, 361.182, 790.604, 361.182);
    path41.cubicTo(788.434, 361.182, 787.09, 359.544, 787.09, 357.248);
    path41.cubicTo(787.09, 355.008, 788.504, 353.342, 790.73, 353.342);
    path41.close();
    path41.moveTo(796.337, 357.262);
    path41.cubicTo(796.337, 359.278, 797.429, 360.062, 798.591, 360.062);
    path41.cubicTo(799.753, 360.062, 800.845, 359.194, 800.845, 357.262);
    path41.cubicTo(800.845, 355.246, 799.753, 354.462, 798.591, 354.462);
    path41.cubicTo(797.429, 354.462, 796.337, 355.204, 796.337, 357.262);
    path41.close();
    path41.moveTo(798.591, 353.342);
    path41.cubicTo(800.341, 353.342, 802.203, 354.532, 802.203, 357.262);
    path41.cubicTo(802.203, 359.992, 800.341, 361.182, 798.591, 361.182);
    path41.cubicTo(796.841, 361.182, 794.979, 359.992, 794.979, 357.262);
    path41.cubicTo(794.979, 354.532, 796.841, 353.342, 798.591, 353.342);
    path41.close();
    path41.moveTo(808.599, 354.574);
    path41.lineTo(805.071, 354.574);
    path41.lineTo(805.071, 361);
    path41.lineTo(803.797, 361);
    path41.lineTo(803.797, 353.468);
    path41.lineTo(808.599, 353.468);
    path41.lineTo(808.599, 354.574);
    path41.close();
    path41.moveTo(815.339, 353.468);
    path41.lineTo(815.339, 361);
    path41.lineTo(814.065, 361);
    path41.lineTo(814.065, 354.574);
    path41.lineTo(811.531, 354.574);
    path41.lineTo(811.419, 356.394);
    path41.cubicTo(811.237, 359.432, 810.579, 361, 808.829, 361);
    path41.lineTo(808.591, 361);
    path41.lineTo(808.591, 359.894);
    path41.lineTo(808.731, 359.894);
    path41.cubicTo(809.403, 359.894, 810.047, 359.166, 810.201, 356.044);
    path41.lineTo(810.313, 353.468);
    path41.lineTo(815.339, 353.468);
    path41.close();
    path41.moveTo(822.172, 357.85);
    path41.lineTo(822.172, 357.374);
    path41.cubicTo(819.862, 357.598, 818.392, 357.948, 818.392, 358.984);
    path41.cubicTo(818.392, 359.698, 818.938, 360.174, 819.848, 360.174);
    path41.cubicTo(821.038, 360.174, 822.172, 359.628, 822.172, 357.85);
    path41.close();
    path41.moveTo(819.568, 361.182);
    path41.cubicTo(818.154, 361.182, 816.978, 360.398, 816.978, 359.012);
    path41.cubicTo(816.978, 357.234, 818.994, 356.702, 822.074, 356.366);
    path41.lineTo(822.074, 356.184);
    path41.cubicTo(822.074, 354.798, 821.318, 354.35, 820.366, 354.35);
    path41.cubicTo(819.302, 354.35, 818.7, 354.91, 818.644, 355.848);
    path41.lineTo(817.328, 355.848);
    path41.cubicTo(817.44, 354.224, 818.896, 353.314, 820.352, 353.314);
    path41.cubicTo(822.438, 353.314, 823.362, 354.294, 823.348, 356.422);
    path41.lineTo(823.334, 358.158);
    path41.cubicTo(823.32, 359.432, 823.376, 360.286, 823.53, 361);
    path41.lineTo(822.242, 361);
    path41.cubicTo(822.2, 360.72, 822.158, 360.412, 822.144, 359.964);
    path41.cubicTo(821.682, 360.748, 820.912, 361.182, 819.568, 361.182);
    path41.close();
    path41.moveTo(834.598, 353.468);
    path41.lineTo(834.598, 361);
    path41.lineTo(825.316, 361);
    path41.lineTo(825.316, 353.468);
    path41.lineTo(826.59, 353.468);
    path41.lineTo(826.59, 359.894);
    path41.lineTo(829.32, 359.894);
    path41.lineTo(829.32, 353.468);
    path41.lineTo(830.594, 353.468);
    path41.lineTo(830.594, 359.894);
    path41.lineTo(833.324, 359.894);
    path41.lineTo(833.324, 353.468);
    path41.lineTo(834.598, 353.468);
    path41.close();
    path41.moveTo(843.34, 357.654);
    path41.lineTo(837.544, 357.654);
    path41.cubicTo(837.586, 359.278, 838.762, 360.062, 839.868, 360.062);
    path41.cubicTo(840.988, 360.062, 841.604, 359.558, 841.926, 358.816);
    path41.lineTo(843.242, 358.816);
    path41.cubicTo(842.906, 360.104, 841.702, 361.182, 839.868, 361.182);
    path41.cubicTo(837.488, 361.182, 836.172, 359.474, 836.172, 357.248);
    path41.cubicTo(836.172, 354.854, 837.768, 353.342, 839.826, 353.342);
    path41.cubicTo(842.136, 353.342, 843.494, 355.26, 843.34, 357.654);
    path41.close();
    path41.moveTo(839.826, 354.434);
    path41.cubicTo(838.706, 354.434, 837.67, 355.05, 837.558, 356.562);
    path41.lineTo(841.996, 356.562);
    path41.cubicTo(841.954, 355.498, 841.184, 354.434, 839.826, 354.434);
    path41.close();
    path41.moveTo(851.18, 361);
    path41.lineTo(849.906, 361);
    path41.lineTo(849.906, 357.71);
    path41.lineTo(846.182, 357.71);
    path41.lineTo(846.182, 361);
    path41.lineTo(844.908, 361);
    path41.lineTo(844.908, 353.468);
    path41.lineTo(846.182, 353.468);
    path41.lineTo(846.182, 356.604);
    path41.lineTo(849.906, 356.604);
    path41.lineTo(849.906, 353.468);
    path41.lineTo(851.18, 353.468);
    path41.lineTo(851.18, 361);
    path41.close();
    path41.moveTo(858.496, 361);
    path41.lineTo(858.496, 355.316);
    path41.lineTo(854.604, 361);
    path41.lineTo(853.33, 361);
    path41.lineTo(853.33, 353.468);
    path41.lineTo(854.604, 353.468);
    path41.lineTo(854.604, 359.152);
    path41.lineTo(858.496, 353.468);
    path41.lineTo(859.77, 353.468);
    path41.lineTo(859.77, 361);
    path41.lineTo(858.496, 361);
    path41.close();
    path41.moveTo(868.51, 357.654);
    path41.lineTo(862.714, 357.654);
    path41.cubicTo(862.756, 359.278, 863.932, 360.062, 865.038, 360.062);
    path41.cubicTo(866.158, 360.062, 866.774, 359.558, 867.096, 358.816);
    path41.lineTo(868.412, 358.816);
    path41.cubicTo(868.076, 360.104, 866.872, 361.182, 865.038, 361.182);
    path41.cubicTo(862.658, 361.182, 861.342, 359.474, 861.342, 357.248);
    path41.cubicTo(861.342, 354.854, 862.938, 353.342, 864.996, 353.342);
    path41.cubicTo(867.306, 353.342, 868.664, 355.26, 868.51, 357.654);
    path41.close();
    path41.moveTo(864.996, 354.434);
    path41.cubicTo(863.876, 354.434, 862.84, 355.05, 862.728, 356.562);
    path41.lineTo(867.166, 356.562);
    path41.cubicTo(867.124, 355.498, 866.354, 354.434, 864.996, 354.434);
    path41.close();
    Paint paint41 = Paint();
    paint41.color = const Color(0xFF000000);
    canvas.drawPath(path41, paint41);

    var path42 = Path()..fillType = PathFillType.nonZero;
    path42.moveTo(108, 367);
    path42.lineTo(109, 367);
    path42.lineTo(109, 391);
    path42.lineTo(108, 391);
    path42.close();
    Paint paint42 = Paint();
    paint42.color = const Color(0x03FFFFFF);
    canvas.drawPath(path42, paint42);
  }

  @override
  bool shouldRepaint(covariant BottomPainter oldDelegate) {
    return false;
  }
}
